{"ast":null,"code":"import _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { getTodayTime, getMonthName } from '../util/index';\nvar ROW = 4;\nvar COL = 3;\n\nfunction chooseMonth(month) {\n  var next = this.state.value.clone();\n  next.month(month);\n  this.setAndSelectValue(next);\n}\n\nfunction noop() {}\n\nvar MonthTable = function (_Component) {\n  _inherits(MonthTable, _Component);\n\n  function MonthTable(props) {\n    _classCallCheck(this, MonthTable);\n\n    var _this = _possibleConstructorReturn(this, (MonthTable.__proto__ || Object.getPrototypeOf(MonthTable)).call(this, props));\n\n    _this.state = {\n      value: props.value\n    };\n    return _this;\n  }\n\n  _createClass(MonthTable, [{\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      if ('value' in nextProps) {\n        this.setState({\n          value: nextProps.value\n        });\n      }\n    }\n  }, {\n    key: 'setAndSelectValue',\n    value: function setAndSelectValue(value) {\n      this.setState({\n        value: value\n      });\n      this.props.onSelect(value);\n    }\n  }, {\n    key: 'months',\n    value: function months() {\n      var value = this.state.value;\n      var current = value.clone();\n      var months = [];\n      var index = 0;\n\n      for (var rowIndex = 0; rowIndex < ROW; rowIndex++) {\n        months[rowIndex] = [];\n\n        for (var colIndex = 0; colIndex < COL; colIndex++) {\n          current.month(index);\n          var content = getMonthName(current);\n          months[rowIndex][colIndex] = {\n            value: index,\n            content: content,\n            title: content\n          };\n          index++;\n        }\n      }\n\n      return months;\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var props = this.props;\n      var value = this.state.value;\n      var today = getTodayTime(value);\n      var months = this.months();\n      var currentMonth = value.month();\n      var prefixCls = props.prefixCls,\n          locale = props.locale,\n          contentRender = props.contentRender,\n          cellRender = props.cellRender;\n      var monthsEls = months.map(function (month, index) {\n        var tds = month.map(function (monthData) {\n          var _classNameMap;\n\n          var disabled = false;\n\n          if (props.disabledDate) {\n            var testValue = value.clone();\n            testValue.month(monthData.value);\n            disabled = props.disabledDate(testValue);\n          }\n\n          var classNameMap = (_classNameMap = {}, _defineProperty(_classNameMap, prefixCls + '-cell', 1), _defineProperty(_classNameMap, prefixCls + '-cell-disabled', disabled), _defineProperty(_classNameMap, prefixCls + '-selected-cell', monthData.value === currentMonth), _defineProperty(_classNameMap, prefixCls + '-current-cell', today.year() === value.year() && monthData.value === today.month()), _classNameMap);\n          var cellEl = void 0;\n\n          if (cellRender) {\n            var currentValue = value.clone();\n            currentValue.month(monthData.value);\n            cellEl = cellRender(currentValue, locale);\n          } else {\n            var content = void 0;\n\n            if (contentRender) {\n              var _currentValue = value.clone();\n\n              _currentValue.month(monthData.value);\n\n              content = contentRender(_currentValue, locale);\n            } else {\n              content = monthData.content;\n            }\n\n            cellEl = React.createElement('a', {\n              className: prefixCls + '-month'\n            }, content);\n          }\n\n          return React.createElement('td', {\n            role: 'gridcell',\n            key: monthData.value,\n            onClick: disabled ? null : chooseMonth.bind(_this2, monthData.value),\n            title: monthData.title,\n            className: classnames(classNameMap)\n          }, cellEl);\n        });\n        return React.createElement('tr', {\n          key: index,\n          role: 'row'\n        }, tds);\n      });\n      return React.createElement('table', {\n        className: prefixCls + '-table',\n        cellSpacing: '0',\n        role: 'grid'\n      }, React.createElement('tbody', {\n        className: prefixCls + '-tbody'\n      }, monthsEls));\n    }\n  }]);\n\n  return MonthTable;\n}(Component);\n\nMonthTable.defaultProps = {\n  onSelect: noop\n};\nMonthTable.propTypes = {\n  onSelect: PropTypes.func,\n  cellRender: PropTypes.func,\n  prefixCls: PropTypes.string,\n  value: PropTypes.object\n};\nexport default MonthTable;","map":null,"metadata":{},"sourceType":"module"}
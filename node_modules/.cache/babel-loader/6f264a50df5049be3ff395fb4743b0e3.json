{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\OBE_Management_System(GITHUB)\\\\OBE-frontend\\\\test\\\\src\\\\component\\\\Teacher_Framework\\\\create_quizzes\\\\postquestions.js\";\nimport React, { Component } from \"react\";\nimport { Form, Input, Button, Col, Row, Select } from \"antd\";\nimport { MinusCircleOutlined, PlusOutlined } from \"@ant-design/icons\";\nvar rules = [{\n  required: true\n}];\n\nvar DynamicFieldSet = function DynamicFieldSet() {\n  var onFinish = function onFinish(values) {\n    console.log(\"Received values of form:\", values);\n  };\n\n  var Option = Select.Option;\n\n  function handleChange(value) {\n    console.log(\"selected \".concat(value));\n  }\n\n  return React.createElement(Form, {\n    onFinish: onFinish,\n    className: \"my-form\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }, React.createElement(Form.List, {\n    name: \"users\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, function (fields, _ref) {\n    var add = _ref.add,\n        remove = _ref.remove;\n\n    /**\r\n     * `fields` internal fill with `name`, `key`, `fieldKey` props.\r\n     * You can extends this into sub field to support multiple dynamic fields.\r\n     */\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, fields.map(function (field, index) {\n      return React.createElement(Row, {\n        key: field.key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, React.createElement(Form.Item, {\n        name: [field.name, \"quetion_set\"],\n        fieldKey: [field.fieldKey, \"quetion_set\"],\n        rules: rules,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(Input, {\n        placeholder: \"Quetion Set\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(Form.Item, {\n        name: [field.name, \"clo\"],\n        fieldKey: [field.fieldKey, \"clo\"],\n        rules: rules,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(Select, {\n        defaultValue: \"lucy\",\n        style: {\n          width: 120\n        },\n        onChange: handleChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Option, {\n        value: \"jack\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Jack\"), React.createElement(Option, {\n        value: \"lucy\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, \"Lucy\"), React.createElement(Option, {\n        value: \"disabled\",\n        disabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Disabled\"), React.createElement(Option, {\n        value: \"Yiminghe\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, \"yiminghe\")))), React.createElement(Col, {\n        flex: \"none\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(MinusCircleOutlined, {\n        className: \"dynamic-delete-button\",\n        onClick: function onClick() {\n          remove(field.name);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      })));\n    }), React.createElement(Form.Item, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"dashed\",\n      onClick: function onClick() {\n        add();\n      },\n      style: {\n        width: \"100%\"\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }, React.createElement(PlusOutlined, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }), \" Add field\")));\n  }), React.createElement(Form.Item, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(Button, {\n    type: \"primary\",\n    htmlType: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84\n    },\n    __self: this\n  }, \"Submit\")));\n};\n\nexport default postquestions;","map":{"version":3,"sources":["C:/Users/Shahnoor Khalidi/Desktop/OBE_Management_System(GITHUB)/OBE-frontend/test/src/component/Teacher_Framework/create_quizzes/postquestions.js"],"names":["React","Component","Form","Input","Button","Col","Row","Select","MinusCircleOutlined","PlusOutlined","rules","required","DynamicFieldSet","onFinish","values","console","log","Option","handleChange","value","fields","add","remove","map","field","index","key","name","fieldKey","width","postquestions"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Form, Input, Button, Col, Row, Select } from \"antd\";\r\nimport { MinusCircleOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nconst rules = [{ required: true }];\r\n\r\nconst DynamicFieldSet = () => {\r\n  const onFinish = (values) => {\r\n    console.log(\"Received values of form:\", values);\r\n  };\r\n  const { Option } = Select;\r\n\r\n  function handleChange(value) {\r\n    console.log(`selected ${value}`);\r\n  }\r\n\r\n  return (\r\n    <Form onFinish={onFinish} className=\"my-form\">\r\n      <Form.List name=\"users\">\r\n        {(fields, { add, remove }) => {\r\n          /**\r\n           * `fields` internal fill with `name`, `key`, `fieldKey` props.\r\n           * You can extends this into sub field to support multiple dynamic fields.\r\n           */\r\n          return (\r\n            <div>\r\n              {fields.map((field, index) => (\r\n                <Row key={field.key}>\r\n                  <Col>\r\n                    <Form.Item\r\n                      name={[field.name, \"quetion_set\"]}\r\n                      fieldKey={[field.fieldKey, \"quetion_set\"]}\r\n                      rules={rules}\r\n                    >\r\n                      <Input placeholder=\"Quetion Set\" />\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col>\r\n                    <Form.Item\r\n                      name={[field.name, \"clo\"]}\r\n                      fieldKey={[field.fieldKey, \"clo\"]}\r\n                      rules={rules}\r\n                    >\r\n                      <Select\r\n                        defaultValue=\"lucy\"\r\n                        style={{ width: 120 }}\r\n                        onChange={handleChange}\r\n                      >\r\n                        <Option value=\"jack\">Jack</Option>\r\n                        <Option value=\"lucy\">Lucy</Option>\r\n                        <Option value=\"disabled\" disabled>\r\n                          Disabled\r\n                        </Option>\r\n                        <Option value=\"Yiminghe\">yiminghe</Option>\r\n                      </Select>\r\n                    </Form.Item>\r\n                  </Col>\r\n                  <Col flex=\"none\">\r\n                    <MinusCircleOutlined\r\n                      className=\"dynamic-delete-button\"\r\n                      onClick={() => {\r\n                        remove(field.name);\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              ))}\r\n              <Form.Item>\r\n                <Button\r\n                  type=\"dashed\"\r\n                  onClick={() => {\r\n                    add();\r\n                  }}\r\n                  style={{ width: \"100%\" }}\r\n                >\r\n                  <PlusOutlined /> Add field\r\n                </Button>\r\n              </Form.Item>\r\n            </div>\r\n          );\r\n        }}\r\n      </Form.List>\r\n\r\n      <Form.Item>\r\n        <Button type=\"primary\" htmlType=\"submit\">\r\n          Submit\r\n        </Button>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default postquestions;\r\n"]},"metadata":{},"sourceType":"module"}
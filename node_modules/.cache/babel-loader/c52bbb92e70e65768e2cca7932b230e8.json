{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction PressEvent(nativeEvent) {\n  var _this = this;\n\n  this.nativeEvent = nativeEvent;\n  ['type', 'currentTarget', 'target', 'touches', 'changedTouches'].forEach(function (m) {\n    _this[m] = nativeEvent[m];\n  });\n\n  if (!nativeEvent.$pressSeq) {\n    nativeEvent.$pressSeq = 1;\n  } else {\n    nativeEvent.$pressSeq += 1;\n  }\n\n  this.$pressSeq = nativeEvent.$pressSeq;\n}\n\nPressEvent.prototype = _extends({}, PressEvent.prototype, {\n  preventDefault: function preventDefault() {\n    this.nativeEvent.preventDefault();\n  },\n  stopPropagation: function stopPropagation() {\n    var nativeEvent = this.nativeEvent,\n        $pressSeq = this.$pressSeq;\n\n    if (nativeEvent.$stopPressSeq) {\n      return;\n    }\n\n    nativeEvent.$stopPressSeq = $pressSeq;\n  }\n}); // because of setTimeout, can not depend on fire order\n\nexport function shouldFirePress(e) {\n  var nativeEvent = e.nativeEvent,\n      $pressSeq = e.$pressSeq;\n\n  if (!nativeEvent.$stopPressSeq) {\n    return true;\n  }\n\n  return nativeEvent.$stopPressSeq >= $pressSeq;\n}\nexport default PressEvent;","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\src\\\\component\\\\Chairman_Framework\\\\clo\\\\POSTCLO.js\";\nimport React, { Component } from \"react\";\nimport Select from \"react-select\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { addClos } from \"../../../actions/clos\";\nimport { getPlos } from \"../../../actions/plos\";\nimport { getCongitive } from \"../../../actions/chairman_framework_actions/cognitive\";\nimport { getAffective } from \"../../../actions/chairman_framework_actions/affectives\";\nexport var POSTCLO =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(POSTCLO, _Component);\n\n  function POSTCLO() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, POSTCLO);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(POSTCLO)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      code: \"\",\n      description: \"\",\n      plos: null,\n      cognitives: null,\n      affectives: null,\n      selectedcognitiveid: null,\n      verbs: null\n    };\n\n    _this.onChangeplos = function (selected) {\n      console.log(selected);\n\n      _this.setState({\n        plos: selected\n      });\n    };\n\n    _this.onChangecognitives = function (selected) {\n      console.log(selected);\n\n      if (selected !== null) {\n        _this.setState({\n          cognitives: selected,\n          selectedcognitiveid: selected[0].value\n        });\n      } else {\n        _this.setState({\n          cognitives: null,\n          selectedcognitiveid: null\n        });\n      }\n    };\n\n    _this.onChangeverbs = function (selected) {\n      console.log(selected);\n\n      if (_this.selectedcognitiveid !== null) {\n        _this.setState({\n          verbs: selected\n        });\n      }\n    };\n\n    _this.onChangeaffectives = function (selected) {\n      console.log(selected);\n\n      _this.setState({\n        affectives: selected\n      });\n    };\n\n    _this.onChange = function (e) {\n      return _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.onSubmit = function (e) {\n      e.preventDefault();\n      var _this$state = _this.state,\n          code = _this$state.code,\n          description = _this$state.description,\n          plos = _this$state.plos,\n          cognitives = _this$state.cognitives,\n          affectives = _this$state.affectives;\n      var clo = {\n        code: code,\n        description: description,\n        plos: plos,\n        cognitives: cognitives,\n        affectives: affectives\n      };\n      clo.plos = [];\n      clo.cognitives = [];\n      clo.affectives = [];\n\n      for (var i in plos) {\n        clo.plos.push(plos[i].value);\n      }\n\n      for (var _i in cognitives) {\n        clo.cognitives.push(cognitives[_i].value);\n      }\n\n      for (var _i2 in affectives) {\n        clo.affectives.push(affectives[_i2].value);\n      } //console.log(clo);\n\n\n      _this.props.addClos(clo);\n    };\n\n    _this.verbsoptions = function () {\n      if (_this.state.selectedcognitiveid === null) {\n        return null;\n      }\n\n      var verbsoptions = [];\n      console.log(_this.props.cognitives);\n\n      for (var i in _this.props.cognitives) {\n        //console.log(this.props.cognitives);\n        if (_this.state.selectedcognitiveid === _this.props.cognitives[i]) {\n          for (var j in _this.props.cognitives[i].verbs) {\n            verbsoptions.push({\n              value: _this.props.cognitives[i].verbs[j],\n              label: _this.props.cognitives[i].verbs[j]\n            });\n          }\n        }\n      } //console.log(options)\n\n\n      return verbsoptions;\n    };\n\n    return _this;\n  }\n\n  _createClass(POSTCLO, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getPlos();\n      this.props.getCongitive();\n      this.props.getAffective();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.state.selectedcognitiveid);\n      console.log(this.verbsoptions()); // console.log(this.state.cognitives);\n      // console.log(this.props.cognitives);\n\n      var _this$state2 = this.state,\n          code = _this$state2.code,\n          description = _this$state2.description,\n          plos = _this$state2.plos,\n          cognitives = _this$state2.cognitives,\n          affectives = _this$state2.affectives;\n      var optionplos = [];\n      var optioncognitives = [];\n      var optionaffectives = []; //console.log(this.props.plos.length);\n\n      if (this.props.plos.length > 0) {\n        for (var i in this.props.plos) {\n          optionplos.push({\n            value: this.props.plos[i].id,\n            label: this.props.plos[i].code\n          });\n        }\n      }\n\n      if (this.props.cognitives.length > 0) {\n        for (var _i3 in this.props.cognitives) {\n          optioncognitives.push({\n            value: this.props.cognitives[_i3].id,\n            label: this.props.cognitives[_i3].code\n          });\n        }\n      }\n\n      if (this.props.affectives.length > 0) {\n        for (var _i4 in this.props.affectives) {\n          optionaffectives.push({\n            value: this.props.affectives[_i4].id,\n            label: this.props.affectives[_i4].code\n          });\n        }\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, \"Add CLO\"), React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      }, \"code\"), React.createElement(\"input\", {\n        className: \"form-control\",\n        type: \"text\",\n        name: \"code\",\n        onChange: this.onChange,\n        value: code,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"Description\"), React.createElement(\"input\", {\n        className: \"form-control\",\n        type: \"text\",\n        name: \"description\",\n        onChange: this.onChange,\n        value: description,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }, \"Select PLO\"), React.createElement(Select, {\n        value: plos,\n        onChange: this.onChangeplos,\n        options: optionplos,\n        isMulti: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"Select Cognitive Domain\"), React.createElement(Select, {\n        value: cognitives,\n        onChange: this.onChangecognitives,\n        options: optioncognitives,\n        isMulti: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \"Select Verb\"), React.createElement(Select, {\n        value: this.state.verbs,\n        onChange: this.onChangeverbs,\n        options: this.verbsoptions(),\n        isDisabled: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, \"Select Affective Domain\"), React.createElement(Select, {\n        value: affectives,\n        onChange: this.onChangeaffectives,\n        options: optionaffectives,\n        isMulti: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 207\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 208\n        },\n        __self: this\n      }, \"Submit\"))));\n    }\n  }]);\n\n  return POSTCLO;\n}(Component);\nPOSTCLO.propTypes = {\n  plos: PropTypes.func.isRequired,\n  getPlos: PropTypes.func.isRequired,\n  getCongitive: PropTypes.func.isRequired,\n  getAffective: PropTypes.func.isRequired,\n  addClo: PropTypes.func.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    plos: state.plos.plos,\n    cognitives: state.cognitives.cognitives,\n    affectives: state.affectives.affectives\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addClos: addClos,\n  getPlos: getPlos,\n  getCongitive: getCongitive,\n  getAffective: getAffective\n})(POSTCLO);","map":{"version":3,"sources":["C:/Users/Shahnoor Khalidi/Desktop/test/test/src/component/Chairman_Framework/clo/POSTCLO.js"],"names":["React","Component","Select","connect","PropTypes","addClos","getPlos","getCongitive","getAffective","POSTCLO","state","code","description","plos","cognitives","affectives","selectedcognitiveid","verbs","onChangeplos","selected","console","log","setState","onChangecognitives","value","onChangeverbs","onChangeaffectives","onChange","e","target","name","onSubmit","preventDefault","clo","i","push","props","verbsoptions","j","label","optionplos","optioncognitives","optionaffectives","length","id","propTypes","func","isRequired","addClo","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { addClos } from \"../../../actions/clos\";\r\nimport { getPlos } from \"../../../actions/plos\";\r\nimport { getCongitive } from \"../../../actions/chairman_framework_actions/cognitive\";\r\nimport { getAffective } from \"../../../actions/chairman_framework_actions/affectives\";\r\n\r\nexport class POSTCLO extends Component {\r\n  state = {\r\n    code: \"\",\r\n    description: \"\",\r\n    plos: null,\r\n    cognitives: null,\r\n    affectives: null,\r\n    selectedcognitiveid: null,\r\n    verbs: null\r\n  };\r\n  static propTypes = {\r\n    plos: PropTypes.func.isRequired,\r\n    getPlos: PropTypes.func.isRequired,\r\n    getCongitive: PropTypes.func.isRequired,\r\n    getAffective: PropTypes.func.isRequired,\r\n    addClo: PropTypes.func.isRequired\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.getPlos();\r\n    this.props.getCongitive();\r\n    this.props.getAffective();\r\n  }\r\n  onChangeplos = selected => {\r\n    console.log(selected);\r\n    this.setState({\r\n      plos: selected\r\n    });\r\n  };\r\n  onChangecognitives = selected => {\r\n    console.log(selected);\r\n    if (selected !== null) {\r\n      this.setState({\r\n        cognitives: selected,\r\n        selectedcognitiveid: selected[0].value\r\n      });\r\n    } else {\r\n      this.setState({\r\n        cognitives: null,\r\n        selectedcognitiveid: null\r\n      });\r\n    }\r\n  };\r\n\r\n  onChangeverbs = selected => {\r\n    console.log(selected);\r\n    if (this.selectedcognitiveid !== null) {\r\n      this.setState({\r\n        verbs: selected\r\n      });\r\n    }\r\n  };\r\n\r\n  onChangeaffectives = selected => {\r\n    console.log(selected);\r\n    this.setState({\r\n      affectives: selected\r\n    });\r\n  };\r\n  onChange = e =>\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const { code, description, plos, cognitives, affectives } = this.state;\r\n    const clo = {\r\n      code,\r\n      description,\r\n      plos,\r\n      cognitives,\r\n      affectives\r\n    };\r\n    clo.plos = [];\r\n    clo.cognitives = [];\r\n    clo.affectives = [];\r\n    for (let i in plos) {\r\n      clo.plos.push(plos[i].value);\r\n    }\r\n    for (let i in cognitives) {\r\n      clo.cognitives.push(cognitives[i].value);\r\n    }\r\n    for (let i in affectives) {\r\n      clo.affectives.push(affectives[i].value);\r\n    }\r\n    //console.log(clo);\r\n    this.props.addClos(clo);\r\n  };\r\n\r\n  verbsoptions = () => {\r\n    if (this.state.selectedcognitiveid === null) {\r\n      return null;\r\n    }\r\n    let verbsoptions = [];\r\n    console.log(this.props.cognitives);\r\n    for (let i in this.props.cognitives) {\r\n      //console.log(this.props.cognitives);\r\n      if (this.state.selectedcognitiveid === this.props.cognitives[i]) {\r\n        for (let j in this.props.cognitives[i].verbs) {\r\n          verbsoptions.push({\r\n            value: this.props.cognitives[i].verbs[j],\r\n            label: this.props.cognitives[i].verbs[j]\r\n          });\r\n        }\r\n      }\r\n    }\r\n    //console.log(options)\r\n    return verbsoptions;\r\n  };\r\n\r\n  render() {\r\n    console.log(this.state.selectedcognitiveid);\r\n    console.log(this.verbsoptions());\r\n    // console.log(this.state.cognitives);\r\n    // console.log(this.props.cognitives);\r\n    const { code, description, plos, cognitives, affectives } = this.state;\r\n    let optionplos = [];\r\n    let optioncognitives = [];\r\n    let optionaffectives = [];\r\n    //console.log(this.props.plos.length);\r\n\r\n    if (this.props.plos.length > 0) {\r\n      for (let i in this.props.plos) {\r\n        optionplos.push({\r\n          value: this.props.plos[i].id,\r\n          label: this.props.plos[i].code\r\n        });\r\n      }\r\n    }\r\n    if (this.props.cognitives.length > 0) {\r\n      for (let i in this.props.cognitives) {\r\n        optioncognitives.push({\r\n          value: this.props.cognitives[i].id,\r\n          label: this.props.cognitives[i].code\r\n        });\r\n      }\r\n    }\r\n    if (this.props.affectives.length > 0) {\r\n      for (let i in this.props.affectives) {\r\n        optionaffectives.push({\r\n          value: this.props.affectives[i].id,\r\n          label: this.props.affectives[i].code\r\n        });\r\n      }\r\n    }\r\n    return (\r\n      <div>\r\n        <h1>Add CLO</h1>\r\n        <form onSubmit={this.onSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>code</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"code\"\r\n              onChange={this.onChange}\r\n              value={code}\r\n            ></input>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Description</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"description\"\r\n              onChange={this.onChange}\r\n              value={description}\r\n            ></input>\r\n            <label>Select PLO</label>\r\n            <Select\r\n              value={plos}\r\n              onChange={this.onChangeplos}\r\n              options={optionplos}\r\n              isMulti\r\n            />\r\n            <label>Select Cognitive Domain</label>\r\n            <Select\r\n              value={cognitives}\r\n              onChange={this.onChangecognitives}\r\n              options={optioncognitives}\r\n              isMulti\r\n            />\r\n            <label>Select Verb</label>\r\n            <Select\r\n              value={this.state.verbs}\r\n              onChange={this.onChangeverbs}\r\n              options={this.verbsoptions()}\r\n              isDisabled={false}\r\n            />\r\n            <label>Select Affective Domain</label>\r\n            <Select\r\n              value={affectives}\r\n              onChange={this.onChangeaffectives}\r\n              options={optionaffectives}\r\n              isMulti\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  plos: state.plos.plos,\r\n  cognitives: state.cognitives.cognitives,\r\n  affectives: state.affectives.affectives\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  addClos,\r\n  getPlos,\r\n  getCongitive,\r\n  getAffective\r\n})(POSTCLO);\r\n"]},"metadata":{},"sourceType":"module"}
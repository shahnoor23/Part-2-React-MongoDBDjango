{"ast":null,"code":"import _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport { setTransform, isTransformSupported } from './utils';\nimport React from 'react';\nimport classnames from 'classnames';\nvar isDev = process.env.NODE_ENV !== 'production';\nexport function getScroll(w, top) {\n  var ret = w['page' + (top ? 'Y' : 'X') + 'Offset'];\n  var method = 'scroll' + (top ? 'Top' : 'Left');\n\n  if (typeof ret !== 'number') {\n    var d = w.document; // ie6,7,8 standard mode\n\n    ret = d.documentElement[method];\n\n    if (typeof ret !== 'number') {\n      // quirks mode\n      ret = d.body[method];\n    }\n  }\n\n  return ret;\n}\n\nfunction offset(elem) {\n  var box = void 0;\n  var x = void 0;\n  var y = void 0;\n  var doc = elem.ownerDocument;\n  var body = doc.body;\n  var docElem = doc && doc.documentElement;\n  box = elem.getBoundingClientRect();\n  x = box.left;\n  y = box.top;\n  x -= docElem.clientLeft || body.clientLeft || 0;\n  y -= docElem.clientTop || body.clientTop || 0;\n  var w = doc.defaultView || doc.parentWindow;\n  x += getScroll(w);\n  y += getScroll(w, true);\n  return {\n    left: x,\n    top: y\n  };\n}\n\nfunction _componentDidUpdate(component, init) {\n  var styles = component.props.styles;\n  var wrapNode = component.nav || component.root;\n  var containerOffset = offset(wrapNode);\n  var inkBarNode = component.inkBar;\n  var activeTab = component.activeTab;\n  var inkBarNodeStyle = inkBarNode.style;\n  var tabBarPosition = component.props.tabBarPosition;\n\n  if (init) {\n    // prevent mount animation\n    inkBarNodeStyle.display = 'none';\n  }\n\n  if (activeTab) {\n    var tabNode = activeTab;\n    var tabOffset = offset(tabNode);\n    var transformSupported = isTransformSupported(inkBarNodeStyle);\n\n    if (tabBarPosition === 'top' || tabBarPosition === 'bottom') {\n      var left = tabOffset.left - containerOffset.left;\n      var width = tabNode.offsetWidth; // If tabNode'width width equal to wrapNode'width when tabBarPosition is top or bottom\n      // It means no css working, then ink bar should not have width until css is loaded\n      // Fix https://github.com/ant-design/ant-design/issues/7564\n\n      if (width === wrapNode.offsetWidth) {\n        width = 0;\n      } else if (styles.inkBar && styles.inkBar.width !== undefined) {\n        width = parseFloat(styles.inkBar.width, 10);\n\n        if (width) {\n          left = left + (tabNode.offsetWidth - width) / 2;\n        }\n      } // use 3d gpu to optimize render\n\n\n      if (transformSupported) {\n        setTransform(inkBarNodeStyle, 'translate3d(' + left + 'px,0,0)');\n        inkBarNodeStyle.width = width + 'px';\n        inkBarNodeStyle.height = '';\n      } else {\n        inkBarNodeStyle.left = left + 'px';\n        inkBarNodeStyle.top = '';\n        inkBarNodeStyle.bottom = '';\n        inkBarNodeStyle.right = wrapNode.offsetWidth - left - width + 'px';\n      }\n    } else {\n      var top = tabOffset.top - containerOffset.top;\n      var height = tabNode.offsetHeight;\n\n      if (styles.inkBar && styles.inkBar.height !== undefined) {\n        height = parseFloat(styles.inkBar.height, 10);\n\n        if (height) {\n          top = top + (tabNode.offsetHeight - height) / 2;\n        }\n      }\n\n      if (transformSupported) {\n        setTransform(inkBarNodeStyle, 'translate3d(0,' + top + 'px,0)');\n        inkBarNodeStyle.height = height + 'px';\n        inkBarNodeStyle.width = '';\n      } else {\n        inkBarNodeStyle.left = '';\n        inkBarNodeStyle.right = '';\n        inkBarNodeStyle.top = top + 'px';\n        inkBarNodeStyle.bottom = wrapNode.offsetHeight - top - height + 'px';\n      }\n    }\n  }\n\n  inkBarNodeStyle.display = activeTab ? 'block' : 'none';\n}\n\nexport default {\n  getDefaultProps: function getDefaultProps() {\n    return {\n      inkBarAnimated: true\n    };\n  },\n  componentDidUpdate: function componentDidUpdate() {\n    _componentDidUpdate(this);\n  },\n  componentDidMount: function componentDidMount() {\n    var _this = this;\n\n    if (isDev) {\n      // https://github.com/ant-design/ant-design/issues/8678\n      this.timeout = setTimeout(function () {\n        _componentDidUpdate(_this, true);\n      }, 0);\n    } else {\n      _componentDidUpdate(this, true);\n    }\n  },\n  componentWillUnmount: function componentWillUnmount() {\n    clearTimeout(this.timeout);\n  },\n  getInkBarNode: function getInkBarNode() {\n    var _classnames;\n\n    var _props = this.props,\n        prefixCls = _props.prefixCls,\n        styles = _props.styles,\n        inkBarAnimated = _props.inkBarAnimated;\n    var className = prefixCls + '-ink-bar';\n    var classes = classnames((_classnames = {}, _defineProperty(_classnames, className, true), _defineProperty(_classnames, inkBarAnimated ? className + '-animated' : className + '-no-animated', true), _classnames));\n    return React.createElement('div', {\n      style: styles.inkBar,\n      className: classes,\n      key: 'inkBar',\n      ref: this.saveRef('inkBar')\n    });\n  }\n};","map":null,"metadata":{},"sourceType":"module"}
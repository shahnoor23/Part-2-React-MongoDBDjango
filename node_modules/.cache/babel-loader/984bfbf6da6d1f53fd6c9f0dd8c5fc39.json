{"ast":null,"code":"var availablePrefixs = ['moz', 'ms', 'webkit'];\n\nfunction requestAnimationFramePolyfill() {\n  var lastTime = 0;\n  return function (callback) {\n    var currTime = new Date().getTime();\n    var timeToCall = Math.max(0, 16 - (currTime - lastTime));\n    var id = window.setTimeout(function () {\n      callback(currTime + timeToCall);\n    }, timeToCall);\n    lastTime = currTime + timeToCall;\n    return id;\n  };\n}\n\nexport default function getRequestAnimationFrame() {\n  if (typeof window === 'undefined') {\n    return function () {};\n  }\n\n  if (window.requestAnimationFrame) {\n    // https://github.com/vuejs/vue/issues/4465\n    return window.requestAnimationFrame.bind(window);\n  }\n\n  var prefix = availablePrefixs.filter(function (key) {\n    return key + 'RequestAnimationFrame' in window;\n  })[0];\n  return prefix ? window[prefix + 'RequestAnimationFrame'] : requestAnimationFramePolyfill();\n}\nexport function cancelRequestAnimationFrame(id) {\n  if (typeof window === 'undefined') {\n    return null;\n  }\n\n  if (window.cancelAnimationFrame) {\n    return window.cancelAnimationFrame(id);\n  }\n\n  var prefix = availablePrefixs.filter(function (key) {\n    return key + 'CancelAnimationFrame' in window || key + 'CancelRequestAnimationFrame' in window;\n  })[0];\n  return prefix ? (window[prefix + 'CancelAnimationFrame'] || window[prefix + 'CancelRequestAnimationFrame']).call(this, id) : clearTimeout(id);\n}","map":null,"metadata":{},"sourceType":"module"}
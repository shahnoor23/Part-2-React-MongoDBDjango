{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\OBE_Management_System(GITHUB)\\\\OBE-frontend\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\OBE_Management_System(GITHUB)\\\\OBE-frontend\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport { GET_Assignment, ADD_Assignment, DELETE_Assignment, GET_Assignment_Detail, ADD_Assignment_Detail, DELETE_Assignment_Detail, GET_ASSIGNMENT_DETAIL_START, GET_ASSIGNMENT_DETAIL_SUCCESS, GET_ASSIGNMENT_DETAIL_FAIL } from \"../../actions/types\";\nimport { updateObject } from \"./../utility\";\nvar intialState = {\n  assignments: [],\n  currentAssignment: {}\n};\n\nvar getASNTDetailStart = function getASNTDetailStart(state, action) {\n  return updateObject(state, {\n    error: null,\n    loading: true\n  });\n};\n\nvar getASNTDetailSuccess = function getASNTDetailSuccess(state, action) {\n  return updateObject(state, {\n    currentAssignment: action.assignment,\n    error: null,\n    loading: false\n  });\n};\n\nvar getASNTDetailFail = function getASNTDetailFail(state, action) {\n  return updateObject(state, {\n    error: action.error,\n    loading: false\n  });\n};\n\nexport default function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : intialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_Assignment:\n      return _objectSpread({}, state, {\n        assignments: action.payload\n      });\n\n    case DELETE_Assignment:\n      return _objectSpread({}, state, {\n        assignments: state.assignments.filter(function (assignment) {\n          return assignment.id !== action.payload;\n        })\n      });\n\n    case ADD_Assignment:\n      return _objectSpread({}, state, {\n        assignments: [].concat(_toConsumableArray(state.assignments), [action.payload])\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:/Users/Shahnoor Khalidi/Desktop/OBE_Management_System(GITHUB)/OBE-frontend/test/src/reducers/teacher_framework_reducers/create_quizz.js"],"names":["GET_Assignment","ADD_Assignment","DELETE_Assignment","GET_Assignment_Detail","ADD_Assignment_Detail","DELETE_Assignment_Detail","GET_ASSIGNMENT_DETAIL_START","GET_ASSIGNMENT_DETAIL_SUCCESS","GET_ASSIGNMENT_DETAIL_FAIL","updateObject","intialState","assignments","currentAssignment","getASNTDetailStart","state","action","error","loading","getASNTDetailSuccess","assignment","getASNTDetailFail","type","payload","filter","id"],"mappings":";;AAAA,SACEA,cADF,EAEEC,cAFF,EAGEC,iBAHF,EAIEC,qBAJF,EAKEC,qBALF,EAMEC,wBANF,EAOEC,2BAPF,EAQEC,6BARF,EASEC,0BATF,QAUO,qBAVP;AAWA,SAASC,YAAT,QAA6B,cAA7B;AACA,IAAMC,WAAW,GAAG;AAClBC,EAAAA,WAAW,EAAE,EADK;AAElBC,EAAAA,iBAAiB,EAAE;AAFD,CAApB;;AAKA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAAQC,MAAR,EAAmB;AAC5C,SAAON,YAAY,CAACK,KAAD,EAAQ;AACzBE,IAAAA,KAAK,EAAE,IADkB;AAEzBC,IAAAA,OAAO,EAAE;AAFgB,GAAR,CAAnB;AAID,CALD;;AAOA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACJ,KAAD,EAAQC,MAAR,EAAmB;AAC9C,SAAON,YAAY,CAACK,KAAD,EAAQ;AACzBF,IAAAA,iBAAiB,EAAEG,MAAM,CAACI,UADD;AAEzBH,IAAAA,KAAK,EAAE,IAFkB;AAGzBC,IAAAA,OAAO,EAAE;AAHgB,GAAR,CAAnB;AAKD,CAND;;AAQA,IAAMG,iBAAiB,GAAG,SAApBA,iBAAoB,CAACN,KAAD,EAAQC,MAAR,EAAmB;AAC3C,SAAON,YAAY,CAACK,KAAD,EAAQ;AACzBE,IAAAA,KAAK,EAAED,MAAM,CAACC,KADW;AAEzBC,IAAAA,OAAO,EAAE;AAFgB,GAAR,CAAnB;AAID,CALD;;AAOA,eAAe,YAAuC;AAAA,MAA7BH,KAA6B,uEAArBJ,WAAqB;AAAA,MAARK,MAAQ;;AACpD,UAAQA,MAAM,CAACM,IAAf;AACE,SAAKrB,cAAL;AACE,+BACKc,KADL;AAEEH,QAAAA,WAAW,EAAEI,MAAM,CAACO;AAFtB;;AAKF,SAAKpB,iBAAL;AACE,+BACKY,KADL;AAEEH,QAAAA,WAAW,EAAEG,KAAK,CAACH,WAAN,CAAkBY,MAAlB,CACX,UAACJ,UAAD;AAAA,iBAAgBA,UAAU,CAACK,EAAX,KAAkBT,MAAM,CAACO,OAAzC;AAAA,SADW;AAFf;;AAMF,SAAKrB,cAAL;AACE,+BACKa,KADL;AAEEH,QAAAA,WAAW,+BAAMG,KAAK,CAACH,WAAZ,IAAyBI,MAAM,CAACO,OAAhC;AAFb;;AAKF;AACE,aAAOR,KAAP;AArBJ;AAuBD","sourcesContent":["import {\r\n  GET_Assignment,\r\n  ADD_Assignment,\r\n  DELETE_Assignment,\r\n  GET_Assignment_Detail,\r\n  ADD_Assignment_Detail,\r\n  DELETE_Assignment_Detail,\r\n  GET_ASSIGNMENT_DETAIL_START,\r\n  GET_ASSIGNMENT_DETAIL_SUCCESS,\r\n  GET_ASSIGNMENT_DETAIL_FAIL,\r\n} from \"../../actions/types\";\r\nimport { updateObject } from \"./../utility\";\r\nconst intialState = {\r\n  assignments: [],\r\n  currentAssignment: {},\r\n};\r\n\r\nconst getASNTDetailStart = (state, action) => {\r\n  return updateObject(state, {\r\n    error: null,\r\n    loading: true,\r\n  });\r\n};\r\n\r\nconst getASNTDetailSuccess = (state, action) => {\r\n  return updateObject(state, {\r\n    currentAssignment: action.assignment,\r\n    error: null,\r\n    loading: false,\r\n  });\r\n};\r\n\r\nconst getASNTDetailFail = (state, action) => {\r\n  return updateObject(state, {\r\n    error: action.error,\r\n    loading: false,\r\n  });\r\n};\r\n\r\nexport default function (state = intialState, action) {\r\n  switch (action.type) {\r\n    case GET_Assignment:\r\n      return {\r\n        ...state,\r\n        assignments: action.payload,\r\n      };\r\n\r\n    case DELETE_Assignment:\r\n      return {\r\n        ...state,\r\n        assignments: state.assignments.filter(\r\n          (assignment) => assignment.id !== action.payload\r\n        ),\r\n      };\r\n    case ADD_Assignment:\r\n      return {\r\n        ...state,\r\n        assignments: [...state.assignments, action.payload],\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
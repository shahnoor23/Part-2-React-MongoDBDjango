{"ast":null,"code":"import React from 'react';\nimport Notification from 'rc-notification';\nimport Icon from '../icon';\nvar defaultDuration = 3;\nvar defaultTop = void 0;\nvar messageInstance = void 0;\nvar key = 1;\nvar prefixCls = 'ant-message';\nvar getContainer = void 0;\n\nfunction getMessageInstance() {\n  messageInstance = messageInstance || Notification.newInstance({\n    prefixCls: prefixCls,\n    transitionName: 'move-up',\n    style: {\n      top: defaultTop\n    },\n    getContainer: getContainer\n  });\n  return messageInstance;\n}\n\nfunction notice(content) {\n  var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : defaultDuration;\n  var type = arguments[2];\n  var onClose = arguments[3];\n  var iconType = {\n    info: 'info-circle',\n    success: 'check-circle',\n    error: 'cross-circle',\n    warning: 'exclamation-circle',\n    loading: 'loading'\n  }[type];\n  var instance = getMessageInstance();\n  instance.notice({\n    key: key,\n    duration: duration,\n    style: {},\n    content: React.createElement('div', {\n      className: prefixCls + '-custom-content ' + prefixCls + '-' + type\n    }, React.createElement(Icon, {\n      type: iconType\n    }), React.createElement('span', null, content)),\n    onClose: onClose\n  });\n  return function () {\n    var target = key++;\n    return function () {\n      instance.removeNotice(target);\n    };\n  }();\n}\n\nexport default {\n  info: function info(content, duration, onClose) {\n    return notice(content, duration, 'info', onClose);\n  },\n  success: function success(content, duration, onClose) {\n    return notice(content, duration, 'success', onClose);\n  },\n  error: function error(content, duration, onClose) {\n    return notice(content, duration, 'error', onClose);\n  },\n  // Departed usage, please use warning()\n  warn: function warn(content, duration, onClose) {\n    return notice(content, duration, 'warning', onClose);\n  },\n  warning: function warning(content, duration, onClose) {\n    return notice(content, duration, 'warning', onClose);\n  },\n  loading: function loading(content, duration, onClose) {\n    return notice(content, duration, 'loading', onClose);\n  },\n  config: function config(options) {\n    if (options.top !== undefined) {\n      defaultTop = options.top;\n      messageInstance = null; // delete messageInstance for new defaultTop\n    }\n\n    if (options.duration !== undefined) {\n      defaultDuration = options.duration;\n    }\n\n    if (options.prefixCls !== undefined) {\n      prefixCls = options.prefixCls;\n    }\n\n    if (options.getContainer !== undefined) {\n      getContainer = options.getContainer;\n    }\n  },\n  destroy: function destroy() {\n    if (messageInstance) {\n      messageInstance.destroy();\n      messageInstance = null;\n    }\n  }\n};","map":null,"metadata":{},"sourceType":"module"}
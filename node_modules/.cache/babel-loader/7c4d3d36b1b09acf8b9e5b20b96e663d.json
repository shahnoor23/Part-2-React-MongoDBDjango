{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _rcTrigger = require('rc-trigger');\n\nvar _rcTrigger2 = _interopRequireDefault(_rcTrigger);\n\nvar _Menus = require('./Menus');\n\nvar _Menus2 = _interopRequireDefault(_Menus);\n\nvar _KeyCode = require('rc-util/lib/KeyCode');\n\nvar _KeyCode2 = _interopRequireDefault(_KeyCode);\n\nvar _arrayTreeFilter = require('array-tree-filter');\n\nvar _arrayTreeFilter2 = _interopRequireDefault(_arrayTreeFilter);\n\nvar _arrays = require('shallow-equal/arrays');\n\nvar _arrays2 = _interopRequireDefault(_arrays);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _defaults(obj, defaults) {\n  var keys = Object.getOwnPropertyNames(defaults);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = Object.getOwnPropertyDescriptor(defaults, key);\n\n    if (value && value.configurable && obj[key] === undefined) {\n      Object.defineProperty(obj, key, value);\n    }\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass);\n}\n\nvar BUILT_IN_PLACEMENTS = {\n  bottomLeft: {\n    points: ['tl', 'bl'],\n    offset: [0, 4],\n    overflow: {\n      adjustX: 1,\n      adjustY: 1\n    }\n  },\n  topLeft: {\n    points: ['bl', 'tl'],\n    offset: [0, -4],\n    overflow: {\n      adjustX: 1,\n      adjustY: 1\n    }\n  },\n  bottomRight: {\n    points: ['tr', 'br'],\n    offset: [0, 4],\n    overflow: {\n      adjustX: 1,\n      adjustY: 1\n    }\n  },\n  topRight: {\n    points: ['br', 'tr'],\n    offset: [0, -4],\n    overflow: {\n      adjustX: 1,\n      adjustY: 1\n    }\n  }\n};\n\nvar Cascader = function (_Component) {\n  _inherits(Cascader, _Component);\n\n  function Cascader(props) {\n    _classCallCheck(this, Cascader);\n\n    var _this = _possibleConstructorReturn(this, _Component.call(this, props));\n\n    _this.setPopupVisible = function (popupVisible) {\n      if (!('popupVisible' in _this.props)) {\n        _this.setState({\n          popupVisible: popupVisible\n        });\n      } // sync activeValue with value when panel open\n\n\n      if (popupVisible && !_this.state.visible) {\n        _this.setState({\n          activeValue: _this.state.value\n        });\n      }\n\n      _this.props.onPopupVisibleChange(popupVisible);\n    };\n\n    _this.handleChange = function (options, setProps, e) {\n      if (e.type !== 'keydown' || e.keyCode === _KeyCode2[\"default\"].ENTER) {\n        _this.props.onChange(options.map(function (o) {\n          return o.value;\n        }), options);\n\n        _this.setPopupVisible(setProps.visible);\n      }\n    };\n\n    _this.handlePopupVisibleChange = function (popupVisible) {\n      _this.setPopupVisible(popupVisible);\n    };\n\n    _this.handleMenuSelect = function (targetOption, menuIndex, e) {\n      if (e && e.preventDefault) {\n        e.preventDefault();\n      } // Keep focused state for keyboard support\n\n\n      var triggerNode = _this.refs.trigger.getRootDomNode();\n\n      if (triggerNode && triggerNode.focus) {\n        triggerNode.focus();\n      }\n\n      var _this$props = _this.props,\n          changeOnSelect = _this$props.changeOnSelect,\n          loadData = _this$props.loadData,\n          expandTrigger = _this$props.expandTrigger;\n\n      if (!targetOption || targetOption.disabled) {\n        return;\n      }\n\n      var activeValue = _this.state.activeValue;\n      activeValue = activeValue.slice(0, menuIndex + 1);\n      activeValue[menuIndex] = targetOption.value;\n\n      var activeOptions = _this.getActiveOptions(activeValue);\n\n      if (targetOption.isLeaf === false && !targetOption.children && loadData) {\n        if (changeOnSelect) {\n          _this.handleChange(activeOptions, {\n            visible: true\n          }, e);\n        }\n\n        _this.setState({\n          activeValue: activeValue\n        });\n\n        loadData(activeOptions);\n        return;\n      }\n\n      var newState = {};\n\n      if (!targetOption.children || !targetOption.children.length) {\n        _this.handleChange(activeOptions, {\n          visible: false\n        }, e); // set value to activeValue when select leaf option\n\n\n        newState.value = activeValue; // add e.type judgement to prevent `onChange` being triggered by mouseEnter\n      } else if (changeOnSelect && (e.type === 'click' || e.type === 'keydown')) {\n        if (expandTrigger === 'hover') {\n          _this.handleChange(activeOptions, {\n            visible: false\n          }, e);\n        } else {\n          _this.handleChange(activeOptions, {\n            visible: true\n          }, e);\n        } // set value to activeValue on every select\n\n\n        newState.value = activeValue;\n      }\n\n      newState.activeValue = activeValue; //  not change the value by keyboard\n\n      if ('value' in _this.props || e.type === 'keydown' && e.keyCode !== _KeyCode2[\"default\"].ENTER) {\n        delete newState.value;\n      }\n\n      _this.setState(newState);\n    };\n\n    _this.handleKeyDown = function (e) {\n      var children = _this.props.children; // https://github.com/ant-design/ant-design/issues/6717\n      // Don't bind keyboard support when children specify the onKeyDown\n\n      if (children && children.props.onKeyDown) {\n        children.props.onKeyDown(e);\n        return;\n      }\n\n      var activeValue = [].concat(_toConsumableArray(_this.state.activeValue));\n      var currentLevel = activeValue.length - 1 < 0 ? 0 : activeValue.length - 1;\n\n      var currentOptions = _this.getCurrentLevelOptions();\n\n      var currentIndex = currentOptions.map(function (o) {\n        return o.value;\n      }).indexOf(activeValue[currentLevel]);\n\n      if (e.keyCode !== _KeyCode2[\"default\"].DOWN && e.keyCode !== _KeyCode2[\"default\"].UP && e.keyCode !== _KeyCode2[\"default\"].LEFT && e.keyCode !== _KeyCode2[\"default\"].RIGHT && e.keyCode !== _KeyCode2[\"default\"].ENTER && e.keyCode !== _KeyCode2[\"default\"].BACKSPACE && e.keyCode !== _KeyCode2[\"default\"].ESC) {\n        return;\n      } // Press any keys above to reopen menu\n\n\n      if (!_this.state.popupVisible && e.keyCode !== _KeyCode2[\"default\"].BACKSPACE && e.keyCode !== _KeyCode2[\"default\"].ESC) {\n        _this.setPopupVisible(true);\n\n        return;\n      }\n\n      if (e.keyCode === _KeyCode2[\"default\"].DOWN || e.keyCode === _KeyCode2[\"default\"].UP) {\n        var nextIndex = currentIndex;\n\n        if (nextIndex !== -1) {\n          if (e.keyCode === _KeyCode2[\"default\"].DOWN) {\n            nextIndex += 1;\n            nextIndex = nextIndex >= currentOptions.length ? 0 : nextIndex;\n          } else {\n            nextIndex -= 1;\n            nextIndex = nextIndex < 0 ? currentOptions.length - 1 : nextIndex;\n          }\n        } else {\n          nextIndex = 0;\n        }\n\n        activeValue[currentLevel] = currentOptions[nextIndex].value;\n      } else if (e.keyCode === _KeyCode2[\"default\"].LEFT || e.keyCode === _KeyCode2[\"default\"].BACKSPACE) {\n        activeValue.splice(activeValue.length - 1, 1);\n      } else if (e.keyCode === _KeyCode2[\"default\"].RIGHT) {\n        if (currentOptions[currentIndex] && currentOptions[currentIndex].children) {\n          activeValue.push(currentOptions[currentIndex].children[0].value);\n        }\n      } else if (e.keyCode === _KeyCode2[\"default\"].ESC) {\n        _this.setPopupVisible(false);\n\n        return;\n      }\n\n      if (!activeValue || activeValue.length === 0) {\n        _this.setPopupVisible(false);\n      }\n\n      var activeOptions = _this.getActiveOptions(activeValue);\n\n      var targetOption = activeOptions[activeOptions.length - 1];\n\n      _this.handleMenuSelect(targetOption, activeOptions.length - 1, e);\n\n      if (_this.props.onKeyDown) {\n        _this.props.onKeyDown(e);\n      }\n    };\n\n    var initialValue = [];\n\n    if ('value' in props) {\n      initialValue = props.value || [];\n    } else if ('defaultValue' in props) {\n      initialValue = props.defaultValue || [];\n    }\n\n    _this.state = {\n      popupVisible: props.popupVisible,\n      activeValue: initialValue,\n      value: initialValue\n    };\n    return _this;\n  }\n\n  Cascader.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    if ('value' in nextProps && !(0, _arrays2[\"default\"])(this.props.value, nextProps.value)) {\n      var newValues = {\n        value: nextProps.value || [],\n        activeValue: nextProps.value || []\n      }; // allow activeValue diff from value\n      // https://github.com/ant-design/ant-design/issues/2767\n\n      if ('loadData' in nextProps) {\n        delete newValues.activeValue;\n      }\n\n      this.setState(newValues);\n    }\n\n    if ('popupVisible' in nextProps) {\n      this.setState({\n        popupVisible: nextProps.popupVisible\n      });\n    }\n  };\n\n  Cascader.prototype.getPopupDOMNode = function getPopupDOMNode() {\n    return this.refs.trigger.getPopupDomNode();\n  };\n\n  Cascader.prototype.getCurrentLevelOptions = function getCurrentLevelOptions() {\n    var options = this.props.options;\n    var _state$activeValue = this.state.activeValue,\n        activeValue = _state$activeValue === undefined ? [] : _state$activeValue;\n    var result = (0, _arrayTreeFilter2[\"default\"])(options, function (o, level) {\n      return o.value === activeValue[level];\n    });\n\n    if (result[result.length - 2]) {\n      return result[result.length - 2].children;\n    }\n\n    return [].concat(_toConsumableArray(options)).filter(function (o) {\n      return !o.disabled;\n    });\n  };\n\n  Cascader.prototype.getActiveOptions = function getActiveOptions(activeValue) {\n    return (0, _arrayTreeFilter2[\"default\"])(this.props.options, function (o, level) {\n      return o.value === activeValue[level];\n    });\n  };\n\n  Cascader.prototype.render = function render() {\n    var _props = this.props,\n        prefixCls = _props.prefixCls,\n        transitionName = _props.transitionName,\n        popupClassName = _props.popupClassName,\n        options = _props.options,\n        disabled = _props.disabled,\n        builtinPlacements = _props.builtinPlacements,\n        popupPlacement = _props.popupPlacement,\n        children = _props.children,\n        restProps = _objectWithoutProperties(_props, ['prefixCls', 'transitionName', 'popupClassName', 'options', 'disabled', 'builtinPlacements', 'popupPlacement', 'children']); // Did not show popup when there is no options\n\n\n    var menus = _react2[\"default\"].createElement('div', null);\n\n    var emptyMenuClassName = '';\n\n    if (options && options.length > 0) {\n      menus = _react2[\"default\"].createElement(_Menus2[\"default\"], _extends({}, this.props, {\n        value: this.state.value,\n        activeValue: this.state.activeValue,\n        onSelect: this.handleMenuSelect,\n        visible: this.state.popupVisible\n      }));\n    } else {\n      emptyMenuClassName = ' ' + prefixCls + '-menus-empty';\n    }\n\n    return _react2[\"default\"].createElement(_rcTrigger2[\"default\"], _extends({\n      ref: 'trigger'\n    }, restProps, {\n      options: options,\n      disabled: disabled,\n      popupPlacement: popupPlacement,\n      builtinPlacements: builtinPlacements,\n      popupTransitionName: transitionName,\n      action: disabled ? [] : ['click'],\n      popupVisible: disabled ? false : this.state.popupVisible,\n      onPopupVisibleChange: this.handlePopupVisibleChange,\n      prefixCls: prefixCls + '-menus',\n      popupClassName: popupClassName + emptyMenuClassName,\n      popup: menus\n    }), (0, _react.cloneElement)(children, {\n      onKeyDown: this.handleKeyDown,\n      tabIndex: disabled ? undefined : 0\n    }));\n  };\n\n  return Cascader;\n}(_react.Component);\n\nCascader.defaultProps = {\n  options: [],\n  onChange: function onChange() {},\n  onPopupVisibleChange: function onPopupVisibleChange() {},\n  disabled: false,\n  transitionName: '',\n  prefixCls: 'rc-cascader',\n  popupClassName: '',\n  popupPlacement: 'bottomLeft',\n  builtinPlacements: BUILT_IN_PLACEMENTS,\n  expandTrigger: 'click'\n};\nCascader.propTypes = {\n  value: _propTypes2[\"default\"].array,\n  defaultValue: _propTypes2[\"default\"].array,\n  options: _propTypes2[\"default\"].array.isRequired,\n  onChange: _propTypes2[\"default\"].func,\n  onPopupVisibleChange: _propTypes2[\"default\"].func,\n  popupVisible: _propTypes2[\"default\"].bool,\n  disabled: _propTypes2[\"default\"].bool,\n  transitionName: _propTypes2[\"default\"].string,\n  popupClassName: _propTypes2[\"default\"].string,\n  popupPlacement: _propTypes2[\"default\"].string,\n  prefixCls: _propTypes2[\"default\"].string,\n  dropdownMenuColumnStyle: _propTypes2[\"default\"].object,\n  builtinPlacements: _propTypes2[\"default\"].object,\n  loadData: _propTypes2[\"default\"].func,\n  changeOnSelect: _propTypes2[\"default\"].bool,\n  children: _propTypes2[\"default\"].node,\n  onKeyDown: _propTypes2[\"default\"].func,\n  expandTrigger: _propTypes2[\"default\"].string\n};\nexports[\"default\"] = Cascader;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}
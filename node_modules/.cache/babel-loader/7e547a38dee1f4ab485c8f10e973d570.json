{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends2 = require('babel-runtime/helpers/extends');\n\nvar _extends3 = _interopRequireDefault(_extends2);\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _createReactClass = require('create-react-class');\n\nvar _createReactClass2 = _interopRequireDefault(_createReactClass);\n\nvar _KeyCode = require('rc-util/lib/KeyCode');\n\nvar _KeyCode2 = _interopRequireDefault(_KeyCode);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _util = require('./util');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n/* eslint react/no-is-mounted:0 */\n\n\nvar MenuItem = (0, _createReactClass2[\"default\"])({\n  displayName: 'MenuItem',\n  propTypes: {\n    rootPrefixCls: _propTypes2[\"default\"].string,\n    eventKey: _propTypes2[\"default\"].string,\n    active: _propTypes2[\"default\"].bool,\n    children: _propTypes2[\"default\"].any,\n    selectedKeys: _propTypes2[\"default\"].array,\n    disabled: _propTypes2[\"default\"].bool,\n    title: _propTypes2[\"default\"].string,\n    onSelect: _propTypes2[\"default\"].func,\n    onClick: _propTypes2[\"default\"].func,\n    onDeselect: _propTypes2[\"default\"].func,\n    parentMenu: _propTypes2[\"default\"].object,\n    onItemHover: _propTypes2[\"default\"].func,\n    onDestroy: _propTypes2[\"default\"].func,\n    onMouseEnter: _propTypes2[\"default\"].func,\n    onMouseLeave: _propTypes2[\"default\"].func\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      onSelect: _util.noop,\n      onMouseEnter: _util.noop,\n      onMouseLeave: _util.noop\n    };\n  },\n  componentWillUnmount: function componentWillUnmount() {\n    var props = this.props;\n\n    if (props.onDestroy) {\n      props.onDestroy(props.eventKey);\n    }\n\n    if (props.parentMenu.menuItemInstance === this) {\n      this.clearMenuItemMouseLeaveTimer();\n    }\n  },\n  onKeyDown: function onKeyDown(e) {\n    var keyCode = e.keyCode;\n\n    if (keyCode === _KeyCode2[\"default\"].ENTER) {\n      this.onClick(e);\n      return true;\n    }\n  },\n  onMouseLeave: function onMouseLeave(e) {\n    var _this = this;\n\n    var props = this.props;\n    var eventKey = props.eventKey,\n        parentMenu = props.parentMenu;\n    parentMenu.menuItemInstance = this;\n\n    parentMenu.menuItemMouseLeaveFn = function () {\n      if (props.active) {\n        props.onItemHover({\n          key: eventKey,\n          item: _this,\n          hover: false,\n          domEvent: e,\n          trigger: 'mouseleave'\n        });\n      }\n    };\n\n    parentMenu.menuItemMouseLeaveTimer = setTimeout(parentMenu.menuItemMouseLeaveFn, 30);\n    props.onMouseLeave({\n      key: eventKey,\n      domEvent: e\n    });\n  },\n  onMouseEnter: function onMouseEnter(e) {\n    var props = this.props;\n    var eventKey = props.eventKey,\n        parentMenu = props.parentMenu;\n    this.clearMenuItemMouseLeaveTimer(parentMenu.menuItemInstance !== this);\n\n    if (parentMenu.subMenuInstance) {\n      parentMenu.subMenuInstance.clearSubMenuTimers();\n    }\n\n    props.onItemHover({\n      key: eventKey,\n      item: this,\n      hover: true,\n      domEvent: e,\n      trigger: 'mouseenter'\n    });\n    props.onMouseEnter({\n      key: eventKey,\n      domEvent: e\n    });\n  },\n  onClick: function onClick(e) {\n    var props = this.props;\n    var selected = this.isSelected();\n    var eventKey = props.eventKey;\n    var info = {\n      key: eventKey,\n      keyPath: [eventKey],\n      item: this,\n      domEvent: e\n    };\n    props.onClick(info);\n\n    if (props.multiple) {\n      if (selected) {\n        props.onDeselect(info);\n      } else {\n        props.onSelect(info);\n      }\n    } else if (!selected) {\n      props.onSelect(info);\n    }\n  },\n  getPrefixCls: function getPrefixCls() {\n    return this.props.rootPrefixCls + '-item';\n  },\n  getActiveClassName: function getActiveClassName() {\n    return this.getPrefixCls() + '-active';\n  },\n  getSelectedClassName: function getSelectedClassName() {\n    return this.getPrefixCls() + '-selected';\n  },\n  getDisabledClassName: function getDisabledClassName() {\n    return this.getPrefixCls() + '-disabled';\n  },\n  clearMenuItemMouseLeaveTimer: function clearMenuItemMouseLeaveTimer() {\n    var props = this.props;\n    var callFn = void 0;\n    var parentMenu = props.parentMenu;\n\n    if (parentMenu.menuItemMouseLeaveTimer) {\n      clearTimeout(parentMenu.menuItemMouseLeaveTimer);\n      parentMenu.menuItemMouseLeaveTimer = null;\n\n      if (callFn && parentMenu.menuItemMouseLeaveFn) {\n        parentMenu.menuItemMouseLeaveFn();\n      }\n\n      parentMenu.menuItemMouseLeaveFn = null;\n    }\n  },\n  isSelected: function isSelected() {\n    return this.props.selectedKeys.indexOf(this.props.eventKey) !== -1;\n  },\n  render: function render() {\n    var props = this.props;\n    var selected = this.isSelected();\n    var classes = {};\n    classes[this.getActiveClassName()] = !props.disabled && props.active;\n    classes[this.getSelectedClassName()] = selected;\n    classes[this.getDisabledClassName()] = props.disabled;\n    classes[this.getPrefixCls()] = true;\n    classes[props.className] = !!props.className;\n    var attrs = (0, _extends3[\"default\"])({}, props.attribute, {\n      title: props.title,\n      className: (0, _classnames2[\"default\"])(classes),\n      role: 'menuitem',\n      'aria-selected': selected,\n      'aria-disabled': props.disabled\n    });\n    var mouseEvent = {};\n\n    if (!props.disabled) {\n      mouseEvent = {\n        onClick: this.onClick,\n        onMouseLeave: this.onMouseLeave,\n        onMouseEnter: this.onMouseEnter\n      };\n    }\n\n    var style = (0, _extends3[\"default\"])({}, props.style);\n\n    if (props.mode === 'inline') {\n      style.paddingLeft = props.inlineIndent * props.level;\n    }\n\n    return _react2[\"default\"].createElement('li', (0, _extends3[\"default\"])({\n      style: style\n    }, attrs, mouseEvent), props.children);\n  }\n});\nMenuItem.isMenuItem = 1;\nexports[\"default\"] = MenuItem;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}
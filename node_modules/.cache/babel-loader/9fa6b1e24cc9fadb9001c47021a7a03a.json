{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport RcTree, { TreeNode } from 'rc-tree';\nimport animation from '../_util/openAnimation';\nexport var AntTreeNode = function (_React$Component) {\n  _inherits(AntTreeNode, _React$Component);\n\n  function AntTreeNode() {\n    _classCallCheck(this, AntTreeNode);\n\n    return _possibleConstructorReturn(this, (AntTreeNode.__proto__ || Object.getPrototypeOf(AntTreeNode)).apply(this, arguments));\n  }\n\n  _createClass(AntTreeNode, [{\n    key: 'render',\n    value: function render() {\n      return React.createElement(AntTreeNode, this.props);\n    }\n  }]);\n\n  return AntTreeNode;\n}(React.Component);\n\nvar Tree = function (_React$Component2) {\n  _inherits(Tree, _React$Component2);\n\n  function Tree() {\n    _classCallCheck(this, Tree);\n\n    return _possibleConstructorReturn(this, (Tree.__proto__ || Object.getPrototypeOf(Tree)).apply(this, arguments));\n  }\n\n  _createClass(Tree, [{\n    key: 'render',\n    value: function render() {\n      var props = this.props;\n      var prefixCls = props.prefixCls,\n          className = props.className;\n      var checkable = props.checkable;\n      return React.createElement(RcTree, _extends({}, props, {\n        className: className,\n        checkable: checkable ? React.createElement('span', {\n          className: prefixCls + '-checkbox-inner'\n        }) : checkable\n      }), this.props.children);\n    }\n  }]);\n\n  return Tree;\n}(React.Component);\n\nexport default Tree;\nTree.TreeNode = TreeNode;\nTree.defaultProps = {\n  prefixCls: 'ant-tree',\n  checkable: false,\n  showIcon: false,\n  openAnimation: animation\n};","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _toConsumableArray from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\src\\\\component\\\\Chairman_Framework\\\\Psychomotor\\\\POST.js\";\nimport React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { WithContext as ReactTags } from \"react-tag-input\";\nimport { addPsychomotor } from \"../../../actions/chairman_framework_actions/psychomotors\";\nvar KeyCodes = {\n  comma: 188,\n  enter: 13,\n  space: 32\n};\nvar delimiters = [KeyCodes.comma, KeyCodes.enter];\nexport var POST =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(POST, _Component);\n\n  function POST(props) {\n    var _this;\n\n    _classCallCheck(this, POST);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(POST).call(this, props));\n    _this.state = {\n      code: \"\",\n      definition: \"\",\n      tags: []\n    };\n\n    _this.onChange = function (e) {\n      return _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.onSubmit = function (e) {\n      e.preventDefault();\n      var _this$state = _this.state,\n          code = _this$state.code,\n          definition = _this$state.definition,\n          tags = _this$state.tags;\n      var verbs = [];\n\n      for (var i in tags) {\n        verbs.push(tags[i].tags);\n      }\n\n      var psychomotor = {\n        code: code,\n        definition: definition,\n        verbs: verbs\n      }; // console.log(psychomotor);\n\n      _this.props.addCongitive(psychomotor);\n    };\n\n    _this.state = {\n      tags: []\n    };\n    _this.handleDelete = _this.handleDelete.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleAddition = _this.handleAddition.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.handleDrag = _this.handleDrag.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(POST, [{\n    key: \"handleDelete\",\n    value: function handleDelete(i) {\n      var tags = this.state.tags;\n      this.setState({\n        tags: tags.filter(function (tag, index) {\n          return index !== i;\n        })\n      });\n    }\n  }, {\n    key: \"handleAddition\",\n    value: function handleAddition(tag) {\n      this.setState(function (state) {\n        return {\n          tags: [].concat(_toConsumableArray(state.tags), [tag])\n        };\n      });\n    }\n  }, {\n    key: \"handleDrag\",\n    value: function handleDrag(tag, currPos, newPos) {\n      var tags = _toConsumableArray(this.state.tags);\n\n      var newTags = tags.slice();\n      newTags.splice(currPos, 1);\n      newTags.splice(newPos, 0, tag); // re-render\n\n      this.setState({\n        tags: newTags\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          code = _this$state2.code,\n          definition = _this$state2.definition,\n          tags = _this$state2.tags;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Add Psychomotor Domain\"), React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, \"Code\"), React.createElement(\"input\", {\n        className: \"form-control\",\n        type: \"text\",\n        name: \"code\",\n        onChange: this.onChange,\n        value: code,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"Definition\"), React.createElement(\"input\", {\n        className: \"form-control\",\n        type: \"text\",\n        name: \"definition\",\n        onChange: this.onChange,\n        value: definition,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Enter Verbs\"), React.createElement(ReactTags, {\n        tags: tags,\n        handleDelete: this.handleDelete,\n        handleAddition: this.handleAddition,\n        handleDrag: this.handleDrag,\n        delimiters: delimiters,\n        labelField: \"tags\",\n        name: \"tags\",\n        value: tags,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"Submit\"))));\n    }\n  }]);\n\n  return POST;\n}(Component);\nPOST.propTypes = {\n  addPsychomotor: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  addPsychomotor: addPsychomotor\n})(POST);","map":{"version":3,"sources":["C:/Users/Shahnoor Khalidi/Desktop/test/test/src/component/Chairman_Framework/Psychomotor/POST.js"],"names":["React","Component","ReactDOM","connect","PropTypes","WithContext","ReactTags","addPsychomotor","KeyCodes","comma","enter","space","delimiters","POST","props","state","code","definition","tags","onChange","e","setState","target","name","value","onSubmit","preventDefault","verbs","i","push","psychomotor","addCongitive","handleDelete","bind","handleAddition","handleDrag","filter","tag","index","currPos","newPos","newTags","slice","splice","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { WithContext as ReactTags } from \"react-tag-input\";\r\nimport { addPsychomotor } from \"../../../actions/chairman_framework_actions/psychomotors\";\r\n\r\nconst KeyCodes = {\r\n  comma: 188,\r\n  enter: 13,\r\n  space: 32\r\n};\r\n\r\nconst delimiters = [KeyCodes.comma, KeyCodes.enter];\r\n\r\nexport class POST extends Component {\r\n  state = {\r\n    code: \"\",\r\n    definition: \"\",\r\n    tags: []\r\n  };\r\n  static propTypes = {\r\n    addPsychomotor: PropTypes.func.isRequired\r\n  };\r\n\r\n  onChange = e =>\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const { code, definition, tags } = this.state;\r\n    let verbs = [];\r\n    for (let i in tags) {\r\n      verbs.push(tags[i].tags);\r\n    }\r\n    const psychomotor = { code, definition, verbs };\r\n    // console.log(psychomotor);\r\n    this.props.addCongitive(psychomotor);\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      tags: []\r\n    };\r\n\r\n    this.handleDelete = this.handleDelete.bind(this);\r\n    this.handleAddition = this.handleAddition.bind(this);\r\n    this.handleDrag = this.handleDrag.bind(this);\r\n  }\r\n\r\n  handleDelete(i) {\r\n    const { tags } = this.state;\r\n    this.setState({\r\n      tags: tags.filter((tag, index) => index !== i)\r\n    });\r\n  }\r\n\r\n  handleAddition(tag) {\r\n    this.setState(state => ({ tags: [...state.tags, tag] }));\r\n  }\r\n\r\n  handleDrag(tag, currPos, newPos) {\r\n    const tags = [...this.state.tags];\r\n    const newTags = tags.slice();\r\n\r\n    newTags.splice(currPos, 1);\r\n    newTags.splice(newPos, 0, tag);\r\n\r\n    // re-render\r\n    this.setState({ tags: newTags });\r\n  }\r\n  render() {\r\n    const { code, definition, tags } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>Add Psychomotor Domain</h1>\r\n        <form onSubmit={this.onSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>Code</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"code\"\r\n              onChange={this.onChange}\r\n              value={code}\r\n            ></input>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Definition</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"definition\"\r\n              onChange={this.onChange}\r\n              value={definition}\r\n            ></input>\r\n          </div>\r\n          <div>\r\n            <label>Enter Verbs</label>\r\n            <ReactTags\r\n              tags={tags}\r\n              handleDelete={this.handleDelete}\r\n              handleAddition={this.handleAddition}\r\n              handleDrag={this.handleDrag}\r\n              delimiters={delimiters}\r\n              labelField={\"tags\"}\r\n              name=\"tags\"\r\n              value={tags}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { addPsychomotor })(POST);\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\src\\\\component\\\\visions\\\\Visions.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getVisions, deleteVisions } from \"../../actions/visions\";\nexport var Visions =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Visions, _Component);\n\n  function Visions() {\n    _classCallCheck(this, Visions);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Visions).apply(this, arguments));\n  }\n\n  _createClass(Visions, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getVisions();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      }, \"Vision\"), React.createElement(\"table\", {\n        className: \"table table-stripped\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 19\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, \"ID\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, \"MISSION\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, \"GOAL\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"OUTCOME\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, this.props.visions.map(function (vision) {\n        return React.createElement(\"tr\", {\n          key: vision.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, vision.id), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, vision.mission), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, vision.goal), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, vision.outcome), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn btn-danger btn-sm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, \"Delete\")));\n      }))));\n    }\n  }]);\n\n  return Visions;\n}(Component);\nVisions.propTypes = {\n  visions: PropTypes.array.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    visions: state.visions.visions\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getVisions: getVisions,\n  deleteVisions: deleteVisions\n})(Visions);","map":{"version":3,"sources":["C:/Users/Shahnoor Khalidi/Desktop/test/test/src/component/visions/Visions.js"],"names":["React","Component","Fragment","connect","PropTypes","getVisions","deleteVisions","Visions","props","visions","map","vision","id","mission","goal","outcome","propTypes","array","isRequired","mapStateToProps","state"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,UAAT,EAAqBC,aAArB,QAA0C,uBAA1C;AACA,WAAaC,OAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA,wCAKsB;AAClB,WAAKC,KAAL,CAAWH,UAAX;AACD;AAPH;AAAA;AAAA,6BAQW;AACP,aACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAEE;AAAO,QAAA,SAAS,EAAC,sBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALF,CADF,CADF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKG,KAAL,CAAWC,OAAX,CAAmBC,GAAnB,CAAuB,UAAAC,MAAM;AAAA,eAC5B;AAAI,UAAA,GAAG,EAAEA,MAAM,CAACC,EAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKD,MAAM,CAACC,EAAZ,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKD,MAAM,CAACE,OAAZ,CAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKF,MAAM,CAACG,IAAZ,CAHF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKH,MAAM,CAACI,OAAZ,CAJF,EAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAQ,UAAA,SAAS,EAAC,uBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CALF,CAD4B;AAAA,OAA7B,CADH,CAVF,CAFF,CADF;AA6BD;AAtCH;;AAAA;AAAA,EAA6Bd,SAA7B;AAAaM,O,CACJS,S,GAAY;AACjBP,EAAAA,OAAO,EAAEL,SAAS,CAACa,KAAV,CAAgBC;AADR,C;;AAwCrB,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAChCX,IAAAA,OAAO,EAAEW,KAAK,CAACX,OAAN,CAAcA;AADS,GAAL;AAAA,CAA7B;;AAGA,eAAeN,OAAO,CAACgB,eAAD,EAAkB;AAAEd,EAAAA,UAAU,EAAVA,UAAF;AAAcC,EAAAA,aAAa,EAAbA;AAAd,CAAlB,CAAP,CAAwDC,OAAxD,CAAf","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getVisions, deleteVisions } from \"../../actions/visions\";\r\nexport class Visions extends Component {\r\n  static propTypes = {\r\n    visions: PropTypes.array.isRequired\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.getVisions();\r\n  }\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <h2>Vision</h2>\r\n        <table className=\"table table-stripped\">\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>MISSION</th>\r\n              <th>GOAL</th>\r\n              <th>OUTCOME</th>\r\n              <th />\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.visions.map(vision => (\r\n              <tr key={vision.id}>\r\n                <td>{vision.id}</td>\r\n                <td>{vision.mission}</td>\r\n                <td>{vision.goal}</td>\r\n                <td>{vision.outcome}</td>\r\n                <td>\r\n                  <button className=\"btn btn-danger btn-sm\">Delete</button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  visions: state.visions.visions\r\n});\r\nexport default connect(mapStateToProps, { getVisions, deleteVisions })(Visions);\r\n"]},"metadata":{},"sourceType":"module"}
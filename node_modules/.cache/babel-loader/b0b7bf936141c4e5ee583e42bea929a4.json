{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\OBE_Management_System(GITHUB)\\\\OBE-frontend\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\OBE_Management_System(GITHUB)\\\\OBE-frontend\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\OBE_Management_System(GITHUB)\\\\OBE-frontend\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\OBE_Management_System(GITHUB)\\\\OBE-frontend\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\OBE_Management_System(GITHUB)\\\\OBE-frontend\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\OBE_Management_System(GITHUB)\\\\OBE-frontend\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\OBE_Management_System(GITHUB)\\\\OBE-frontend\\\\test\\\\src\\\\component\\\\Teacher_Framework\\\\create_quizzes\\\\POST.js\";\nimport React, { Component } from \"react\";\nimport Select from \"react-select\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { addAssignment } from \"../../../actions/teacher_framework_actions/create_quizz\";\nimport { getAssigned } from \"../../../actions/teacher_framework_actions/viewassignedsubjects\";\nexport var POST =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(POST, _Component);\n\n  function POST() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, POST);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(POST)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      subject_name: \"\",\n      label: \"\"\n    };\n\n    _this.onChangeverbs = function (selected) {\n      //console.log(selected);\n      _this.setState({\n        verbs: selected\n      });\n    };\n\n    _this.onChange = function (e) {\n      return _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.onSubmit = function (e) {\n      e.preventDefault();\n      var _this$state = _this.state,\n          subject_name = _this$state.subject_name,\n          label = _this$state.label;\n      var assignment = {\n        subject_name: subject_name,\n        label: label,\n        verb: verbs.value\n      };\n      assignment.question_set = [];\n\n      for (var i in question_set) {\n        assignment.question_set.push(question_set[i].value);\n      }\n\n      console.log(clo); //this.props.addClos(clo);\n    };\n\n    _this.subjectoptions = function () {\n      /*\r\n      if (this.state.selectedid === null) {\r\n        return null;\r\n      }\r\n      */\n      if (_this.state.question_set === null) {\n        return null;\n      }\n\n      var subjectoptions = [];\n\n      if (_this.state.question_set !== null) {\n        for (var i in _this.props.question_set) {\n          if (_this.state.question_set.value === _this.props.question_set[i].id) {\n            for (var j in _this.props.question_set[i].verbs) {\n              subjectoptions.push({\n                value: _this.props.question_set[i].label[j],\n                label: _this.props.question_set[i].label[j]\n              });\n            }\n          }\n        }\n      }\n\n      console.log(options); //return verbsoptions;\n    };\n\n    return _this;\n  }\n\n  _createClass(POST, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getAssigned();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      //console.log(this.verbsoptions());\n      // console.log(this.state.cognitives);\n      // console.log(this.props.cognitives);\n      var _this$state2 = this.state,\n          subject_name = _this$state2.subject_name,\n          question_set = _this$state2.question_set,\n          label = _this$state2.label; //console.log(this.props.plos.length);\n\n      if (this.props.question_set.length > 0) {\n        for (var i in this.props.question_set) {\n          optionplos.push({\n            value: this.props.plos[i].id,\n            label: this.props.plos[i].code\n          });\n        }\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Add Assignemnt\"), React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }, \"Subject Name\"), React.createElement(Select, {\n        value: this.state.subject_name,\n        onChange: this.onChangeverbs,\n        options: this.subjectoptions(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Questions\"), React.createElement(\"input\", {\n        className: \"form-control\",\n        type: \"label\",\n        name: \"description\",\n        onChange: this.onChange,\n        value: description,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, \"Submit\"))));\n    }\n  }]);\n\n  return POST;\n}(Component);\nPOST.propTypes = {\n  assignedsubjects: PropTypes.assignedsubjects.assignedsubjects,\n  getAssigned: PropTypes.func.isRequired,\n  addAssignment: PropTypes.func.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    assignedsubjects: state.assignedsubjects.assignedsubjects\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addAssignment: addAssignment,\n  getAssigned: getAssigned\n})(POST);","map":{"version":3,"sources":["C:/Users/Shahnoor Khalidi/Desktop/OBE_Management_System(GITHUB)/OBE-frontend/test/src/component/Teacher_Framework/create_quizzes/POST.js"],"names":["React","Component","Select","connect","PropTypes","addAssignment","getAssigned","POST","state","subject_name","label","onChangeverbs","selected","setState","verbs","onChange","e","target","name","value","onSubmit","preventDefault","assignment","verb","question_set","i","push","console","log","clo","subjectoptions","props","id","j","options","length","optionplos","plos","code","description","propTypes","assignedsubjects","func","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { addAssignment } from \"../../../actions/teacher_framework_actions/create_quizz\";\r\nimport { getAssigned } from \"../../../actions/teacher_framework_actions/viewassignedsubjects\";\r\n\r\nexport class POST extends Component {\r\n  state = {\r\n    subject_name: \"\",\r\n    label: \"\",\r\n  };\r\n  static propTypes = {\r\n    assignedsubjects: PropTypes.assignedsubjects.assignedsubjects,\r\n    getAssigned: PropTypes.func.isRequired,\r\n    addAssignment: PropTypes.func.isRequired,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.getAssigned();\r\n  }\r\n\r\n  onChangeverbs = (selected) => {\r\n    //console.log(selected);\r\n    this.setState({\r\n      verbs: selected,\r\n    });\r\n  };\r\n\r\n  onChange = (e) =>\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { subject_name, label } = this.state;\r\n    const assignment = {\r\n      subject_name,\r\n      label,\r\n      verb: verbs.value,\r\n    };\r\n    assignment.question_set = [];\r\n    for (let i in question_set) {\r\n      assignment.question_set.push(question_set[i].value);\r\n    }\r\n\r\n    console.log(clo);\r\n    //this.props.addClos(clo);\r\n  };\r\n\r\n  subjectoptions = () => {\r\n    /*\r\n    if (this.state.selectedid === null) {\r\n      return null;\r\n    }\r\n    */\r\n\r\n    if (this.state.question_set === null) {\r\n      return null;\r\n    }\r\n    let subjectoptions = [];\r\n    if (this.state.question_set !== null) {\r\n      for (let i in this.props.question_set) {\r\n        if (this.state.question_set.value === this.props.question_set[i].id) {\r\n          for (let j in this.props.question_set[i].verbs) {\r\n            subjectoptions.push({\r\n              value: this.props.question_set[i].label[j],\r\n              label: this.props.question_set[i].label[j],\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    console.log(options);\r\n    //return verbsoptions;\r\n  };\r\n\r\n  render() {\r\n    //console.log(this.verbsoptions());\r\n    // console.log(this.state.cognitives);\r\n    // console.log(this.props.cognitives);\r\n    const { subject_name, question_set, label } = this.state;\r\n\r\n    //console.log(this.props.plos.length);\r\n\r\n    if (this.props.question_set.length > 0) {\r\n      for (let i in this.props.question_set) {\r\n        optionplos.push({\r\n          value: this.props.plos[i].id,\r\n          label: this.props.plos[i].code,\r\n        });\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h1>Add Assignemnt</h1>\r\n        <form onSubmit={this.onSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>Subject Name</label>\r\n            <Select\r\n              value={this.state.subject_name}\r\n              onChange={this.onChangeverbs}\r\n              options={this.subjectoptions()}\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Questions</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"label\"\r\n              name=\"description\"\r\n              onChange={this.onChange}\r\n              value={description}\r\n            ></input>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  assignedsubjects: state.assignedsubjects.assignedsubjects,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  addAssignment,\r\n  getAssigned,\r\n})(POST);\r\n"]},"metadata":{},"sourceType":"module"}
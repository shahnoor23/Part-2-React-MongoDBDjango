{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\src\\\\component\\\\mappeo\\\\MapForm.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getClos, addClos } from \"../../actions/clos\";\nimport { addPeo_Vision } from \"../../actions/peo_visions\";\nimport { Form } from \"reactstrap\";\nimport { Dropdown } from \"semantic-ui-react\";\nexport var MapForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(MapForm, _Component);\n\n  function MapForm() {\n    var _this;\n\n    _classCallCheck(this, MapForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(MapForm).call(this));\n\n    _this.onChange = function (e) {\n      return _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.onSubmit = function (e) {\n      e.preventDefault();\n      var _this$state = _this.state,\n          code = _this$state.code,\n          description = _this$state.description;\n      var clo = {\n        code: code,\n        description: description\n      };\n\n      _this.props.addClos(clo);\n    };\n\n    _this.state = {\n      Clos: []\n    };\n    return _this;\n  } //component load then\n\n\n  _createClass(MapForm, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getClos();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          code = _this$state2.code,\n          description = _this$state2.description;\n      var optionItems = this.props.clos.map(function (clo) {\n        return React.createElement(\"option\", {\n          key: clo.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, clo.code);\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        name: \"code\",\n        onChange: this.onChange,\n        value: code,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, optionItems), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, \"Submit\"))));\n    }\n  }]);\n\n  return MapForm;\n}(Component); //state of redux\n\nMapForm.propTypes = {\n  clos: PropTypes.array.isRequired,\n  getClos: PropTypes.func.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    clos: state.clos.clos\n  };\n};\n\nexport default connect(mapStateToProps, {\n  getClos: getClos,\n  addClos: addClos,\n  addPeo_Vision: addPeo_Vision\n})(MapForm);","map":{"version":3,"sources":["C:/Users/Shahnoor Khalidi/Desktop/test/test/src/component/mappeo/MapForm.js"],"names":["React","Component","Fragment","connect","PropTypes","getClos","addClos","addPeo_Vision","Form","Dropdown","MapForm","onChange","e","setState","target","name","value","onSubmit","preventDefault","state","code","description","clo","props","Clos","optionItems","clos","map","id","propTypes","array","isRequired","func","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getClos, addClos } from \"../../actions/clos\";\r\nimport { addPeo_Vision } from \"../../actions/peo_visions\";\r\nimport { Form } from \"reactstrap\";\r\nimport { Dropdown } from \"semantic-ui-react\";\r\nexport class MapForm extends Component {\r\n  static propTypes = {\r\n    clos: PropTypes.array.isRequired,\r\n    getClos: PropTypes.func.isRequired\r\n  };\r\n  onChange = e =>\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const { code, description } = this.state;\r\n    const clo = { code, description };\r\n    this.props.addClos(clo);\r\n  };\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      Clos: []\r\n    };\r\n  }\r\n\r\n  //component load then\r\n  componentDidMount() {\r\n    this.props.getClos();\r\n  }\r\n  render() {\r\n    const { code, description } = this.state;\r\n    let optionItems = this.props.clos.map(clo => (\r\n      <option key={clo.id}>{clo.code}</option>\r\n    ));\r\n\r\n    return (\r\n      <div>\r\n        <form onSubmit={this.onSubmit}>\r\n          <select name=\"code\" onChange={this.onChange} value={code}>\r\n            {optionItems}\r\n          </select>\r\n\r\n          <div className=\"form-group\">\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//state of redux\r\nconst mapStateToProps = state => ({\r\n  clos: state.clos.clos\r\n});\r\nexport default connect(mapStateToProps, { getClos, addClos, addPeo_Vision })(\r\n  MapForm\r\n);\r\n"]},"metadata":{},"sourceType":"module"}
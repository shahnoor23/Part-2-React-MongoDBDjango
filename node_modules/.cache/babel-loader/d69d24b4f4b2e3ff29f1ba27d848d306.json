{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\OBE_Management_System(GITHUB)\\\\OBE-frontend\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\OBE_Management_System(GITHUB)\\\\OBE-frontend\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\OBE_Management_System(GITHUB)\\\\OBE-frontend\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\OBE_Management_System(GITHUB)\\\\OBE-frontend\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\OBE_Management_System(GITHUB)\\\\OBE-frontend\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\OBE_Management_System(GITHUB)\\\\OBE-frontend\\\\test\\\\src\\\\component\\\\Teacher_Framework\\\\Assignment\\\\AssignmentCreate.js\";\nimport { Form, Input, Icon, Button, Divider } from \"antd\";\nimport React from \"react\";\nimport Select from \"react-select\";\nimport QuestionForm from \"./QuestionForm\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { getAssigned } from \"../../../actions/teacher_framework_actions/viewassignedsubjects\";\nimport * as actions from \"../../../actions/teacher_framework_actions/assignment\";\n\nvar AssignmentCreate =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(AssignmentCreate, _React$Component);\n\n  function AssignmentCreate() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AssignmentCreate);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AssignmentCreate)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      formCount: 1\n    };\n\n    _this.remove = function () {\n      var formCount = _this.state.formCount;\n\n      _this.setState({\n        formCount: formCount - 1\n      });\n    };\n\n    _this.add = function () {\n      var formCount = _this.state.formCount;\n\n      _this.setState({\n        formCount: formCount + 1\n      });\n    };\n\n    _this.handleSubmit = function (e) {\n      e.preventDefault();\n\n      _this.props.form.validateFields(function (err, values) {\n        if (!err) {\n          console.log(\"Received values of form: \", values);\n          var question_set = [];\n\n          for (var i in values.question) {\n            var choices = [];\n            var _iteratorNormalCompletion = true;\n            var _didIteratorError = false;\n            var _iteratorError = undefined;\n\n            try {\n              for (var _iterator = values.questions[i].choices[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n                var j = _step.value;\n\n                if (j) {\n                  choices.push({\n                    choice_text: j\n                  });\n                }\n              }\n            } catch (err) {\n              _didIteratorError = true;\n              _iteratorError = err;\n            } finally {\n              try {\n                if (!_iteratorNormalCompletion && _iterator.return != null) {\n                  _iterator.return();\n                }\n              } finally {\n                if (_didIteratorError) {\n                  throw _iteratorError;\n                }\n              }\n            }\n\n            question_set.push({\n              question_text: values.question[i],\n              answer: values.answers[i],\n              choice_set: choices\n            });\n          }\n\n          var asnt = {\n            title: values.title,\n            question_set: question_set\n          };\n          console.log(asnt); //this.props.oncreateAssignment(asnt);\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AssignmentCreate, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log(this.props.getAssigned());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var getFieldDecorator = this.props.form.getFieldDecorator;\n      var questions = [];\n\n      for (var i = 0; i < this.state.formCount; i += 1) {\n        questions.push(React.createElement(\"div\", {\n          key: i,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73\n          },\n          __self: this\n        }, questions.length > 0 ? React.createElement(Icon, {\n          className: \"dynamic-delete-button\",\n          type: \"minus-circle-o\",\n          disabled: questions.length === 0,\n          onClick: function onClick() {\n            return _this2.remove();\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75\n          },\n          __self: this\n        }) : null, React.createElement(QuestionForm, Object.assign({\n          id: i\n        }, this.props, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82\n          },\n          __self: this\n        })), React.createElement(Divider, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 84\n          },\n          __self: this\n        })));\n      }\n\n      var optionsubjects = [];\n\n      if (this.props.assignedsubjects.length > 0 && this.props.assignedsubjects[0].subjects.length > 0) {\n        // console.log(true, this.props.assignedsubjects[0].subjects);\n        for (var _i in this.props.assignedsubjects[0].subjects) {\n          optionsubjects.push({\n            value: this.props.assignedsubjects[0].subjects[_i].id,\n            label: this.props.assignedsubjects[0].subjects[_i].tittle\n          });\n        }\n      }\n\n      console.log(optionsubjects);\n      return React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, \"Assignment Create\"), React.createElement(Form.Item, {\n        label: \"Title:\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, getFieldDecorator(\"title\", {\n        validateTrigger: [\"onChange\", \"onBlur\"],\n        rules: [{\n          required: true,\n          message: \"Please input title\"\n        }]\n      })(React.createElement(Select, {\n        onChange: this.onChangesubjects,\n        options: optionsubjects,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }))), questions, React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"secondary\",\n        onClick: this.add,\n        style: {\n          width: \"60%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Icon, {\n        type: \"plus\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }), \" Add More Questions\")), React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }]);\n\n  return AssignmentCreate;\n}(React.Component);\n\nAssignmentCreate.propTypes = {\n  assignedsubjects: PropTypes.func.isRequired,\n  getAssigned: PropTypes.func.isRequired\n};\nvar WrappedAssignmentCreate = Form.create()(AssignmentCreate);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    username: state.auth.user,\n    loading: state.assignments.loading,\n    assignedsubjects: state.assignedsubjects.assignedsubjects\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    oncreateAssignment: function oncreateAssignment(asnt) {\n      return dispatch(actions.createAssignment(asnt));\n    },\n    getAssigned: getAssigned\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(WrappedAssignmentCreate);","map":{"version":3,"sources":["C:/Users/Shahnoor Khalidi/Desktop/OBE_Management_System(GITHUB)/OBE-frontend/test/src/component/Teacher_Framework/Assignment/AssignmentCreate.js"],"names":["Form","Input","Icon","Button","Divider","React","Select","QuestionForm","connect","PropTypes","getAssigned","actions","AssignmentCreate","state","formCount","remove","setState","add","handleSubmit","e","preventDefault","props","form","validateFields","err","values","console","log","question_set","i","question","choices","questions","j","push","choice_text","question_text","answer","answers","choice_set","asnt","title","getFieldDecorator","length","optionsubjects","assignedsubjects","subjects","value","id","label","tittle","validateTrigger","rules","required","message","onChangesubjects","width","Component","propTypes","func","isRequired","WrappedAssignmentCreate","create","mapStateToProps","username","auth","user","loading","assignments","mapDispatchToProps","dispatch","oncreateAssignment","createAssignment"],"mappings":"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","sourcesContent":["import { Form, Input, Icon, Button, Divider } from \"antd\";\r\nimport React from \"react\";\r\nimport Select from \"react-select\";\r\nimport QuestionForm from \"./QuestionForm\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { getAssigned } from \"../../../actions/teacher_framework_actions/viewassignedsubjects\";\r\nimport * as actions from \"../../../actions/teacher_framework_actions/assignment\";\r\nclass AssignmentCreate extends React.Component {\r\n  state = {\r\n    formCount: 1,\r\n  };\r\n  static propTypes = {\r\n    assignedsubjects: PropTypes.func.isRequired,\r\n    getAssigned: PropTypes.func.isRequired,\r\n  };\r\n\r\n  componentDidMount() {\r\n    console.log(this.props.getAssigned());\r\n  }\r\n  remove = () => {\r\n    const { formCount } = this.state;\r\n    this.setState({\r\n      formCount: formCount - 1,\r\n    });\r\n  };\r\n\r\n  add = () => {\r\n    const { formCount } = this.state;\r\n    this.setState({\r\n      formCount: formCount + 1,\r\n    });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    this.props.form.validateFields((err, values) => {\r\n      if (!err) {\r\n        console.log(\"Received values of form: \", values);\r\n\r\n        const question_set = [];\r\n\r\n        for (let i in values.question) {\r\n          const choices = [];\r\n          for (let j of values.questions[i].choices) {\r\n            if (j) {\r\n              choices.push({\r\n                choice_text: j,\r\n              });\r\n            }\r\n          }\r\n          question_set.push({\r\n            question_text: values.question[i],\r\n            answer: values.answers[i],\r\n            choice_set: choices,\r\n          });\r\n        }\r\n        const asnt = {\r\n          title: values.title,\r\n          question_set,\r\n        };\r\n        console.log(asnt);\r\n        //this.props.oncreateAssignment(asnt);\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { getFieldDecorator } = this.props.form;\r\n    const questions = [];\r\n    for (let i = 0; i < this.state.formCount; i += 1) {\r\n      questions.push(\r\n        <div key={i}>\r\n          {questions.length > 0 ? (\r\n            <Icon\r\n              className=\"dynamic-delete-button\"\r\n              type=\"minus-circle-o\"\r\n              disabled={questions.length === 0}\r\n              onClick={() => this.remove()}\r\n            />\r\n          ) : null}\r\n          <QuestionForm id={i} {...this.props} />\r\n\r\n          <Divider />\r\n        </div>\r\n      );\r\n    }\r\n    let optionsubjects = [];\r\n    if (\r\n      this.props.assignedsubjects.length > 0 &&\r\n      this.props.assignedsubjects[0].subjects.length > 0\r\n    ) {\r\n      // console.log(true, this.props.assignedsubjects[0].subjects);\r\n      for (let i in this.props.assignedsubjects[0].subjects) {\r\n        optionsubjects.push({\r\n          value: this.props.assignedsubjects[0].subjects[i].id,\r\n          label: this.props.assignedsubjects[0].subjects[i].tittle,\r\n        });\r\n      }\r\n    }\r\n    console.log(optionsubjects);\r\n    return (\r\n      <Form onSubmit={this.handleSubmit}>\r\n        <h1>Assignment Create</h1>\r\n        <Form.Item label=\"Title:\">\r\n          {getFieldDecorator(`title`, {\r\n            validateTrigger: [\"onChange\", \"onBlur\"],\r\n            rules: [\r\n              {\r\n                required: true,\r\n                message: \"Please input title\",\r\n              },\r\n            ],\r\n          })(\r\n            <Select onChange={this.onChangesubjects} options={optionsubjects} />\r\n          )}\r\n        </Form.Item>\r\n        {questions}\r\n        <Form.Item>\r\n          <Button type=\"secondary\" onClick={this.add} style={{ width: \"60%\" }}>\r\n            <Icon type=\"plus\" /> Add More Questions\r\n          </Button>\r\n        </Form.Item>\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst WrappedAssignmentCreate = Form.create()(AssignmentCreate);\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    username: state.auth.user,\r\n    loading: state.assignments.loading,\r\n    assignedsubjects: state.assignedsubjects.assignedsubjects,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    oncreateAssignment: (asnt) => dispatch(actions.createAssignment(asnt)),\r\n    getAssigned,\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(WrappedAssignmentCreate);\r\n"]},"metadata":{},"sourceType":"module"}
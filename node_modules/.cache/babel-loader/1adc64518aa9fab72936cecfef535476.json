{"ast":null,"code":"import axios from \"axios\";\nimport { USER_LOADED, USER_LOADING, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT_SUCCESS } from \"./types\"; //CHECK TOKEN AND LOAD USER\n\nexport var loadUser = function loadUser() {\n  return function (dispatch, getState) {\n    //user loading\n    dispatch({\n      type: USER_LOADING\n    });\n    axios.get(\"http://127.0.0.1:8000/api/auth/user\", tokenConfig(getState)).then(function (res) {\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      console.log(err);\n      dispatch({\n        type: AUTH_ERROR\n      });\n    });\n  };\n}; // //LOGIN USER\n\nexport var login = function login(username, password) {\n  return function (dispatch) {\n    // if token add to headers config\n    var config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    var body = JSON.stringify({\n      username: username,\n      password: password\n    });\n    axios.post(\"/auth/login\", body, config).then(function (res) {\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      dispatch({\n        type: LOGIN_FAIL\n      });\n    });\n  };\n};\nexport function logout() {\n  return function (dispatch) {\n    var token = token;\n    localStorage.removeItem(\"token\", token);\n    dispatch({\n      type: LOGOUT_SUCCESS\n    });\n  };\n}\nexport var tokenConfig = function tokenConfig(getState) {\n  //gt token from state\n  var token = getState().auth.token; //Headers\n\n  var config = {\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }; //if token add to headers config\n\n  if (token) {\n    config.headers[\"Authorization\"] = \"Token \".concat(token);\n  }\n\n  return config;\n};","map":{"version":3,"sources":["C:/Users/Shahnoor Khalidi/Desktop/HPCC PROJECT/React-FYPRecordData/src/actions/auth.js"],"names":["axios","USER_LOADED","USER_LOADING","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_SUCCESS","loadUser","dispatch","getState","type","get","tokenConfig","then","res","payload","data","catch","err","console","log","login","username","password","config","headers","body","JSON","stringify","post","logout","token","localStorage","removeItem","auth"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACEC,WADF,EAEEC,YAFF,EAGEC,UAHF,EAIEC,aAJF,EAKEC,UALF,EAMEC,cANF,QAOO,SAPP,C,CASA;;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,SAAM,UAACC,QAAD,EAAWC,QAAX,EAAwB;AACpD;AACAD,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAER;AAAR,KAAD,CAAR;AAEAF,IAAAA,KAAK,CACFW,GADH,CACO,qCADP,EAC8CC,WAAW,CAACH,QAAD,CADzD,EAEGI,IAFH,CAEQ,UAACC,GAAD,EAAS;AACbN,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAET,WADC;AAEPc,QAAAA,OAAO,EAAED,GAAG,CAACE;AAFN,OAAD,CAAR;AAID,KAPH,EAQGC,KARH,CAQS,UAACC,GAAD,EAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAV,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAEP;AADC,OAAD,CAAR;AAGD,KAbH;AAcD,GAlBuB;AAAA,CAAjB,C,CAoBP;;AAEA,OAAO,IAAMkB,KAAK,GAAG,SAARA,KAAQ,CAACC,QAAD,EAAWC,QAAX;AAAA,SAAwB,UAACf,QAAD,EAAc;AACzD;AACA,QAAMgB,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf;AAMA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAEN,MAAAA,QAAQ,EAARA,QAAF;AAAYC,MAAAA,QAAQ,EAARA;AAAZ,KAAf,CAAb;AACAvB,IAAAA,KAAK,CACF6B,IADH,CACQ,aADR,EACuBH,IADvB,EAC6BF,MAD7B,EAEGX,IAFH,CAEQ,UAACC,GAAD,EAAS;AACbN,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAEN,aADC;AAEPW,QAAAA,OAAO,EAAED,GAAG,CAACE;AAFN,OAAD,CAAR;AAID,KAPH,EAQGC,KARH,CAQS,UAACC,GAAD,EAAS;AACdV,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAEL;AADC,OAAD,CAAR;AAGD,KAZH;AAaD,GAtBoB;AAAA,CAAd;AAwBP,OAAO,SAASyB,MAAT,GAAkB;AACvB,SAAO,UAACtB,QAAD,EAAc;AACnB,QAAMuB,KAAK,GAAGA,KAAd;AACAC,IAAAA,YAAY,CAACC,UAAb,CAAwB,OAAxB,EAAiCF,KAAjC;AACAvB,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAEJ;AADC,KAAD,CAAR;AAGD,GAND;AAOD;AAED,OAAO,IAAMM,WAAW,GAAG,SAAdA,WAAc,CAACH,QAAD,EAAc;AACvC;AAEA,MAAMsB,KAAK,GAAGtB,QAAQ,GAAGyB,IAAX,CAAgBH,KAA9B,CAHuC,CAKvC;;AACA,MAAMP,MAAM,GAAG;AACbC,IAAAA,OAAO,EAAE;AACP,sBAAgB;AADT;AADI,GAAf,CANuC,CAWvC;;AACA,MAAIM,KAAJ,EAAW;AACTP,IAAAA,MAAM,CAACC,OAAP,CAAe,eAAf,oBAA2CM,KAA3C;AACD;;AACD,SAAOP,MAAP;AACD,CAhBM","sourcesContent":["import axios from \"axios\";\r\n\r\nimport {\r\n  USER_LOADED,\r\n  USER_LOADING,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT_SUCCESS,\r\n} from \"./types\";\r\n\r\n//CHECK TOKEN AND LOAD USER\r\n\r\nexport const loadUser = () => (dispatch, getState) => {\r\n  //user loading\r\n  dispatch({ type: USER_LOADING });\r\n\r\n  axios\r\n    .get(\"http://127.0.0.1:8000/api/auth/user\", tokenConfig(getState))\r\n    .then((res) => {\r\n      dispatch({\r\n        type: USER_LOADED,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      dispatch({\r\n        type: AUTH_ERROR,\r\n      });\r\n    });\r\n};\r\n\r\n// //LOGIN USER\r\n\r\nexport const login = (username, password) => (dispatch) => {\r\n  // if token add to headers config\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  const body = JSON.stringify({ username, password });\r\n  axios\r\n    .post(\"/auth/login\", body, config)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: LOGIN_SUCCESS,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      dispatch({\r\n        type: LOGIN_FAIL,\r\n      });\r\n    });\r\n};\r\n\r\nexport function logout() {\r\n  return (dispatch) => {\r\n    const token = token;\r\n    localStorage.removeItem(\"token\", token);\r\n    dispatch({\r\n      type: LOGOUT_SUCCESS,\r\n    });\r\n  };\r\n}\r\n\r\nexport const tokenConfig = (getState) => {\r\n  //gt token from state\r\n\r\n  const token = getState().auth.token;\r\n\r\n  //Headers\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n  //if token add to headers config\r\n  if (token) {\r\n    config.headers[\"Authorization\"] = `Token ${token}`;\r\n  }\r\n  return config;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
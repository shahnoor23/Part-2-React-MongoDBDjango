{"ast":null,"code":"var maxHeightIE = 1533915;\n/**\n * @hidden\n */\n\nvar VirtualScroll =\n/** @class */\nfunction () {\n  function VirtualScroll() {\n    var _this = this;\n\n    this.containerHeight = 0;\n    this.skip = 0;\n    this.total = 0;\n    this.enabled = false;\n    this.pageSize = 0;\n    this.itemHeight = 0;\n    this.prevScrollPos = 0;\n    this.listTranslate = 0;\n    this.scrollSyncing = false;\n\n    this.scrollerRef = function (element) {\n      var vs = _this;\n      vs.container = element;\n\n      if (element) {\n        element.setAttribute('unselectable', 'on');\n        setTimeout(vs.calcScrollElementHeight.bind(vs), 0);\n      }\n    };\n\n    this.calcScrollElementHeight = function () {\n      _this.scrollSyncing = true;\n      var heightChanged = false;\n      _this.itemHeight = _this.list ? _this.list.children[0].offsetHeight : _this.itemHeight;\n      _this.containerHeight = Math.min(maxHeightIE, _this.itemHeight * _this.total);\n      var newHeight = _this.containerHeight;\n\n      if (_this.scrollElement) {\n        heightChanged = _this.scrollElement.style.height !== newHeight + 'px';\n\n        if (heightChanged) {\n          _this.scrollElement.style.height = newHeight + 'px';\n        }\n      }\n\n      _this.scrollSyncing = false;\n      return heightChanged;\n    };\n\n    this.scrollHandler = this.scrollHandler.bind(this);\n  }\n\n  Object.defineProperty(VirtualScroll.prototype, \"translate\", {\n    get: function get() {\n      return this.listTranslate;\n    },\n    enumerable: true,\n    configurable: true\n  });\n\n  VirtualScroll.prototype.changePage = function (skip, e) {\n    var newSkip = Math.min(Math.max(0, skip), this.total - this.pageSize);\n\n    if (newSkip !== this.skip) {\n      this.PageChange({\n        skip: newSkip,\n        take: this.pageSize\n      }, e);\n    }\n  };\n\n  VirtualScroll.prototype.translateTo = function (dY) {\n    this.listTranslate = dY;\n\n    if (this.list) {\n      this.list.style.transform = 'translateY(' + dY + 'px)';\n    }\n  };\n\n  VirtualScroll.prototype.reset = function () {\n    if (this.container) {\n      this.calcScrollElementHeight();\n      this.container.scrollTop = 0;\n      this.translateTo(0);\n    }\n  };\n\n  VirtualScroll.prototype.scrollToEnd = function () {\n    if (this.container && this.list) {\n      this.calcScrollElementHeight();\n      this.container.scrollTop = this.container.scrollHeight - this.container.offsetHeight;\n      this.translateTo(this.container.scrollHeight - this.list.offsetHeight);\n    }\n  };\n\n  VirtualScroll.prototype.localScrollUp = function (e) {\n    var height = this.itemHeight;\n    var scrollTop = this.container.scrollTop;\n    var targetTranslate = this.listTranslate;\n    var items;\n    var additionalOnTop = scrollTop - targetTranslate;\n\n    if (additionalOnTop > height) {\n      return;\n    }\n\n    for (items = 0; items < this.skip; items++) {\n      if (targetTranslate + height + additionalOnTop <= scrollTop) {\n        break;\n      }\n\n      targetTranslate -= height;\n    }\n\n    targetTranslate = this.validateTranslate(targetTranslate);\n\n    if (this.skip - items <= 0 && targetTranslate >= scrollTop) {\n      this.translateTo(0);\n      this.changePage(0, e);\n      this.container.scrollTop = 0;\n      return;\n    }\n\n    if (targetTranslate !== this.listTranslate) {\n      this.translateTo(targetTranslate);\n      this.changePage(this.skip - items, e);\n    }\n  };\n\n  VirtualScroll.prototype.localScrollDown = function (e) {\n    var height = this.itemHeight;\n    var scrollTop = this.container.scrollTop;\n    var targetTranslate = this.listTranslate;\n    var itemsLenght = this.list.children.length;\n    var items;\n\n    for (items = 0; items < itemsLenght; items++) {\n      if (targetTranslate + height >= scrollTop) {\n        break;\n      }\n\n      targetTranslate += height;\n    }\n\n    targetTranslate = this.validateTranslate(targetTranslate);\n\n    if (items >= itemsLenght && this.skip + items >= this.total) {\n      this.translateTo(targetTranslate);\n      this.changePage(this.total - 1, e);\n    } else if (targetTranslate !== this.listTranslate) {\n      this.translateTo(targetTranslate);\n      this.changePage(this.skip + items, e);\n    }\n  };\n\n  VirtualScroll.prototype.scrollNonStrict = function (e) {\n    var floatItemIndex = this.total * this.prevScrollPos / this.containerHeight;\n    var itemIndex = Math.min(Math.floor(floatItemIndex), this.total - 1);\n    var targetTranslate = this.containerHeight * floatItemIndex / this.total;\n    targetTranslate = this.validateTranslate(targetTranslate);\n    this.translateTo(targetTranslate);\n    this.changePage(itemIndex, e);\n  };\n\n  VirtualScroll.prototype.scrollHandler = function (e) {\n    var scrollTop = this.container ? this.container.scrollTop : 0;\n    var prev = this.prevScrollPos;\n    this.prevScrollPos = scrollTop;\n\n    if (!this.enabled || !this.list || !this.container || this.scrollSyncing) {\n      return;\n    }\n\n    if (scrollTop - prev <= 0 && scrollTop > this.listTranslate - this.list.scrollHeight / 10) {\n      this.localScrollUp(e);\n    } else if (scrollTop - prev > 0 && scrollTop < this.listTranslate + this.list.scrollHeight * 2 / 3) {\n      this.localScrollDown(e);\n    } else {\n      this.scrollNonStrict(e);\n    }\n  };\n\n  VirtualScroll.prototype.validateTranslate = function (translate) {\n    translate = Math.max(0, translate);\n    translate = Math.min(this.containerHeight - this.list.offsetHeight, translate);\n    return translate;\n  };\n\n  return VirtualScroll;\n}();\n\nexport default VirtualScroll;","map":null,"metadata":{},"sourceType":"module"}
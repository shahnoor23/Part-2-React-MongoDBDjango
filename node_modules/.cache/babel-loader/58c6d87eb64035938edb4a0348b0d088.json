{"ast":null,"code":"import _objectSpread from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\OBE_Management_System(GITHUB)\\\\OBE-frontend\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\OBE_Management_System(GITHUB)\\\\OBE-frontend\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\OBE_Management_System(GITHUB)\\\\OBE-frontend\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\OBE_Management_System(GITHUB)\\\\OBE-frontend\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\OBE_Management_System(GITHUB)\\\\OBE-frontend\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\OBE_Management_System(GITHUB)\\\\OBE-frontend\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\OBE_Management_System(GITHUB)\\\\OBE-frontend\\\\test\\\\src\\\\component\\\\Teacher_Framework\\\\create_quizzes\\\\postquestions.js\";\nimport React, { Component } from \"react\";\nimport { Form, Input, Button, Col, Row } from \"antd\";\nimport { MinusCircleOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { addAssignment } from \"../../../actions/teacher_framework_actions/create_quizz\";\nimport { getAssigned } from \"../../../actions/teacher_framework_actions/viewassignedsubjects\";\nimport Select from \"react-select\";\nimport PostChoices from \"./postchoices\";\nexport var Postquestions =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Postquestions, _Component);\n\n  function Postquestions() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Postquestions);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Postquestions)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      subject_name: null,\n      question_set: [],\n      clos: null,\n      choices_set: []\n    };\n\n    _this.onChangesubjects = function (selected) {\n      if (selected.value === null) {\n        _this.setState({\n          subject_name: null\n        });\n      } else {\n        _this.setState({\n          subject_name: selected\n        });\n      }\n    };\n\n    _this.onChangeclos = function (selected) {\n      //console.log(selected);\n      _this.setState({\n        clos: selected\n      });\n    };\n\n    _this.clooptions = function () {\n      if (_this.state.subject_name === null) {\n        //console.log(null);\n        return null;\n      }\n\n      var clooptions = [];\n\n      if (_this.state.subject_name !== null) {\n        for (var i in _this.props.assignedsubjects) {\n          if (_this.state.subject_name.value === _this.props.assignedsubjects[i].id) {\n            for (var _i in _this.props.assignedsubjects[0].subjects[0].clos) {\n              clooptions.push({\n                value: _this.props.assignedsubjects[0].subjects[0].clos[_i].id,\n                label: _this.props.assignedsubjects[0].subjects[0].clos[_i].full_discription\n              });\n            }\n          }\n        }\n      } //console.log(clooptions);\n\n\n      return clooptions;\n    };\n\n    _this.submitwithchoice = function (values) {\n      console.log(\"From Post question------\", values);\n\n      _this.setState(function (prevState) {\n        return _objectSpread({}, prevState, {\n          question_set: [_objectSpread({}, prevState.question_set, {\n            values: values\n          })]\n        });\n      });\n    };\n\n    _this.choicesChange = function (e) {\n      console.log(e.target, e.target.value);\n\n      _this.setState(function (prevState) {\n        return _objectSpread({}, prevState, {\n          choices_set: [_objectSpread({}, prevState.choices_set, {\n            choice_text: e.target.value\n          })]\n        });\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Postquestions, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getAssigned();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      console.log(\"hash----\", this.state.choices_set);\n      var optionsubjects = [];\n\n      if (this.props.assignedsubjects.length > 0 && this.props.assignedsubjects[0].subjects.length > 0) {\n        // console.log(true, this.props.assignedsubjects[0].subjects);\n        for (var i in this.props.assignedsubjects[0].subjects) {\n          optionsubjects.push({\n            value: this.props.assignedsubjects[0].subjects[i].id,\n            label: this.props.assignedsubjects[0].subjects[i].tittle\n          });\n        }\n      }\n\n      console.log(optionsubjects);\n      var rules = [{\n        required: true\n      }];\n\n      var onFinish = function onFinish(values) {\n        console.log(\"Received values of form:\", values);\n\n        _this2.props.questionSubmit(values);\n      };\n\n      var onFinishChoices = function onFinishChoices(choices) {\n        console.log(\"Received values of form:\", choices);\n\n        _this2.props.ChoicesSubmit(choices);\n      };\n\n      return React.createElement(Form, {\n        onFinish: onFinish,\n        className: \"my-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(Form.Item, {\n        name: [\"subject_name\"],\n        fieldKey: [\"subject_name\"],\n        rules: rules,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, React.createElement(Select, {\n        onChange: this.onChangesubjects,\n        options: optionsubjects,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      })), React.createElement(Form.List, {\n        name: \"question_set\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, function (fields, _ref) {\n        var add = _ref.add,\n            remove = _ref.remove;\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126\n          },\n          __self: this\n        }, fields.map(function (field, index) {\n          return React.createElement(Row, {\n            key: field.key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 128\n            },\n            __self: this\n          }, React.createElement(Col, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129\n            },\n            __self: this\n          }, React.createElement(Form.Item, {\n            name: [field.name, \"label\"],\n            fieldKey: [field.fieldKey, \"label\"],\n            rules: rules,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 130\n            },\n            __self: this\n          }, React.createElement(Input, {\n            placeholder: \"Enter Question\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 135\n            },\n            __self: this\n          }))), React.createElement(Col, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 138\n            },\n            __self: this\n          }, React.createElement(Form.Item, {\n            name: [field.name, \"clo\"],\n            fieldKey: [field.fieldKey, \"clo\"],\n            rules: rules,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 139\n            },\n            __self: this\n          }, React.createElement(Select, {\n            onChange: _this2.onChangeclos,\n            options: _this2.clooptions(),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 144\n            },\n            __self: this\n          }))), React.createElement(Col, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 151\n            },\n            __self: this\n          }, React.createElement(Form, {\n            onFinish: onFinishChoices,\n            className: \"my-form\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 153\n            },\n            __self: this\n          }, React.createElement(Form.List, {\n            name: \"choice_set\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 154\n            },\n            __self: this\n          }, function (fields, _ref2) {\n            var add = _ref2.add,\n                remove = _ref2.remove;\n            return React.createElement(\"div\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 157\n              },\n              __self: this\n            }, fields.map(function (field, index) {\n              return React.createElement(Row, {\n                key: field.key,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 159\n                },\n                __self: this\n              }, React.createElement(Col, {\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 160\n                },\n                __self: this\n              }, React.createElement(Form.Item, {\n                name: [field.name, \"label\"],\n                fieldKey: [field.fieldKey, \"label\"],\n                rules: rules,\n                onChange: _this2.choicesChange,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 161\n                },\n                __self: this\n              }, React.createElement(Input, {\n                placeholder: \"Enter Choices\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 167\n                },\n                __self: this\n              }))), React.createElement(Col, {\n                flex: \"none\",\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 170\n                },\n                __self: this\n              }, React.createElement(MinusCircleOutlined, {\n                className: \"dynamic-delete-button\",\n                onClick: function onClick() {\n                  remove(field.name);\n                },\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 171\n                },\n                __self: this\n              })));\n            }), React.createElement(Form.Item, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 180\n              },\n              __self: this\n            }, React.createElement(Button, {\n              type: \"dashed\",\n              onClick: function onClick() {\n                add();\n              },\n              style: {\n                width: \"100%\"\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 181\n              },\n              __self: this\n            }, React.createElement(PlusOutlined, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 188\n              },\n              __self: this\n            }), \" Add Choices\")));\n          }), React.createElement(Form.Item, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 196\n            },\n            __self: this\n          }, React.createElement(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 197\n            },\n            __self: this\n          }, \"Submit\")))), React.createElement(Col, {\n            flex: \"none\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 203\n            },\n            __self: this\n          }, React.createElement(MinusCircleOutlined, {\n            className: \"dynamic-delete-button\",\n            onClick: function onClick() {\n              remove(field.name);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 204\n            },\n            __self: this\n          })));\n        }), React.createElement(Form.Item, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213\n          },\n          __self: this\n        }, React.createElement(Button, {\n          type: \"dashed\",\n          onClick: function onClick() {\n            add();\n          },\n          style: {\n            width: \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        }, React.createElement(PlusOutlined, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221\n          },\n          __self: this\n        }), \" Add Questions\")));\n      }), React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 230\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }]);\n\n  return Postquestions;\n}(Component);\nPostquestions.propTypes = {\n  assignedsubjects: PropTypes.func.isRequired,\n  getAssigned: PropTypes.func.isRequired,\n  addAssignment: PropTypes.func.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    assignedsubjects: state.assignedsubjects.assignedsubjects\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addAssignment: addAssignment,\n  getAssigned: getAssigned\n})(Postquestions);","map":{"version":3,"sources":["C:/Users/Shahnoor Khalidi/Desktop/OBE_Management_System(GITHUB)/OBE-frontend/test/src/component/Teacher_Framework/create_quizzes/postquestions.js"],"names":["React","Component","Form","Input","Button","Col","Row","MinusCircleOutlined","PlusOutlined","connect","PropTypes","addAssignment","getAssigned","Select","PostChoices","Postquestions","state","subject_name","question_set","clos","choices_set","onChangesubjects","selected","value","setState","onChangeclos","clooptions","i","props","assignedsubjects","id","subjects","push","label","full_discription","submitwithchoice","values","console","log","prevState","choicesChange","e","target","choice_text","optionsubjects","length","tittle","rules","required","onFinish","questionSubmit","onFinishChoices","choices","ChoicesSubmit","fields","add","remove","map","field","index","key","name","fieldKey","width","propTypes","func","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Form, Input, Button, Col, Row } from \"antd\";\r\nimport { MinusCircleOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { addAssignment } from \"../../../actions/teacher_framework_actions/create_quizz\";\r\nimport { getAssigned } from \"../../../actions/teacher_framework_actions/viewassignedsubjects\";\r\nimport Select from \"react-select\";\r\nimport PostChoices from \"./postchoices\";\r\nexport class Postquestions extends Component {\r\n  state = {\r\n    subject_name: null,\r\n    question_set: [],\r\n    clos: null,\r\n    choices_set: [],\r\n  };\r\n  static propTypes = {\r\n    assignedsubjects: PropTypes.func.isRequired,\r\n    getAssigned: PropTypes.func.isRequired,\r\n    addAssignment: PropTypes.func.isRequired,\r\n  };\r\n  componentDidMount() {\r\n    this.props.getAssigned();\r\n  }\r\n  onChangesubjects = (selected) => {\r\n    if (selected.value === null) {\r\n      this.setState({\r\n        subject_name: null,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        subject_name: selected,\r\n      });\r\n    }\r\n  };\r\n  onChangeclos = (selected) => {\r\n    //console.log(selected);\r\n    this.setState({\r\n      clos: selected,\r\n    });\r\n  };\r\n  clooptions = () => {\r\n    if (this.state.subject_name === null) {\r\n      //console.log(null);\r\n      return null;\r\n    }\r\n    let clooptions = [];\r\n    if (this.state.subject_name !== null) {\r\n      for (let i in this.props.assignedsubjects) {\r\n        if (\r\n          this.state.subject_name.value === this.props.assignedsubjects[i].id\r\n        ) {\r\n          for (let i in this.props.assignedsubjects[0].subjects[0].clos) {\r\n            clooptions.push({\r\n              value: this.props.assignedsubjects[0].subjects[0].clos[i].id,\r\n              label: this.props.assignedsubjects[0].subjects[0].clos[i]\r\n                .full_discription,\r\n            });\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    //console.log(clooptions);\r\n    return clooptions;\r\n  };\r\n\r\n  submitwithchoice = (values) => {\r\n    console.log(\"From Post question------\", values);\r\n\r\n    this.setState((prevState) => ({\r\n      ...prevState,\r\n      question_set: [{ ...prevState.question_set, values }],\r\n    }));\r\n  };\r\n\r\n  choicesChange = (e) => {\r\n    console.log(e.target, e.target.value);\r\n\r\n    this.setState((prevState) => ({\r\n      ...prevState,\r\n      choices_set: [{ ...prevState.choices_set, choice_text: e.target.value }],\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    console.log(\"hash----\", this.state.choices_set);\r\n    let optionsubjects = [];\r\n    if (\r\n      this.props.assignedsubjects.length > 0 &&\r\n      this.props.assignedsubjects[0].subjects.length > 0\r\n    ) {\r\n      // console.log(true, this.props.assignedsubjects[0].subjects);\r\n      for (let i in this.props.assignedsubjects[0].subjects) {\r\n        optionsubjects.push({\r\n          value: this.props.assignedsubjects[0].subjects[i].id,\r\n          label: this.props.assignedsubjects[0].subjects[i].tittle,\r\n        });\r\n      }\r\n    }\r\n    console.log(optionsubjects);\r\n    const rules = [{ required: true }];\r\n\r\n    const onFinish = (values) => {\r\n      console.log(\"Received values of form:\", values);\r\n      this.props.questionSubmit(values);\r\n    };\r\n\r\n    const onFinishChoices = (choices) => {\r\n      console.log(\"Received values of form:\", choices);\r\n      this.props.ChoicesSubmit(choices);\r\n    };\r\n\r\n    return (\r\n      <Form onFinish={onFinish} className=\"my-form\">\r\n        <Form.Item\r\n          name={[\"subject_name\"]}\r\n          fieldKey={[\"subject_name\"]}\r\n          rules={rules}\r\n        >\r\n          <Select onChange={this.onChangesubjects} options={optionsubjects} />\r\n        </Form.Item>\r\n        <Form.List name=\"question_set\">\r\n          {(fields, { add, remove }) => {\r\n            return (\r\n              <div>\r\n                {fields.map((field, index) => (\r\n                  <Row key={field.key}>\r\n                    <Col>\r\n                      <Form.Item\r\n                        name={[field.name, \"label\"]}\r\n                        fieldKey={[field.fieldKey, \"label\"]}\r\n                        rules={rules}\r\n                      >\r\n                        <Input placeholder=\"Enter Question\" />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col>\r\n                      <Form.Item\r\n                        name={[field.name, \"clo\"]}\r\n                        fieldKey={[field.fieldKey, \"clo\"]}\r\n                        rules={rules}\r\n                      >\r\n                        <Select\r\n                          onChange={this.onChangeclos}\r\n                          options={this.clooptions()}\r\n                        />\r\n                      </Form.Item>\r\n                    </Col>\r\n\r\n                    <Col>\r\n                      {/* <PostChoices ChoicesSubmit={this.submitwithchoice} /> */}\r\n                      <Form onFinish={onFinishChoices} className=\"my-form\">\r\n                        <Form.List name=\"choice_set\">\r\n                          {(fields, { add, remove }) => {\r\n                            return (\r\n                              <div>\r\n                                {fields.map((field, index) => (\r\n                                  <Row key={field.key}>\r\n                                    <Col>\r\n                                      <Form.Item\r\n                                        name={[field.name, \"label\"]}\r\n                                        fieldKey={[field.fieldKey, \"label\"]}\r\n                                        rules={rules}\r\n                                        onChange={this.choicesChange}\r\n                                      >\r\n                                        <Input placeholder=\"Enter Choices\" />\r\n                                      </Form.Item>\r\n                                    </Col>\r\n                                    <Col flex=\"none\">\r\n                                      <MinusCircleOutlined\r\n                                        className=\"dynamic-delete-button\"\r\n                                        onClick={() => {\r\n                                          remove(field.name);\r\n                                        }}\r\n                                      />\r\n                                    </Col>\r\n                                  </Row>\r\n                                ))}\r\n                                <Form.Item>\r\n                                  <Button\r\n                                    type=\"dashed\"\r\n                                    onClick={() => {\r\n                                      add();\r\n                                    }}\r\n                                    style={{ width: \"100%\" }}\r\n                                  >\r\n                                    <PlusOutlined /> Add Choices\r\n                                  </Button>\r\n                                </Form.Item>\r\n                              </div>\r\n                            );\r\n                          }}\r\n                        </Form.List>\r\n\r\n                        <Form.Item>\r\n                          <Button type=\"primary\" htmlType=\"submit\">\r\n                            Submit\r\n                          </Button>\r\n                        </Form.Item>\r\n                      </Form>\r\n                    </Col>\r\n                    <Col flex=\"none\">\r\n                      <MinusCircleOutlined\r\n                        className=\"dynamic-delete-button\"\r\n                        onClick={() => {\r\n                          remove(field.name);\r\n                        }}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                ))}\r\n                <Form.Item>\r\n                  <Button\r\n                    type=\"dashed\"\r\n                    onClick={() => {\r\n                      add();\r\n                    }}\r\n                    style={{ width: \"100%\" }}\r\n                  >\r\n                    <PlusOutlined /> Add Questions\r\n                  </Button>\r\n                </Form.Item>\r\n              </div>\r\n            );\r\n          }}\r\n        </Form.List>\r\n\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  assignedsubjects: state.assignedsubjects.assignedsubjects,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  addAssignment,\r\n  getAssigned,\r\n})(Postquestions);\r\n"]},"metadata":{},"sourceType":"module"}
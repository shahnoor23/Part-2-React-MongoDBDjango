{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\OBE_Management_System(GITHUB)\\\\OBE-frontend\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\OBE_Management_System(GITHUB)\\\\OBE-frontend\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\OBE_Management_System(GITHUB)\\\\OBE-frontend\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\OBE_Management_System(GITHUB)\\\\OBE-frontend\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\OBE_Management_System(GITHUB)\\\\OBE-frontend\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\OBE_Management_System(GITHUB)\\\\OBE-frontend\\\\test\\\\src\\\\component\\\\Teacher_Framework\\\\Assignment\\\\AssignmentDetail.js\";\nimport { Card, Skeleton, message } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../../actions/teacher_framework_actions/assignment\";\nimport Questions from \"./Questions\";\nimport Choices from \"./Choices\";\nvar cardStyle = {\n  marginTop: \"20px\",\n  marginBottom: \"20px\"\n};\n\nvar AssignmentDetail =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(AssignmentDetail, _React$PureComponent);\n\n  function AssignmentDetail() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AssignmentDetail);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AssignmentDetail)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      usersAnswers: {}\n    };\n\n    _this.onChange = function (e, qId) {\n      var usersAnswers = _this.state.usersAnswers;\n      usersAnswers[qId] = e.target.value;\n\n      _this.setState({\n        usersAnswers: usersAnswers\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(AssignmentDetail, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.ongetAssignmentDetail(this.props.match.params.id);\n    }\n  }, {\n    key: \"handleSubmit\",\n    //    how to post\n    //    \"response_set\": [\n    //     {   \"question\":1,\n    //         \"answer_text\": \"Jon Snow\"\n    //     },\n    //     {    \"question\":2,\n    //         \"answer_text\": \"Arya Stark\"\n    //     }\n    // ]\n    //    how is shoiwng on console\n    //    answers:\n    //    2: \"24\"\n    //    3: \"Yes\"\n    value: function handleSubmit() {\n      message.success(\"Submitting your assignment!\");\n      var usersAnswers = this.state.usersAnswers;\n      var asnt = {\n        username: this.props.username,\n        asntId: this.props.currentAssignment.id,\n        response_set: usersAnswers\n      };\n      console.log(asnt); //this.props.createGradedASNT(asnt);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var currentAssignment = this.props.currentAssignment;\n      var title = currentAssignment.title;\n      var usersAnswers = this.state.usersAnswers;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, Object.keys(currentAssignment).length > 0 ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, this.props.loading ? React.createElement(Skeleton, {\n        active: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }) : React.createElement(Card, {\n        title: title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, React.createElement(Questions, {\n        submit: function submit() {\n          return _this2.handleSubmit();\n        },\n        questions: currentAssignment.question_set.map(function (q) {\n          return React.createElement(Card, {\n            style: cardStyle,\n            type: \"inner\",\n            key: q.id,\n            title: \"\".concat(q.question_text),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 69\n            },\n            __self: this\n          }, React.createElement(Choices, {\n            questionId: q.id,\n            choices: q.choice_set,\n            change: _this2.onChange,\n            usersAnswers: usersAnswers,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 75\n            },\n            __self: this\n          }));\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }))) : null);\n    }\n  }]);\n\n  return AssignmentDetail;\n}(React.PureComponent);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    currentAssignment: state.assignments.currentAssignment,\n    loading: state.assignments.loading // username: state.auth.user,\n\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    ongetAssignmentDetail: function ongetAssignmentDetail(id) {\n      return dispatch(actions.getAssignmentDetail(id));\n    },\n    oncreateGradedAssignement: function oncreateGradedAssignement(asnt) {\n      return dispatch(actions.createGradedAssignment(asnt));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AssignmentDetail);","map":{"version":3,"sources":["C:/Users/Shahnoor Khalidi/Desktop/OBE_Management_System(GITHUB)/OBE-frontend/test/src/component/Teacher_Framework/Assignment/AssignmentDetail.js"],"names":["Card","Skeleton","message","React","connect","actions","Questions","Choices","cardStyle","marginTop","marginBottom","AssignmentDetail","state","usersAnswers","onChange","e","qId","target","value","setState","props","ongetAssignmentDetail","match","params","id","success","asnt","username","asntId","currentAssignment","response_set","console","log","title","Object","keys","length","loading","handleSubmit","question_set","map","q","question_text","choice_set","PureComponent","mapStateToProps","assignments","mapDispatchToProps","dispatch","getAssignmentDetail","oncreateGradedAssignement","createGradedAssignment"],"mappings":"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","sourcesContent":["import { Card, Skeleton, message } from \"antd\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../actions/teacher_framework_actions/assignment\";\r\nimport Questions from \"./Questions\";\r\nimport Choices from \"./Choices\";\r\n\r\nconst cardStyle = {\r\n  marginTop: \"20px\",\r\n  marginBottom: \"20px\",\r\n};\r\n\r\nclass AssignmentDetail extends React.PureComponent {\r\n  state = {\r\n    usersAnswers: {},\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.ongetAssignmentDetail(this.props.match.params.id);\r\n  }\r\n  onChange = (e, qId) => {\r\n    const { usersAnswers } = this.state;\r\n    usersAnswers[qId] = e.target.value;\r\n    this.setState({ usersAnswers });\r\n  };\r\n\r\n  //    how to post\r\n  //    \"response_set\": [\r\n  //     {   \"question\":1,\r\n  //         \"answer_text\": \"Jon Snow\"\r\n  //     },\r\n  //     {    \"question\":2,\r\n  //         \"answer_text\": \"Arya Stark\"\r\n  //     }\r\n  // ]\r\n  //    how is shoiwng on console\r\n  //    answers:\r\n  //    2: \"24\"\r\n  //    3: \"Yes\"\r\n\r\n  handleSubmit() {\r\n    message.success(\"Submitting your assignment!\");\r\n    const { usersAnswers } = this.state;\r\n    const asnt = {\r\n      username: this.props.username,\r\n      asntId: this.props.currentAssignment.id,\r\n      response_set: usersAnswers,\r\n    };\r\n    console.log(asnt);\r\n    //this.props.createGradedASNT(asnt);\r\n  }\r\n\r\n  render() {\r\n    const { currentAssignment } = this.props;\r\n    const { title } = currentAssignment;\r\n    const { usersAnswers } = this.state;\r\n    return (\r\n      <div>\r\n        {Object.keys(currentAssignment).length > 0 ? (\r\n          <div>\r\n            {this.props.loading ? (\r\n              <Skeleton active />\r\n            ) : (\r\n              <Card title={title}>\r\n                <Questions\r\n                  submit={() => this.handleSubmit()}\r\n                  questions={currentAssignment.question_set.map((q) => {\r\n                    return (\r\n                      <Card\r\n                        style={cardStyle}\r\n                        type=\"inner\"\r\n                        key={q.id}\r\n                        title={`${q.question_text}`}\r\n                      >\r\n                        <Choices\r\n                          questionId={q.id}\r\n                          choices={q.choice_set}\r\n                          change={this.onChange}\r\n                          usersAnswers={usersAnswers}\r\n                        />\r\n                      </Card>\r\n                    );\r\n                  })}\r\n                />\r\n              </Card>\r\n            )}\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currentAssignment: state.assignments.currentAssignment,\r\n    loading: state.assignments.loading,\r\n    // username: state.auth.user,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    ongetAssignmentDetail: (id) => dispatch(actions.getAssignmentDetail(id)),\r\n    oncreateGradedAssignement: (asnt) =>\r\n      dispatch(actions.createGradedAssignment(asnt)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AssignmentDetail);\r\n"]},"metadata":{},"sourceType":"module"}
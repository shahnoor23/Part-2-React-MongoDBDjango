{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _DraftOffsetKey = require('draft-js/lib/DraftOffsetKey');\n\nvar _rcAnimate = require('rc-animate');\n\nvar _rcAnimate2 = _interopRequireDefault(_rcAnimate);\n\nvar _classnames = require('classnames');\n\nvar _classnames2 = _interopRequireDefault(_classnames);\n\nvar _domScrollIntoView = require('dom-scroll-into-view');\n\nvar _domScrollIntoView2 = _interopRequireDefault(_domScrollIntoView);\n\nvar _Nav = require('./Nav.react');\n\nvar _Nav2 = _interopRequireDefault(_Nav);\n\nvar _SuggestionWrapper = require('./SuggestionWrapper.react');\n\nvar _SuggestionWrapper2 = _interopRequireDefault(_SuggestionWrapper);\n\nvar _insertMention = require('../utils/insertMention');\n\nvar _insertMention2 = _interopRequireDefault(_insertMention);\n\nvar _clearMention = require('../utils/clearMention');\n\nvar _clearMention2 = _interopRequireDefault(_clearMention);\n\nvar _getOffset = require('../utils/getOffset');\n\nvar _getOffset2 = _interopRequireDefault(_getOffset);\n\nvar _getMentions = require('../utils/getMentions');\n\nvar _getMentions2 = _interopRequireDefault(_getMentions);\n\nvar _getSearchWord2 = require('../utils/getSearchWord');\n\nvar _getSearchWord3 = _interopRequireDefault(_getSearchWord2);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _defaults(obj, defaults) {\n  var keys = Object.getOwnPropertyNames(defaults);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = Object.getOwnPropertyDescriptor(defaults, key);\n\n    if (value && value.configurable && obj[key] === undefined) {\n      Object.defineProperty(obj, key, value);\n    }\n  }\n\n  return obj;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass);\n}\n\nvar isNotFalse = function isNotFalse(i) {\n  return i !== false;\n};\n\nvar Suggestions = function (_React$Component) {\n  _inherits(Suggestions, _React$Component);\n\n  function Suggestions() {\n    _classCallCheck(this, Suggestions);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this));\n\n    _this.onEditorStateChange = function (editorState) {\n      var offset = _this.props.store.getOffset();\n\n      if (offset.size === 0) {\n        return editorState;\n      }\n\n      var selection = editorState.getSelection(); // 修复: 焦点移出再移入时, dropdown 会闪动一下\n      // 原因: https://github.com/facebook/draft-js/blob/67c5e69499e3b0c149ce83b004872afdf4180463/src/component/handlers/edit/editOnFocus.js#L33\n      // 此处强制 update 了一下,因此 onEditorStateChange 会 call 两次\n\n      if (!_this.props.callbacks.getEditorState().getSelection().getHasFocus() && selection.getHasFocus()) {\n        return editorState;\n      }\n\n      var _getSearchWord = (0, _getSearchWord3[\"default\"])(editorState, selection),\n          word = _getSearchWord.word;\n\n      if (!word) {\n        _this.closeDropDown();\n\n        return editorState;\n      }\n\n      var selectionInsideMention = offset.map(function (_ref) {\n        var offsetKey = _ref.offsetKey;\n\n        var _decode = (0, _DraftOffsetKey.decode)(offsetKey),\n            blockKey = _decode.blockKey,\n            decoratorKey = _decode.decoratorKey,\n            leafKey = _decode.leafKey;\n\n        if (blockKey !== selection.anchorKey) {\n          return false;\n        }\n\n        var leaf = editorState.getBlockTree(blockKey).getIn([decoratorKey, 'leaves', leafKey]);\n\n        if (!leaf) {\n          return false;\n        }\n\n        var startKey = leaf.get('start');\n        var endKey = leaf.get('end'); // 处理只有一个 `@` 符号时的情况\n\n        if (!word) {\n          return false;\n        }\n\n        if (startKey === endKey - 1) {\n          return selection.anchorOffset >= startKey + 1 && selection.anchorOffset <= endKey ? offsetKey : false;\n        }\n\n        return selection.anchorOffset > startKey + 1 && selection.anchorOffset <= endKey ? offsetKey : false;\n      });\n      var selectionInText = selectionInsideMention.some(isNotFalse);\n      _this.activeOffsetKey = selectionInsideMention.find(isNotFalse);\n\n      var trigger = _this.props.store.getTrigger(_this.activeOffsetKey);\n\n      if (!selectionInText || !selection.getHasFocus()) {\n        _this.closeDropDown();\n\n        return editorState;\n      }\n\n      var searchValue = word.substring(trigger.length, word.length);\n\n      if (_this.lastSearchValue !== searchValue || _this.lastTrigger !== trigger) {\n        _this.lastSearchValue = searchValue;\n        _this.lastTrigger = trigger;\n\n        _this.props.onSearchChange(searchValue, trigger);\n      }\n\n      if (!_this.state.active) {\n        _this.openDropDown();\n      }\n\n      return editorState;\n    };\n\n    _this.onUpArrow = function (ev) {\n      ev.preventDefault();\n\n      if (_this.props.suggestions.length > 0) {\n        var newIndex = _this.state.focusedIndex - 1;\n\n        _this.setState({\n          focusedIndex: Math.max(newIndex, 0)\n        });\n      }\n    };\n\n    _this.onBlur = function (ev) {\n      ev.preventDefault();\n\n      _this.closeDropDown();\n    };\n\n    _this.onDownArrow = function (ev) {\n      ev.preventDefault();\n      var newIndex = _this.state.focusedIndex + 1;\n\n      _this.setState({\n        focusedIndex: newIndex >= _this.props.suggestions.length ? 0 : newIndex\n      });\n    };\n\n    _this.getContainer = function () {\n      var popupContainer = document.createElement('div');\n      var mountNode = void 0;\n\n      if (_this.props.getSuggestionContainer) {\n        mountNode = _this.props.getSuggestionContainer();\n        popupContainer.style.position = 'relative';\n      } else {\n        mountNode = document.body;\n      }\n\n      mountNode.appendChild(popupContainer);\n      return popupContainer;\n    };\n\n    _this.handleKeyBinding = function (command) {\n      return command === 'split-block';\n    };\n\n    _this.handleReturn = function (ev) {\n      ev.preventDefault();\n      var selectedSuggestion = _this.props.suggestions[_this.state.focusedIndex];\n\n      if (selectedSuggestion) {\n        if (_react2[\"default\"].isValidElement(selectedSuggestion)) {\n          _this.onMentionSelect(selectedSuggestion.props.value, selectedSuggestion.props.data);\n        } else {\n          _this.onMentionSelect(selectedSuggestion);\n        }\n\n        _this.lastSearchValue = null;\n        _this.lastTrigger = null;\n        return true;\n      }\n\n      return false;\n    };\n\n    _this.renderReady = function () {\n      var container = _this.dropdownContainer;\n\n      if (!container) {\n        return;\n      }\n\n      var active = _this.state.active;\n      var activeOffsetKey = _this.activeOffsetKey;\n\n      var offset = _this.props.store.getOffset();\n\n      var dropDownPosition = offset.get(activeOffsetKey);\n\n      if (active && dropDownPosition) {\n        var dropDownStyle = _this.getPositionStyle(true, dropDownPosition.position());\n\n        Object.keys(dropDownStyle).forEach(function (key) {\n          container.style[key] = dropDownStyle[key];\n        });\n      }\n\n      if (!_this.focusItem) {\n        return;\n      }\n\n      (0, _domScrollIntoView2[\"default\"])(_this.focusItem, container, {\n        onlyScrollIfNeeded: true\n      });\n    };\n\n    _this.getNavigations = function () {\n      var _this$props = _this.props,\n          prefixCls = _this$props.prefixCls,\n          suggestions = _this$props.suggestions;\n      var focusedIndex = _this.state.focusedIndex;\n      return suggestions.length ? _react2[\"default\"].Children.map(suggestions, function (element, index) {\n        var focusItem = index === focusedIndex;\n        var ref = focusItem ? function (node) {\n          _this.focusItem = node;\n        } : null;\n        var mentionClass = (0, _classnames2[\"default\"])(prefixCls + '-dropdown-item', {\n          focus: focusItem\n        });\n\n        if (_react2[\"default\"].isValidElement(element)) {\n          return _react2[\"default\"].cloneElement(element, {\n            className: mentionClass,\n            onMouseDown: function onMouseDown() {\n              return _this.onMentionSelect(element.props.value, element.props.data);\n            },\n            ref: ref\n          });\n        }\n\n        return _react2[\"default\"].createElement(_Nav2[\"default\"], {\n          ref: ref,\n          className: mentionClass,\n          onMouseDown: function onMouseDown() {\n            return _this.onMentionSelect(element);\n          }\n        }, element);\n      }, _this) : _react2[\"default\"].createElement('div', {\n        className: prefixCls + '-dropdown-notfound ' + prefixCls + '-dropdown-item'\n      }, _this.props.notFoundContent);\n    };\n\n    _this.state = {\n      isActive: false,\n      focusedIndex: 0,\n      container: false\n    };\n    return _this;\n  }\n\n  Suggestions.prototype.componentDidMount = function componentDidMount() {\n    this.props.callbacks.onChange = this.onEditorStateChange;\n  };\n\n  Suggestions.prototype.componentWillReceiveProps = function componentWillReceiveProps(nextProps) {\n    if (nextProps.suggestions.length !== this.props.suggestions.length) {\n      this.setState({\n        focusedIndex: 0\n      });\n    }\n  };\n\n  Suggestions.prototype.onMentionSelect = function onMentionSelect(mention, data) {\n    var editorState = this.props.callbacks.getEditorState();\n    var _props = this.props,\n        store = _props.store,\n        onSelect = _props.onSelect;\n    var trigger = store.getTrigger(this.activeOffsetKey);\n\n    if (onSelect) {\n      onSelect(mention, data || mention);\n    }\n\n    if (this.props.noRedup) {\n      var mentions = (0, _getMentions2[\"default\"])(editorState, trigger);\n\n      if (mentions.indexOf('' + trigger + mention) !== -1) {\n        // eslint-disable-next-line\n        console.warn('you have specified `noRedup` props but have duplicated mentions.');\n        this.closeDropDown();\n        this.props.callbacks.setEditorState((0, _clearMention2[\"default\"])(editorState));\n        return;\n      }\n    }\n\n    this.props.callbacks.setEditorState((0, _insertMention2[\"default\"])(editorState, '' + trigger + mention, data, this.props.mode), true);\n    this.closeDropDown();\n  };\n\n  Suggestions.prototype.getPositionStyle = function getPositionStyle(isActive, position) {\n    if (this.props.getSuggestionStyle) {\n      return this.props.getSuggestionStyle(isActive, position);\n    }\n\n    var container = this.props.getSuggestionContainer ? this.state.container : document.body;\n    var offset = (0, _getOffset2[\"default\"])(container);\n    return position ? _extends({\n      position: 'absolute',\n      left: position.left - offset.left + 'px',\n      top: position.top - offset.top + 'px'\n    }, this.props.style) : {};\n  };\n\n  Suggestions.prototype.openDropDown = function openDropDown() {\n    this.props.callbacks.onUpArrow = this.onUpArrow;\n    this.props.callbacks.handleReturn = this.handleReturn;\n    this.props.callbacks.handleKeyBinding = this.handleKeyBinding;\n    this.props.callbacks.onDownArrow = this.onDownArrow;\n    this.props.callbacks.onBlur = this.onBlur;\n    this.setState({\n      active: true,\n      container: this.state.container || this.getContainer()\n    });\n  };\n\n  Suggestions.prototype.closeDropDown = function closeDropDown() {\n    this.props.callbacks.onUpArrow = null;\n    this.props.callbacks.handleReturn = null;\n    this.props.callbacks.handleKeyBinding = null;\n    this.props.callbacks.onDownArrow = null;\n    this.props.callbacks.onBlur = null;\n    this.setState({\n      active: false\n    });\n  };\n\n  Suggestions.prototype.render = function render() {\n    var _this2 = this;\n\n    var _props2 = this.props,\n        prefixCls = _props2.prefixCls,\n        className = _props2.className;\n    var _state = this.state,\n        container = _state.container,\n        active = _state.active;\n    var cls = (0, _classnames2[\"default\"])(_extends(_defineProperty({}, prefixCls + '-dropdown', true), className));\n    var navigations = this.getNavigations();\n    return container ? _react2[\"default\"].createElement(_SuggestionWrapper2[\"default\"], {\n      renderReady: this.renderReady,\n      container: container\n    }, _react2[\"default\"].createElement(_rcAnimate2[\"default\"], {\n      transitionName: 'slide-up'\n    }, active ? _react2[\"default\"].createElement('div', {\n      className: cls,\n      ref: function ref(node) {\n        _this2.dropdownContainer = node;\n      }\n    }, navigations) : null)) : null;\n  };\n\n  return Suggestions;\n}(_react2[\"default\"].Component);\n\nexports[\"default\"] = Suggestions;\nSuggestions.propTypes = {\n  callbacks: _propTypes2[\"default\"].object,\n  suggestions: _propTypes2[\"default\"].array,\n  store: _propTypes2[\"default\"].object,\n  onSearchChange: _propTypes2[\"default\"].func,\n  prefixCls: _propTypes2[\"default\"].string,\n  mode: _propTypes2[\"default\"].string,\n  style: _propTypes2[\"default\"].object,\n  onSelect: _propTypes2[\"default\"].func,\n  getSuggestionContainer: _propTypes2[\"default\"].func,\n  notFoundContent: _propTypes2[\"default\"].any,\n  getSuggestionStyle: _propTypes2[\"default\"].func,\n  className: _propTypes2[\"default\"].string,\n  noRedup: _propTypes2[\"default\"].bool\n};\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}
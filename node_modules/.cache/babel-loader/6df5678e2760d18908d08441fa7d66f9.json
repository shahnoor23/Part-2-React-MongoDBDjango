{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _arrayTreeFilter = require('array-tree-filter');\n\nvar _arrayTreeFilter2 = _interopRequireDefault(_arrayTreeFilter);\n\nvar _reactDom = require('react-dom');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _defaults(obj, defaults) {\n  var keys = Object.getOwnPropertyNames(defaults);\n\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    var value = Object.getOwnPropertyDescriptor(defaults, key);\n\n    if (value && value.configurable && obj[key] === undefined) {\n      Object.defineProperty(obj, key, value);\n    }\n  }\n\n  return obj;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : _defaults(subClass, superClass);\n}\n\nvar Menus = function (_React$Component) {\n  _inherits(Menus, _React$Component);\n\n  function Menus() {\n    _classCallCheck(this, Menus);\n\n    return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n  }\n\n  Menus.prototype.componentDidMount = function componentDidMount() {\n    this.scrollActiveItemToView();\n  };\n\n  Menus.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (!prevProps.visible && this.props.visible) {\n      this.scrollActiveItemToView();\n    }\n  };\n\n  Menus.prototype.getOption = function getOption(option, menuIndex) {\n    var _props = this.props,\n        prefixCls = _props.prefixCls,\n        expandTrigger = _props.expandTrigger;\n    var onSelect = this.props.onSelect.bind(this, option, menuIndex);\n    var expandProps = {\n      onClick: onSelect\n    };\n    var menuItemCls = prefixCls + '-menu-item';\n    var hasChildren = option.children && option.children.length > 0;\n\n    if (hasChildren || option.isLeaf === false) {\n      menuItemCls += ' ' + prefixCls + '-menu-item-expand';\n    }\n\n    if (expandTrigger === 'hover' && hasChildren) {\n      expandProps = {\n        onMouseEnter: this.delayOnSelect.bind(this, onSelect),\n        onMouseLeave: this.delayOnSelect.bind(this),\n        onClick: onSelect\n      };\n    }\n\n    if (this.isActiveOption(option, menuIndex)) {\n      menuItemCls += ' ' + prefixCls + '-menu-item-active';\n      expandProps.ref = 'activeItem' + menuIndex;\n    }\n\n    if (option.disabled) {\n      menuItemCls += ' ' + prefixCls + '-menu-item-disabled';\n    }\n\n    if (option.loading) {\n      menuItemCls += ' ' + prefixCls + '-menu-item-loading';\n    }\n\n    var title = '';\n\n    if (option.title) {\n      title = option.title;\n    } else if (typeof option.label === 'string') {\n      title = option.label;\n    }\n\n    return _react2[\"default\"].createElement('li', _extends({\n      key: option.value,\n      className: menuItemCls,\n      title: title\n    }, expandProps), option.label);\n  };\n\n  Menus.prototype.getActiveOptions = function getActiveOptions(values) {\n    var activeValue = values || this.props.activeValue;\n    var options = this.props.options;\n    return (0, _arrayTreeFilter2[\"default\"])(options, function (o, level) {\n      return o.value === activeValue[level];\n    });\n  };\n\n  Menus.prototype.getShowOptions = function getShowOptions() {\n    var options = this.props.options;\n    var result = this.getActiveOptions().map(function (activeOption) {\n      return activeOption.children;\n    }).filter(function (activeOption) {\n      return !!activeOption;\n    });\n    result.unshift(options);\n    return result;\n  };\n\n  Menus.prototype.delayOnSelect = function delayOnSelect(onSelect) {\n    var _this2 = this;\n\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    if (this.delayTimer) {\n      clearTimeout(this.delayTimer);\n      this.delayTimer = null;\n    }\n\n    if (typeof onSelect === 'function') {\n      this.delayTimer = setTimeout(function () {\n        onSelect(args);\n        _this2.delayTimer = null;\n      }, 150);\n    }\n  };\n\n  Menus.prototype.scrollActiveItemToView = function scrollActiveItemToView() {\n    // scroll into view\n    var optionsLength = this.getShowOptions().length;\n\n    for (var i = 0; i < optionsLength; i++) {\n      var itemComponent = this.refs['activeItem' + i];\n\n      if (itemComponent) {\n        var target = (0, _reactDom.findDOMNode)(itemComponent);\n        target.parentNode.scrollTop = target.offsetTop;\n      }\n    }\n  };\n\n  Menus.prototype.isActiveOption = function isActiveOption(option, menuIndex) {\n    var _props$activeValue = this.props.activeValue,\n        activeValue = _props$activeValue === undefined ? [] : _props$activeValue;\n    return activeValue[menuIndex] === option.value;\n  };\n\n  Menus.prototype.render = function render() {\n    var _this3 = this;\n\n    var _props2 = this.props,\n        prefixCls = _props2.prefixCls,\n        dropdownMenuColumnStyle = _props2.dropdownMenuColumnStyle;\n    return _react2[\"default\"].createElement('div', null, this.getShowOptions().map(function (options, menuIndex) {\n      return _react2[\"default\"].createElement('ul', {\n        className: prefixCls + '-menu',\n        key: menuIndex,\n        style: dropdownMenuColumnStyle\n      }, options.map(function (option) {\n        return _this3.getOption(option, menuIndex);\n      }));\n    }));\n  };\n\n  return Menus;\n}(_react2[\"default\"].Component);\n\nMenus.defaultProps = {\n  options: [],\n  value: [],\n  activeValue: [],\n  onSelect: function onSelect() {},\n  prefixCls: 'rc-cascader-menus',\n  visible: false,\n  expandTrigger: 'click'\n};\nMenus.propTypes = {\n  value: _propTypes2[\"default\"].array,\n  activeValue: _propTypes2[\"default\"].array,\n  options: _propTypes2[\"default\"].array.isRequired,\n  prefixCls: _propTypes2[\"default\"].string,\n  expandTrigger: _propTypes2[\"default\"].string,\n  onSelect: _propTypes2[\"default\"].func,\n  visible: _propTypes2[\"default\"].bool,\n  dropdownMenuColumnStyle: _propTypes2[\"default\"].object\n};\nexports[\"default\"] = Menus;\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}
{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\src\\\\component\\\\Chairman_Framework\\\\clo\\\\POSTCLO.js\";\nimport React, { Component } from \"react\";\nimport Select from \"react-select\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { addClos } from \"../../../actions/clos\";\nimport { getPlos } from \"../../../actions/plos\";\nimport { getCongitive } from \"../../../actions/chairman_framework_actions/cognitive\";\nimport { getAffective } from \"../../../actions/chairman_framework_actions/affectives\";\nexport var POSTCLO =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(POSTCLO, _Component);\n\n  function POSTCLO() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, POSTCLO);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(POSTCLO)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      code: \"\",\n      description: \"\",\n      plos: null,\n      cognitives: null,\n      affectives: null,\n      selectedcognitiveid: null\n    };\n\n    _this.onChangeplos = function (selected) {\n      console.log(selected);\n\n      _this.setState({\n        plos: selected\n      });\n    };\n\n    _this.onChangecognitives = function (selected) {\n      console.log(selected);\n\n      if (selected !== null) {\n        _this.setState({\n          cognitives: selected,\n          selectedcognitiveid: selected[0].value\n        });\n      } else {\n        _this.setState({\n          cognitives: null,\n          selectedcognitiveid: null\n        });\n      }\n    };\n\n    _this.onChangeaffectives = function (selected) {\n      console.log(selected);\n\n      _this.setState({\n        affectives: selected\n      });\n    };\n\n    _this.onChange = function (e) {\n      return _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.onSubmit = function (e) {\n      e.preventDefault();\n      var _this$state = _this.state,\n          code = _this$state.code,\n          description = _this$state.description,\n          plos = _this$state.plos,\n          cognitives = _this$state.cognitives,\n          affectives = _this$state.affectives;\n      var clo = {\n        code: code,\n        description: description,\n        plos: plos,\n        cognitives: cognitives,\n        affectives: affectives\n      };\n      clo.plos = [];\n      clo.cognitives = [];\n      clo.affectives = [];\n\n      for (var i in plos) {\n        clo.plos.push(plos[i].value);\n      }\n\n      for (var _i in cognitives) {\n        clo.cognitives.push(cognitives[_i].value);\n      }\n\n      for (var _i2 in affectives) {\n        clo.affectives.push(affectives[_i2].value);\n      }\n\n      console.log(clo);\n\n      _this.props.addClos(clo);\n    };\n\n    _this.verbsoptions = function () {\n      if (_this.state.selectedcognitiveid === null) {\n        return null;\n      }\n\n      var options = [];\n\n      for (var i in _this.props.cognitives) {\n        if (_this.state.selectedcognitiveid === _this.props.cognitives[i]) {\n          for (var j in _this.props.cognitives[i].verbs) {\n            options.push({\n              value: _this.props.cognitives[i].id,\n              label: _this.props.cognitives[i].code\n            });\n          }\n        }\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(POSTCLO, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getPlos();\n      this.props.getCongitive();\n      this.props.getAffective();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.state.selectedcognitiveid);\n      console.log(this.state.cognitives);\n      console.log(this.props.cognitives);\n      var _this$state2 = this.state,\n          code = _this$state2.code,\n          description = _this$state2.description,\n          plos = _this$state2.plos,\n          cognitives = _this$state2.cognitives,\n          affectives = _this$state2.affectives;\n      var optionplos = [];\n      var optioncognitives = [];\n      var optionaffectives = [];\n      console.log(this.props.plos.length);\n\n      if (this.props.plos.length > 0) {\n        for (var i in this.props.plos) {\n          optionplos.push({\n            value: this.props.plos[i].id,\n            label: this.props.plos[i].code\n          });\n        }\n      }\n\n      if (this.props.cognitives.length > 0) {\n        for (var _i3 in this.props.cognitives) {\n          optioncognitives.push({\n            value: this.props.cognitives[_i3].id,\n            label: this.props.cognitives[_i3].code\n          });\n        }\n      }\n\n      if (this.props.affectives.length > 0) {\n        for (var _i4 in this.props.affectives) {\n          optionaffectives.push({\n            value: this.props.affectives[_i4].id,\n            label: this.props.affectives[_i4].code\n          });\n        }\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Add CLO\"), React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"code\"), React.createElement(\"input\", {\n        className: \"form-control\",\n        type: \"text\",\n        name: \"code\",\n        onChange: this.onChange,\n        value: code,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, \"Description\"), React.createElement(\"input\", {\n        className: \"form-control\",\n        type: \"text\",\n        name: \"description\",\n        onChange: this.onChange,\n        value: description,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }, \"Select PLO\"), React.createElement(Select, {\n        value: plos,\n        onChange: this.onChangeplos,\n        options: optionplos,\n        isMulti: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 164\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, \"Select Cognitive Domain\"), React.createElement(Select, {\n        value: cognitives,\n        onChange: this.onChangecognitives,\n        options: optioncognitives,\n        isMulti: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, \"Select Verb\"), React.createElement(Select, {\n        value: plos,\n        onChange: this.onChangeplos,\n        options: optionplos,\n        isMulti: true,\n        isDisabled: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185\n        },\n        __self: this\n      }, \"Select Affective Domain\"), React.createElement(Select, {\n        value: affectives,\n        onChange: this.onChangeaffectives,\n        options: optionaffectives,\n        isMulti: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      }, \"Submit\"))));\n    }\n  }]);\n\n  return POSTCLO;\n}(Component);\nPOSTCLO.propTypes = {\n  plos: PropTypes.func.isRequired,\n  getPlos: PropTypes.func.isRequired,\n  getCongitive: PropTypes.func.isRequired,\n  getAffective: PropTypes.func.isRequired,\n  addClo: PropTypes.func.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    plos: state.plos.plos,\n    cognitives: state.cognitives.cognitives,\n    affectives: state.affectives.affectives\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addClos: addClos,\n  getPlos: getPlos,\n  getCongitive: getCongitive,\n  getAffective: getAffective\n})(POSTCLO);","map":{"version":3,"sources":["C:/Users/Shahnoor Khalidi/Desktop/test/test/src/component/Chairman_Framework/clo/POSTCLO.js"],"names":["React","Component","Select","connect","PropTypes","addClos","getPlos","getCongitive","getAffective","POSTCLO","state","code","description","plos","cognitives","affectives","selectedcognitiveid","onChangeplos","selected","console","log","setState","onChangecognitives","value","onChangeaffectives","onChange","e","target","name","onSubmit","preventDefault","clo","i","push","props","verbsoptions","options","j","verbs","id","label","optionplos","optioncognitives","optionaffectives","length","propTypes","func","isRequired","addClo","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { addClos } from \"../../../actions/clos\";\r\nimport { getPlos } from \"../../../actions/plos\";\r\nimport { getCongitive } from \"../../../actions/chairman_framework_actions/cognitive\";\r\nimport { getAffective } from \"../../../actions/chairman_framework_actions/affectives\";\r\n\r\nexport class POSTCLO extends Component {\r\n  state = {\r\n    code: \"\",\r\n    description: \"\",\r\n    plos: null,\r\n    cognitives: null,\r\n    affectives: null,\r\n    selectedcognitiveid: null\r\n  };\r\n  static propTypes = {\r\n    plos: PropTypes.func.isRequired,\r\n    getPlos: PropTypes.func.isRequired,\r\n    getCongitive: PropTypes.func.isRequired,\r\n    getAffective: PropTypes.func.isRequired,\r\n    addClo: PropTypes.func.isRequired\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.getPlos();\r\n    this.props.getCongitive();\r\n    this.props.getAffective();\r\n  }\r\n  onChangeplos = selected => {\r\n    console.log(selected);\r\n    this.setState({\r\n      plos: selected\r\n    });\r\n  };\r\n  onChangecognitives = selected => {\r\n    console.log(selected);\r\n    if (selected !== null) {\r\n      this.setState({\r\n        cognitives: selected,\r\n        selectedcognitiveid: selected[0].value\r\n      });\r\n    } else {\r\n      this.setState({\r\n        cognitives: null,\r\n        selectedcognitiveid: null\r\n      });\r\n    }\r\n  };\r\n\r\n  onChangeaffectives = selected => {\r\n    console.log(selected);\r\n    this.setState({\r\n      affectives: selected\r\n    });\r\n  };\r\n  onChange = e =>\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const { code, description, plos, cognitives, affectives } = this.state;\r\n    const clo = {\r\n      code,\r\n      description,\r\n      plos,\r\n      cognitives,\r\n      affectives\r\n    };\r\n    clo.plos = [];\r\n    clo.cognitives = [];\r\n    clo.affectives = [];\r\n    for (let i in plos) {\r\n      clo.plos.push(plos[i].value);\r\n    }\r\n    for (let i in cognitives) {\r\n      clo.cognitives.push(cognitives[i].value);\r\n    }\r\n    for (let i in affectives) {\r\n      clo.affectives.push(affectives[i].value);\r\n    }\r\n    console.log(clo);\r\n    this.props.addClos(clo);\r\n  };\r\n\r\n  verbsoptions = () => {\r\n    if (this.state.selectedcognitiveid === null) {\r\n      return null;\r\n    }\r\n    let options = [];\r\n    for (let i in this.props.cognitives) {\r\n      if (this.state.selectedcognitiveid === this.props.cognitives[i]) {\r\n        for (let j in this.props.cognitives[i].verbs) {\r\n          options.push({\r\n            value: this.props.cognitives[i].id,\r\n            label: this.props.cognitives[i].code\r\n          });\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    console.log(this.state.selectedcognitiveid);\r\n    console.log(this.state.cognitives);\r\n    console.log(this.props.cognitives);\r\n    const { code, description, plos, cognitives, affectives } = this.state;\r\n    let optionplos = [];\r\n    let optioncognitives = [];\r\n    let optionaffectives = [];\r\n    console.log(this.props.plos.length);\r\n\r\n    if (this.props.plos.length > 0) {\r\n      for (let i in this.props.plos) {\r\n        optionplos.push({\r\n          value: this.props.plos[i].id,\r\n          label: this.props.plos[i].code\r\n        });\r\n      }\r\n    }\r\n    if (this.props.cognitives.length > 0) {\r\n      for (let i in this.props.cognitives) {\r\n        optioncognitives.push({\r\n          value: this.props.cognitives[i].id,\r\n          label: this.props.cognitives[i].code\r\n        });\r\n      }\r\n    }\r\n    if (this.props.affectives.length > 0) {\r\n      for (let i in this.props.affectives) {\r\n        optionaffectives.push({\r\n          value: this.props.affectives[i].id,\r\n          label: this.props.affectives[i].code\r\n        });\r\n      }\r\n    }\r\n    return (\r\n      <div>\r\n        <h1>Add CLO</h1>\r\n        <form onSubmit={this.onSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>code</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"code\"\r\n              onChange={this.onChange}\r\n              value={code}\r\n            ></input>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Description</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"description\"\r\n              onChange={this.onChange}\r\n              value={description}\r\n            ></input>\r\n            <label>Select PLO</label>\r\n            <Select\r\n              value={plos}\r\n              onChange={this.onChangeplos}\r\n              options={optionplos}\r\n              isMulti\r\n            />\r\n            <label>Select Cognitive Domain</label>\r\n            <Select\r\n              value={cognitives}\r\n              onChange={this.onChangecognitives}\r\n              options={optioncognitives}\r\n              isMulti\r\n            />\r\n            <label>Select Verb</label>\r\n            <Select\r\n              value={plos}\r\n              onChange={this.onChangeplos}\r\n              options={optionplos}\r\n              isMulti\r\n              isDisabled={true}\r\n            />\r\n            <label>Select Affective Domain</label>\r\n            <Select\r\n              value={affectives}\r\n              onChange={this.onChangeaffectives}\r\n              options={optionaffectives}\r\n              isMulti\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  plos: state.plos.plos,\r\n  cognitives: state.cognitives.cognitives,\r\n  affectives: state.affectives.affectives\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  addClos,\r\n  getPlos,\r\n  getCongitive,\r\n  getAffective\r\n})(POSTCLO);\r\n"]},"metadata":{},"sourceType":"module"}
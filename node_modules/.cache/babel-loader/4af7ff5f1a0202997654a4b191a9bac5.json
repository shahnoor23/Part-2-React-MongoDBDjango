{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\OBE_Management_System(GITHUB)\\\\OBE-frontend\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\OBE_Management_System(GITHUB)\\\\OBE-frontend\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\OBE_Management_System(GITHUB)\\\\OBE-frontend\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\OBE_Management_System(GITHUB)\\\\OBE-frontend\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\OBE_Management_System(GITHUB)\\\\OBE-frontend\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\OBE_Management_System(GITHUB)\\\\OBE-frontend\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\OBE_Management_System(GITHUB)\\\\OBE-frontend\\\\test\\\\src\\\\component\\\\Teacher_Framework\\\\create_quizzes\\\\POST.js\";\nimport React, { Component } from \"react\";\nimport Select from \"react-select\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { addAssignment } from \"../../../actions/teacher_framework_actions/create_quizz\";\nimport { getAssigned } from \"../../../actions/teacher_framework_actions/viewassignedsubjects\";\nexport var POSTCLO =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(POSTCLO, _Component);\n\n  function POSTCLO() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, POSTCLO);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(POSTCLO)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      subject_name: null\n    };\n\n    _this.onChangeplos = function (selected) {\n      console.log(selected);\n\n      _this.setState({\n        plos: selected\n      });\n    };\n\n    _this.onChangecognitives = function (selected) {\n      // console.log(selected);\n      if (selected.value === null) {\n        _this.setState({\n          cognitives: null\n        });\n      } else {\n        _this.setState({\n          cognitives: selected\n        });\n      }\n    };\n\n    _this.onChangeverbs = function (selected) {\n      //console.log(selected);\n      _this.setState({\n        verbs: selected\n      });\n    };\n\n    _this.onChangeaffectives = function (selected) {\n      if (selected.value === null) {\n        _this.setState({\n          affectives: null\n        });\n      } else {\n        _this.setState({\n          affectives: selected\n        });\n      }\n    };\n\n    _this.onChangepsychomotors = function (selected) {\n      if (selected.value === null) {\n        _this.setState({\n          psychomotors: null\n        });\n      } else {\n        _this.setState({\n          psychomotors: selected\n        });\n      }\n    };\n\n    _this.onChange = function (e) {\n      return _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.onSubmit = function (e) {\n      e.preventDefault();\n      var subject_name = _this.state.subject_name;\n      var quizz = {\n        subject_name: subject_name\n      };\n      quizz.plos = [];\n\n      for (var i in plos) {\n        quizz.plos.push(plos[i].value);\n      }\n\n      console.log(quizz); //this.props.addClos(clo);\n    };\n\n    return _this;\n  }\n\n  _createClass(POSTCLO, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getAssigned();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      //console.log(this.verbsoptions());\n      // console.log(this.state.cognitives);\n      // console.log(this.props.cognitives);\n      var subject_name = this.state.subject_name;\n      var optionsubjects = [];\n\n      if (this.props.plos.length > 0) {\n        for (var i in this.props.plos) {\n          optionsubjects.push({\n            value: this.props.plos[i].id,\n            label: this.props.plos[i].tittle\n          });\n        }\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 106\n        },\n        __self: this\n      }, \"CREATE QUIZZ\"), React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, \"Select SUBJECT\"), React.createElement(Select, {\n        value: subject_name,\n        onChange: this.onChangeplos,\n        options: optionsubjects,\n        isMulti: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, \"Submit\"))));\n    }\n  }]);\n\n  return POSTCLO;\n}(Component);\nPOSTCLO.propTypes = {\n  plos: PropTypes.func.isRequired,\n  getAssigned: PropTypes.func.isRequired,\n  addAssignment: PropTypes.func.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    assignedsubjects: state.assignedsubjects.assignedsubjects\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addAssignment: addAssignment,\n  getAssigned: getAssigned\n})(POST);","map":{"version":3,"sources":["C:/Users/Shahnoor Khalidi/Desktop/OBE_Management_System(GITHUB)/OBE-frontend/test/src/component/Teacher_Framework/create_quizzes/POST.js"],"names":["React","Component","Select","connect","PropTypes","addAssignment","getAssigned","POSTCLO","state","subject_name","onChangeplos","selected","console","log","setState","plos","onChangecognitives","value","cognitives","onChangeverbs","verbs","onChangeaffectives","affectives","onChangepsychomotors","psychomotors","onChange","e","target","name","onSubmit","preventDefault","quizz","i","push","props","optionsubjects","length","id","label","tittle","propTypes","func","isRequired","mapStateToProps","assignedsubjects","POST"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { addAssignment } from \"../../../actions/teacher_framework_actions/create_quizz\";\r\nimport { getAssigned } from \"../../../actions/teacher_framework_actions/viewassignedsubjects\";\r\n\r\nexport class POSTCLO extends Component {\r\n  state = {\r\n    subject_name: null,\r\n  };\r\n  static propTypes = {\r\n    plos: PropTypes.func.isRequired,\r\n    getAssigned: PropTypes.func.isRequired,\r\n    addAssignment: PropTypes.func.isRequired,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.getAssigned();\r\n  }\r\n  onChangeplos = (selected) => {\r\n    console.log(selected);\r\n    this.setState({\r\n      plos: selected,\r\n    });\r\n  };\r\n  onChangecognitives = (selected) => {\r\n    // console.log(selected);\r\n    if (selected.value === null) {\r\n      this.setState({\r\n        cognitives: null,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        cognitives: selected,\r\n      });\r\n    }\r\n  };\r\n\r\n  onChangeverbs = (selected) => {\r\n    //console.log(selected);\r\n    this.setState({\r\n      verbs: selected,\r\n    });\r\n  };\r\n\r\n  onChangeaffectives = (selected) => {\r\n    if (selected.value === null) {\r\n      this.setState({\r\n        affectives: null,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        affectives: selected,\r\n      });\r\n    }\r\n  };\r\n\r\n  onChangepsychomotors = (selected) => {\r\n    if (selected.value === null) {\r\n      this.setState({\r\n        psychomotors: null,\r\n      });\r\n    } else {\r\n      this.setState({\r\n        psychomotors: selected,\r\n      });\r\n    }\r\n  };\r\n  onChange = (e) =>\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { subject_name } = this.state;\r\n    const quizz = {\r\n      subject_name,\r\n    };\r\n    quizz.plos = [];\r\n    for (let i in plos) {\r\n      quizz.plos.push(plos[i].value);\r\n    }\r\n\r\n    console.log(quizz);\r\n    //this.props.addClos(clo);\r\n  };\r\n\r\n  render() {\r\n    //console.log(this.verbsoptions());\r\n    // console.log(this.state.cognitives);\r\n    // console.log(this.props.cognitives);\r\n    const { subject_name } = this.state;\r\n    let optionsubjects = [];\r\n    if (this.props.plos.length > 0) {\r\n      for (let i in this.props.plos) {\r\n        optionsubjects.push({\r\n          value: this.props.plos[i].id,\r\n          label: this.props.plos[i].tittle,\r\n        });\r\n      }\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <h1>CREATE QUIZZ</h1>\r\n        <form onSubmit={this.onSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>Select SUBJECT</label>\r\n            <Select\r\n              value={subject_name}\r\n              onChange={this.onChangeplos}\r\n              options={optionsubjects}\r\n              isMulti\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  assignedsubjects: state.assignedsubjects.assignedsubjects,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  addAssignment,\r\n  getAssigned,\r\n})(POST);\r\n"]},"metadata":{},"sourceType":"module"}
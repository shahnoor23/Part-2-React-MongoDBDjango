{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport Input from './Input';\nimport Icon from '../icon';\n\nvar Search = function (_React$Component) {\n  _inherits(Search, _React$Component);\n\n  function Search() {\n    _classCallCheck(this, Search);\n\n    var _this = _possibleConstructorReturn(this, (Search.__proto__ || Object.getPrototypeOf(Search)).apply(this, arguments));\n\n    _this.onSearch = function () {\n      var onSearch = _this.props.onSearch;\n\n      if (onSearch) {\n        onSearch(_this.input.refs.input.value);\n      }\n\n      _this.input.focus();\n    };\n\n    return _this;\n  }\n\n  _createClass(Search, [{\n    key: 'render',\n    value: function render() {\n      var _this2 = this;\n\n      var _a = this.props,\n          className = _a.className,\n          inputPrefixCls = _a.inputPrefixCls,\n          prefixCls = _a.prefixCls,\n          suffix = _a.suffix,\n          others = __rest(_a, [\"className\", \"inputPrefixCls\", \"prefixCls\", \"suffix\"]);\n\n      delete others.onSearch;\n      var searchIcon = React.createElement(Icon, {\n        className: prefixCls + '-icon',\n        onClick: this.onSearch,\n        type: 'search',\n        key: 'searchIcon'\n      });\n      var searchSuffix = suffix ? [suffix, searchIcon] : searchIcon;\n      return React.createElement(Input, _extends({\n        onPressEnter: this.onSearch\n      }, others, {\n        className: classNames(prefixCls, className),\n        prefixCls: inputPrefixCls,\n        suffix: searchSuffix,\n        ref: function ref(node) {\n          return _this2.input = node;\n        }\n      }));\n    }\n  }]);\n\n  return Search;\n}(React.Component);\n\nexport default Search;\nSearch.defaultProps = {\n  inputPrefixCls: 'ant-input',\n  prefixCls: 'ant-input-search'\n};","map":null,"metadata":{},"sourceType":"module"}
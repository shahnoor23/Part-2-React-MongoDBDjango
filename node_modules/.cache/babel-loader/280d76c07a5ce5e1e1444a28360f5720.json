{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\OBE_Management_System(GITHUB)\\\\OBE-frontend\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\OBE_Management_System(GITHUB)\\\\OBE-frontend\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\OBE_Management_System(GITHUB)\\\\OBE-frontend\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\OBE_Management_System(GITHUB)\\\\OBE-frontend\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\OBE_Management_System(GITHUB)\\\\OBE-frontend\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\OBE_Management_System(GITHUB)\\\\OBE-frontend\\\\test\\\\src\\\\component\\\\Teacher_Framework\\\\create_quizzes\\\\QuestionForm.js\";\nimport React from \"react\";\nimport { Form, Input, Button } from \"antd\";\nimport { MinusCircleOutlined, PlusOutlined } from \"@ant-design/icons\";\nvar FormItem = Form.Item;\nvar id = 0;\n\nvar QuestionForm =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(QuestionForm, _React$Component);\n\n  function QuestionForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, QuestionForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(QuestionForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.remove = function (k) {\n      var form = _this.props.form;\n      var keys = form.getFieldValue(\"keys\");\n      if (keys.length === 1) return;\n      form.setFieldsValue({\n        keys: keys.filter(function (key) {\n          return key !== k;\n        })\n      });\n    };\n\n    _this.add = function () {\n      var form = _this.props.form;\n      var keys = form.getFieldValue(\"keys\");\n      var nextKeys = keys.concat(++id);\n      form.setFieldsValue({\n        keys: nextKeys\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(QuestionForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var formItems = fields.map(function (k, index) {\n        return React.createElement(Form.Item, {\n          label: index === 0 ? \"Choices\" : \"\",\n          required: false,\n          key: k,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 29\n          },\n          __self: this\n        }, React.createElement(Form.Item, {\n          name: \"choices[\".concat(_this2.props.id, \"]\"),\n          validateTrigger: [\"onChange\", \"onBlur\"],\n          rules: [{\n            required: true,\n            whitespace: true,\n            message: \"Please input Choices.\"\n          }],\n          noStyle: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, \"(\", React.createElement(Input, {\n          placeholder: \"Answer choice\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 42\n          },\n          __self: this\n        }), \")}\"), keys.length > 1 ? React.createElement(PlusOutlined, {\n          className: \"dynamic-delete-button\",\n          type: \"minus-circle-o\",\n          disabled: keys.length === 1,\n          onClick: function onClick() {\n            return _this2.remove(k);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }) : null);\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Form.Item, {\n        label: \"Question: \",\n        name: \"question[\".concat(this.props.id, \"]\"),\n        validateTrigger: [\"onChange\", \"onBlur\"],\n        rules: [{\n          required: true,\n          whitespace: true,\n          message: \"Please enter question\"\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(Input, {\n        placeholder: \"Add a Question\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })), React.createElement(Form.Item, {\n        label: \"Answer: \",\n        name: \"answers[\".concat(this.props.id, \"]\"),\n        validateTrigger: [\"onChange\", \"onBlur\"],\n        rules: [{\n          required: true,\n          message: \"Please input an answer\"\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(Input, {\n        placeholder: \"What is the answer?\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      })), formItems, React.createElement(FormItem, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"dashed\",\n        onClick: this.add,\n        style: {\n          width: \"60%\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(PlusOutlined, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), \" Add an answer choice\")));\n    }\n  }]);\n\n  return QuestionForm;\n}(React.Component);\n\nexport default QuestionForm;","map":{"version":3,"sources":["C:/Users/Shahnoor Khalidi/Desktop/OBE_Management_System(GITHUB)/OBE-frontend/test/src/component/Teacher_Framework/create_quizzes/QuestionForm.js"],"names":["React","Form","Input","Button","MinusCircleOutlined","PlusOutlined","FormItem","Item","id","QuestionForm","remove","k","form","props","keys","getFieldValue","length","setFieldsValue","filter","key","add","nextKeys","concat","formItems","fields","map","index","required","whitespace","message","width","Component"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Form, Input, Button } from \"antd\";\r\nimport { MinusCircleOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nconst FormItem = Form.Item;\r\n\r\nlet id = 0;\r\n\r\nclass QuestionForm extends React.Component {\r\n  remove = (k) => {\r\n    const { form } = this.props;\r\n    const keys = form.getFieldValue(\"keys\");\r\n    if (keys.length === 1) return;\r\n    form.setFieldsValue({\r\n      keys: keys.filter((key) => key !== k),\r\n    });\r\n  };\r\n\r\n  add = () => {\r\n    const { form } = this.props;\r\n    const keys = form.getFieldValue(\"keys\");\r\n    const nextKeys = keys.concat(++id);\r\n    form.setFieldsValue({\r\n      keys: nextKeys,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const formItems = fields.map((k, index) => (\r\n      <Form.Item label={index === 0 ? \"Choices\" : \"\"} required={false} key={k}>\r\n        <Form.Item\r\n          name={`choices[${this.props.id}]`}\r\n          validateTrigger={[\"onChange\", \"onBlur\"]}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              whitespace: true,\r\n              message: \"Please input Choices.\",\r\n            },\r\n          ]}\r\n          noStyle\r\n        >\r\n          (<Input placeholder=\"Answer choice\" />\r\n          )}\r\n        </Form.Item>\r\n        {keys.length > 1 ? (\r\n          <PlusOutlined\r\n            className=\"dynamic-delete-button\"\r\n            type=\"minus-circle-o\"\r\n            disabled={keys.length === 1}\r\n            onClick={() => this.remove(k)}\r\n          />\r\n        ) : null}\r\n      </Form.Item>\r\n    ));\r\n    return (\r\n      <div>\r\n        <Form.Item\r\n          label=\"Question: \"\r\n          name={`question[${this.props.id}]`}\r\n          validateTrigger={[\"onChange\", \"onBlur\"]}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              whitespace: true,\r\n              message: \"Please enter question\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input placeholder=\"Add a Question\" />\r\n        </Form.Item>\r\n        <Form.Item\r\n          label=\"Answer: \"\r\n          name={`answers[${this.props.id}]`}\r\n          validateTrigger={[\"onChange\", \"onBlur\"]}\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"Please input an answer\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input placeholder=\"What is the answer?\" />\r\n        </Form.Item>\r\n\r\n        {formItems}\r\n        <FormItem>\r\n          <Button type=\"dashed\" onClick={this.add} style={{ width: \"60%\" }}>\r\n            <PlusOutlined /> Add an answer choice\r\n          </Button>\r\n        </FormItem>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default QuestionForm;\r\n"]},"metadata":{},"sourceType":"module"}
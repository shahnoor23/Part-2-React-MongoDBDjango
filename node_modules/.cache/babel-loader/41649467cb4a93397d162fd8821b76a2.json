{"ast":null,"code":"import axios from \"axios\";\nimport { USER_LOADED, USER_LOADING, AUTH_ERROR } from \"./types\"; //check token and load user\n\nexport var loaduser = function loaduser() {\n  return function (dispatch, getState) {\n    //user loading\n    dispatch({\n      type: USER_LOADING\n    }); //gt token from state\n\n    var token = getState().auth.token; //Headers\n\n    var config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }; //if token add to headers config\n\n    if (token) {\n      config.headers[\"Authorization\"] = \"Token \".concat(token);\n    }\n\n    axios.get(\"http://127.0.0.1:8000/api/auth/user\", config).then(function (res) {\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      console.log(err);\n      dispatch({\n        type: AUTH_ERROR\n      });\n    });\n  };\n}; //loging user\n\nexport var login = function login() {\n  return function (dispatch) {\n    //Headers\n    var config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }; //if token add to headers config\n\n    if (token) {\n      config.headers[\"Authorization\"] = \"Token \".concat(token);\n    }\n\n    axios.get(\"http://127.0.0.1:8000/api/auth/user\", config).then(function (res) {\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      console.log(err);\n      dispatch({\n        type: AUTH_ERROR\n      });\n    });\n  };\n};","map":{"version":3,"sources":["C:/Users/Shahnoor Khalidi/Desktop/test/test/src/actions/auth.js"],"names":["axios","USER_LOADED","USER_LOADING","AUTH_ERROR","loaduser","dispatch","getState","type","token","auth","config","headers","get","then","res","payload","data","catch","err","console","log","login"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,YAAtB,EAAoCC,UAApC,QAAsD,SAAtD,C,CAEA;;AACA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,SAAM,UAACC,QAAD,EAAWC,QAAX,EAAwB;AACpD;AACAD,IAAAA,QAAQ,CAAC;AAAEE,MAAAA,IAAI,EAAEL;AAAR,KAAD,CAAR,CAFoD,CAIpD;;AAEA,QAAMM,KAAK,GAAGF,QAAQ,GAAGG,IAAX,CAAgBD,KAA9B,CANoD,CAQpD;;AACA,QAAME,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf,CAToD,CAcpD;;AACA,QAAIH,KAAJ,EAAW;AACTE,MAAAA,MAAM,CAACC,OAAP,CAAe,eAAf,oBAA2CH,KAA3C;AACD;;AAEDR,IAAAA,KAAK,CACFY,GADH,CACO,qCADP,EAC8CF,MAD9C,EAEGG,IAFH,CAEQ,UAAAC,GAAG,EAAI;AACXT,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAEN,WADC;AAEPc,QAAAA,OAAO,EAAED,GAAG,CAACE;AAFN,OAAD,CAAR;AAID,KAPH,EAQGC,KARH,CAQS,UAAAC,GAAG,EAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAb,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAEJ;AADC,OAAD,CAAR;AAGD,KAbH;AAcD,GAjCuB;AAAA,CAAjB,C,CAmCP;;AACA,OAAO,IAAMkB,KAAK,GAAG,SAARA,KAAQ;AAAA,SAAM,UAAAhB,QAAQ,EAAI;AACrC;AACA,QAAMK,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf,CAFqC,CAOrC;;AACA,QAAIH,KAAJ,EAAW;AACTE,MAAAA,MAAM,CAACC,OAAP,CAAe,eAAf,oBAA2CH,KAA3C;AACD;;AAEDR,IAAAA,KAAK,CACFY,GADH,CACO,qCADP,EAC8CF,MAD9C,EAEGG,IAFH,CAEQ,UAAAC,GAAG,EAAI;AACXT,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAEN,WADC;AAEPc,QAAAA,OAAO,EAAED,GAAG,CAACE;AAFN,OAAD,CAAR;AAID,KAPH,EAQGC,KARH,CAQS,UAAAC,GAAG,EAAI;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAb,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAEJ;AADC,OAAD,CAAR;AAGD,KAbH;AAcD,GA1BoB;AAAA,CAAd","sourcesContent":["import axios from \"axios\";\r\nimport { USER_LOADED, USER_LOADING, AUTH_ERROR } from \"./types\";\r\n\r\n//check token and load user\r\nexport const loaduser = () => (dispatch, getState) => {\r\n  //user loading\r\n  dispatch({ type: USER_LOADING });\r\n\r\n  //gt token from state\r\n\r\n  const token = getState().auth.token;\r\n\r\n  //Headers\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n  //if token add to headers config\r\n  if (token) {\r\n    config.headers[\"Authorization\"] = `Token ${token}`;\r\n  }\r\n\r\n  axios\r\n    .get(\"http://127.0.0.1:8000/api/auth/user\", config)\r\n    .then(res => {\r\n      dispatch({\r\n        type: USER_LOADED,\r\n        payload: res.data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n      dispatch({\r\n        type: AUTH_ERROR\r\n      });\r\n    });\r\n};\r\n\r\n//loging user\r\nexport const login = () => dispatch => {\r\n  //Headers\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\"\r\n    }\r\n  };\r\n  //if token add to headers config\r\n  if (token) {\r\n    config.headers[\"Authorization\"] = `Token ${token}`;\r\n  }\r\n\r\n  axios\r\n    .get(\"http://127.0.0.1:8000/api/auth/user\", config)\r\n    .then(res => {\r\n      dispatch({\r\n        type: USER_LOADED,\r\n        payload: res.data\r\n      });\r\n    })\r\n    .catch(err => {\r\n      console.log(err);\r\n      dispatch({\r\n        type: AUTH_ERROR\r\n      });\r\n    });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\src\\\\component\\\\clo\\\\checking.js\";\nimport React, { Component, Fragment } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { addClos, getClos, deleteClos } from \"../../actions/clos\";\nexport var Clos =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Clos, _Component);\n\n  function Clos() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Clos);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Clos)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      code: \"\",\n      description: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Clos, [{\n    key: \"componentDidMount\",\n    //component load then\n    value: function componentDidMount() {\n      this.props.getClos();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          code = _this$state.code,\n          description = _this$state.description;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, \"Add CLO\"), React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"SELECT CLO\"), React.createElement(\"div\", {\n        className: \"drop-down\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"select\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, this.props.clos.map(function (clo) {\n        return React.createElement(\"option\", {\n          value: \"clo.code\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, clo.code);\n      }))), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }, \"code\"), React.createElement(\"input\", {\n        className: \"form-control\",\n        type: \"text\",\n        name: \"code\",\n        onChange: this.onChange,\n        value: code,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Description\"), React.createElement(\"input\", {\n        className: \"form-control\",\n        type: \"text\",\n        name: \"description\",\n        onChange: this.onChange,\n        value: description,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, \"Submit\"))));\n    }\n  }]);\n\n  return Clos;\n}(Component); //state of redux\n\nClos.propTypes = {\n  clos: PropTypes.array.isRequired,\n  getClos: PropTypes.func.isRequired,\n  deleteClos: PropTypes.func.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    clos: state.clos.clos\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addClos: addClos,\n  getClos: getClos,\n  deleteClos: deleteClos\n})(Clos);","map":{"version":3,"sources":["C:/Users/Shahnoor Khalidi/Desktop/test/test/src/component/clo/checking.js"],"names":["React","Component","Fragment","connect","PropTypes","addClos","getClos","deleteClos","Clos","state","code","description","props","onSubmit","clos","map","clo","onChange","propTypes","array","isRequired","func","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { addClos, getClos, deleteClos } from \"../../actions/clos\";\r\nexport class Clos extends Component {\r\n  state = {\r\n    code: \"\",\r\n    description: \"\"\r\n  };\r\n  static propTypes = {\r\n    clos: PropTypes.array.isRequired,\r\n    getClos: PropTypes.func.isRequired,\r\n    deleteClos: PropTypes.func.isRequired\r\n  };\r\n  //component load then\r\n  componentDidMount() {\r\n    this.props.getClos();\r\n  }\r\n  render() {\r\n    const { code, description } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>Add CLO</h1>\r\n        <form onSubmit={this.onSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>SELECT CLO</label>\r\n            <div className=\"drop-down\">\r\n              <select>\r\n                {this.props.clos.map(clo => (\r\n                  <option value=\"clo.code\">{clo.code}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <label>code</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"code\"\r\n              onChange={this.onChange}\r\n              value={code}\r\n            ></input>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Description</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"description\"\r\n              onChange={this.onChange}\r\n              value={description}\r\n            ></input>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//state of redux\r\nconst mapStateToProps = state => ({\r\n  clos: state.clos.clos\r\n});\r\nexport default connect(mapStateToProps, { addClos, getClos, deleteClos })(Clos);\r\n"]},"metadata":{},"sourceType":"module"}
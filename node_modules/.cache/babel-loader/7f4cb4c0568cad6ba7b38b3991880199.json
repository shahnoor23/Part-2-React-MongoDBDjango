{"ast":null,"code":"import _extends from \"babel-runtime/helpers/extends\";\nimport _defineProperty from \"babel-runtime/helpers/defineProperty\";\nimport _classCallCheck from \"babel-runtime/helpers/classCallCheck\";\nimport _createClass from \"babel-runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"babel-runtime/helpers/possibleConstructorReturn\";\nimport _inherits from \"babel-runtime/helpers/inherits\";\nimport _typeof from \"babel-runtime/helpers/typeof\";\n\nvar __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n      r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n      d;\n  if ((typeof Reflect === \"undefined\" ? \"undefined\" : _typeof(Reflect)) === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {\n    if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  }\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React, { Component, Children } from 'react';\nimport classNames from 'classnames';\nimport addEventListener from \"rc-util/es/Dom/addEventListener\";\nimport Grid from './Grid';\nimport { throttleByAnimationFrameDecorator } from '../_util/throttleByAnimationFrame';\n\nvar Card = function (_Component) {\n  _inherits(Card, _Component);\n\n  function Card() {\n    _classCallCheck(this, Card);\n\n    var _this = _possibleConstructorReturn(this, (Card.__proto__ || Object.getPrototypeOf(Card)).apply(this, arguments));\n\n    _this.state = {\n      widerPadding: false\n    };\n\n    _this.saveRef = function (node) {\n      _this.container = node;\n    };\n\n    return _this;\n  }\n\n  _createClass(Card, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.updateWiderPadding();\n      this.resizeEvent = addEventListener(window, 'resize', this.updateWiderPadding);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.resizeEvent) {\n        this.resizeEvent.remove();\n      }\n\n      this.updateWiderPadding.cancel();\n    }\n  }, {\n    key: \"updateWiderPadding\",\n    value: function updateWiderPadding() {\n      var _this2 = this;\n\n      if (!this.container) {\n        return;\n      } // 936 is a magic card width pixer number indicated by designer\n\n\n      var WIDTH_BOUDARY_PX = 936;\n\n      if (this.container.offsetWidth >= WIDTH_BOUDARY_PX && !this.state.widerPadding) {\n        this.setState({\n          widerPadding: true\n        }, function () {\n          _this2.updateWiderPaddingCalled = true; // first render without css transition\n        });\n      }\n\n      if (this.container.offsetWidth < WIDTH_BOUDARY_PX && this.state.widerPadding) {\n        this.setState({\n          widerPadding: false\n        }, function () {\n          _this2.updateWiderPaddingCalled = true; // first render without css transition\n        });\n      }\n    }\n  }, {\n    key: \"isContainGrid\",\n    value: function isContainGrid() {\n      var containGrid = void 0;\n      Children.forEach(this.props.children, function (element) {\n        if (element && element.type && element.type === Grid) {\n          containGrid = true;\n        }\n      });\n      return containGrid;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _classNames;\n\n      var _a = this.props,\n          _a$prefixCls = _a.prefixCls,\n          prefixCls = _a$prefixCls === undefined ? 'ant-card' : _a$prefixCls,\n          className = _a.className,\n          extra = _a.extra,\n          bodyStyle = _a.bodyStyle,\n          noHovering = _a.noHovering,\n          title = _a.title,\n          loading = _a.loading,\n          _a$bordered = _a.bordered,\n          bordered = _a$bordered === undefined ? true : _a$bordered,\n          others = __rest(_a, [\"prefixCls\", \"className\", \"extra\", \"bodyStyle\", \"noHovering\", \"title\", \"loading\", \"bordered\"]);\n\n      var children = this.props.children;\n      var classString = classNames(prefixCls, className, (_classNames = {}, _defineProperty(_classNames, prefixCls + \"-loading\", loading), _defineProperty(_classNames, prefixCls + \"-bordered\", bordered), _defineProperty(_classNames, prefixCls + \"-no-hovering\", noHovering), _defineProperty(_classNames, prefixCls + \"-wider-padding\", this.state.widerPadding), _defineProperty(_classNames, prefixCls + \"-padding-transition\", this.updateWiderPaddingCalled), _defineProperty(_classNames, prefixCls + \"-contain-grid\", this.isContainGrid()), _classNames));\n\n      if (loading) {\n        children = React.createElement(\"div\", {\n          className: prefixCls + \"-loading-content\"\n        }, React.createElement(\"p\", {\n          className: prefixCls + \"-loading-block\",\n          style: {\n            width: '94%'\n          }\n        }), React.createElement(\"p\", null, React.createElement(\"span\", {\n          className: prefixCls + \"-loading-block\",\n          style: {\n            width: '28%'\n          }\n        }), React.createElement(\"span\", {\n          className: prefixCls + \"-loading-block\",\n          style: {\n            width: '62%'\n          }\n        })), React.createElement(\"p\", null, React.createElement(\"span\", {\n          className: prefixCls + \"-loading-block\",\n          style: {\n            width: '22%'\n          }\n        }), React.createElement(\"span\", {\n          className: prefixCls + \"-loading-block\",\n          style: {\n            width: '66%'\n          }\n        })), React.createElement(\"p\", null, React.createElement(\"span\", {\n          className: prefixCls + \"-loading-block\",\n          style: {\n            width: '56%'\n          }\n        }), React.createElement(\"span\", {\n          className: prefixCls + \"-loading-block\",\n          style: {\n            width: '39%'\n          }\n        })), React.createElement(\"p\", null, React.createElement(\"span\", {\n          className: prefixCls + \"-loading-block\",\n          style: {\n            width: '21%'\n          }\n        }), React.createElement(\"span\", {\n          className: prefixCls + \"-loading-block\",\n          style: {\n            width: '15%'\n          }\n        }), React.createElement(\"span\", {\n          className: prefixCls + \"-loading-block\",\n          style: {\n            width: '40%'\n          }\n        })));\n      }\n\n      var head = void 0;\n\n      if (title || extra) {\n        head = React.createElement(\"div\", {\n          className: prefixCls + \"-head\"\n        }, title ? React.createElement(\"div\", {\n          className: prefixCls + \"-head-title\"\n        }, title) : null, extra ? React.createElement(\"div\", {\n          className: prefixCls + \"-extra\"\n        }, extra) : null);\n      }\n\n      return React.createElement(\"div\", _extends({}, others, {\n        className: classString,\n        ref: this.saveRef\n      }), head, React.createElement(\"div\", {\n        className: prefixCls + \"-body\",\n        style: bodyStyle\n      }, children));\n    }\n  }]);\n\n  return Card;\n}(Component);\n\nexport default Card;\nCard.Grid = Grid;\n\n__decorate([throttleByAnimationFrameDecorator()], Card.prototype, \"updateWiderPadding\", null);","map":null,"metadata":{},"sourceType":"module"}
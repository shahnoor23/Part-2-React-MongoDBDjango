{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport createDOMForm from 'rc-form/es/createDOMForm';\nimport PureRenderMixin from 'rc-util/es/PureRenderMixin';\nimport omit from 'omit.js';\nimport createReactClass from 'create-react-class';\nimport warning from '../_util/warning';\nimport FormItem from './FormItem';\nimport { FIELD_META_PROP } from './constants';\n\nvar Form = function (_React$Component) {\n  _inherits(Form, _React$Component);\n\n  function Form(props) {\n    _classCallCheck(this, Form);\n\n    var _this = _possibleConstructorReturn(this, (Form.__proto__ || Object.getPrototypeOf(Form)).call(this, props));\n\n    warning(!props.form, 'It is unnecessary to pass `form` to `Form` after antd@1.7.0.');\n    return _this;\n  }\n\n  _createClass(Form, [{\n    key: 'shouldComponentUpdate',\n    value: function shouldComponentUpdate() {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return PureRenderMixin.shouldComponentUpdate.apply(this, args);\n    }\n  }, {\n    key: 'getChildContext',\n    value: function getChildContext() {\n      var _props = this.props,\n          layout = _props.layout,\n          vertical = _props.vertical;\n      return {\n        vertical: layout === 'vertical' || vertical\n      };\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _classNames;\n\n      var _props2 = this.props,\n          prefixCls = _props2.prefixCls,\n          hideRequiredMark = _props2.hideRequiredMark,\n          _props2$className = _props2.className,\n          className = _props2$className === undefined ? '' : _props2$className,\n          layout = _props2.layout,\n          inline = _props2.inline,\n          horizontal = _props2.horizontal,\n          vertical = _props2.vertical;\n      warning(!inline && !horizontal && !vertical, '`Form[inline|horizontal|vertical]` is deprecated, please use `Form[layout]` instead.');\n      var formClassName = classNames(prefixCls, (_classNames = {}, _defineProperty(_classNames, prefixCls + '-horizontal', !inline && !vertical && layout === 'horizontal' || horizontal), _defineProperty(_classNames, prefixCls + '-vertical', layout === 'vertical' || vertical), _defineProperty(_classNames, prefixCls + '-inline', layout === 'inline' || inline), _defineProperty(_classNames, prefixCls + '-hide-required-mark', hideRequiredMark), _classNames), className);\n      var formProps = omit(this.props, ['prefixCls', 'className', 'layout', 'inline', 'horizontal', 'vertical', 'form', 'hideRequiredMark']);\n      return React.createElement('form', _extends({}, formProps, {\n        className: formClassName\n      }));\n    }\n  }]);\n\n  return Form;\n}(React.Component);\n\nexport default Form;\nForm.defaultProps = {\n  prefixCls: 'ant-form',\n  layout: 'horizontal',\n  hideRequiredMark: false,\n  onSubmit: function onSubmit(e) {\n    e.preventDefault();\n  }\n};\nForm.propTypes = {\n  prefixCls: PropTypes.string,\n  layout: PropTypes.oneOf(['horizontal', 'inline', 'vertical']),\n  children: PropTypes.any,\n  onSubmit: PropTypes.func,\n  hideRequiredMark: PropTypes.bool\n};\nForm.childContextTypes = {\n  vertical: PropTypes.bool\n};\nForm.Item = FormItem;\n\nForm.create = function () {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var formWrapper = createDOMForm(_extends({\n    fieldNameProp: 'id'\n  }, options, {\n    fieldMetaProp: FIELD_META_PROP\n  }));\n  /* eslint-disable react/prefer-es6-class */\n\n  return function (Component) {\n    return formWrapper(createReactClass({\n      propTypes: {\n        form: PropTypes.object.isRequired\n      },\n      childContextTypes: {\n        form: PropTypes.object.isRequired\n      },\n      getChildContext: function getChildContext() {\n        return {\n          form: this.props.form\n        };\n      },\n      componentWillMount: function componentWillMount() {\n        this.__getFieldProps = this.props.form.getFieldProps;\n      },\n      deprecatedGetFieldProps: function deprecatedGetFieldProps(name, option) {\n        warning(false, '`getFieldProps` is not recommended, please use `getFieldDecorator` instead, ' + 'see: https://u.ant.design/get-field-decorator');\n        return this.__getFieldProps(name, option);\n      },\n      render: function render() {\n        this.props.form.getFieldProps = this.deprecatedGetFieldProps;\n        var withRef = {};\n\n        if (options.withRef) {\n          withRef.ref = 'formWrappedComponent';\n        } else if (this.props.wrappedComponentRef) {\n          withRef.ref = this.props.wrappedComponentRef;\n        }\n\n        return React.createElement(Component, _extends({}, this.props, withRef));\n      }\n    }));\n  };\n};","map":null,"metadata":{},"sourceType":"module"}
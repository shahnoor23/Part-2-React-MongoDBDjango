{"ast":null,"code":"import _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport TableCell from './TableCell';\nimport ExpandIcon from './ExpandIcon';\n\nvar TableRow = function (_React$Component) {\n  _inherits(TableRow, _React$Component);\n\n  function TableRow() {\n    var _ref;\n\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, TableRow);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = TableRow.__proto__ || Object.getPrototypeOf(TableRow)).call.apply(_ref, [this].concat(args))), _this), _this.state = {\n      hovered: false,\n      height: null\n    }, _this.onRowClick = function (event) {\n      var _this$props = _this.props,\n          record = _this$props.record,\n          index = _this$props.index,\n          onRowClick = _this$props.onRowClick,\n          expandable = _this$props.expandable,\n          expandRowByClick = _this$props.expandRowByClick,\n          expanded = _this$props.expanded,\n          onExpand = _this$props.onExpand;\n\n      if (expandable && expandRowByClick) {\n        onExpand(!expanded, record, event, index);\n      }\n\n      onRowClick(record, index, event);\n    }, _this.onRowDoubleClick = function (event) {\n      var _this$props2 = _this.props,\n          record = _this$props2.record,\n          index = _this$props2.index,\n          onRowDoubleClick = _this$props2.onRowDoubleClick;\n      onRowDoubleClick(record, index, event);\n    }, _this.onContextMenu = function (event) {\n      var _this$props3 = _this.props,\n          record = _this$props3.record,\n          index = _this$props3.index,\n          onRowContextMenu = _this$props3.onRowContextMenu;\n      onRowContextMenu(record, index, event);\n    }, _this.onMouseEnter = function (event) {\n      var _this$props4 = _this.props,\n          record = _this$props4.record,\n          index = _this$props4.index,\n          onRowMouseEnter = _this$props4.onRowMouseEnter,\n          onHover = _this$props4.onHover,\n          hoverKey = _this$props4.hoverKey;\n      onHover(true, hoverKey);\n      onRowMouseEnter(record, index, event);\n    }, _this.onMouseLeave = function (event) {\n      var _this$props5 = _this.props,\n          record = _this$props5.record,\n          index = _this$props5.index,\n          onRowMouseLeave = _this$props5.onRowMouseLeave,\n          onHover = _this$props5.onHover,\n          hoverKey = _this$props5.hoverKey;\n      onHover(false, hoverKey);\n      onRowMouseLeave(record, index, event);\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  _createClass(TableRow, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var store = this.props.store;\n      this.pushHeight();\n      this.pullHeight();\n      this.unsubscribe = store.subscribe(function () {\n        _this2.setHover();\n\n        _this2.pullHeight();\n      });\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      var _props = this.props,\n          record = _props.record,\n          onDestroy = _props.onDestroy,\n          index = _props.index;\n      onDestroy(record, index);\n\n      if (this.unsubscribe) {\n        this.unsubscribe();\n      }\n    }\n  }, {\n    key: 'setHover',\n    value: function setHover() {\n      var _props2 = this.props,\n          store = _props2.store,\n          hoverKey = _props2.hoverKey;\n\n      var _store$getState = store.getState(),\n          currentHoverKey = _store$getState.currentHoverKey;\n\n      if (currentHoverKey === hoverKey) {\n        this.setState({\n          hovered: true\n        });\n      } else if (this.state.hovered === true) {\n        this.setState({\n          hovered: false\n        });\n      }\n    }\n  }, {\n    key: 'pullHeight',\n    value: function pullHeight() {\n      var _props3 = this.props,\n          store = _props3.store,\n          expandedRow = _props3.expandedRow,\n          fixed = _props3.fixed,\n          rowKey = _props3.rowKey;\n\n      var _store$getState2 = store.getState(),\n          expandedRowsHeight = _store$getState2.expandedRowsHeight;\n\n      if (expandedRow && fixed && expandedRowsHeight[rowKey]) {\n        this.setState({\n          height: expandedRowsHeight[rowKey]\n        });\n      }\n    }\n  }, {\n    key: 'pushHeight',\n    value: function pushHeight() {\n      var _props4 = this.props,\n          store = _props4.store,\n          expandedRow = _props4.expandedRow,\n          fixed = _props4.fixed,\n          rowKey = _props4.rowKey;\n\n      if (expandedRow && !fixed) {\n        var _store$getState3 = store.getState(),\n            expandedRowsHeight = _store$getState3.expandedRowsHeight;\n\n        var height = this.trRef.getBoundingClientRect().height;\n        expandedRowsHeight[rowKey] = height;\n        store.setState({\n          expandedRowsHeight: expandedRowsHeight\n        });\n      }\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      var _props5 = this.props,\n          prefixCls = _props5.prefixCls,\n          columns = _props5.columns,\n          record = _props5.record,\n          visible = _props5.visible,\n          index = _props5.index,\n          expandIconColumnIndex = _props5.expandIconColumnIndex,\n          expandIconAsCell = _props5.expandIconAsCell,\n          expanded = _props5.expanded,\n          expandRowByClick = _props5.expandRowByClick,\n          expandable = _props5.expandable,\n          onExpand = _props5.onExpand,\n          needIndentSpaced = _props5.needIndentSpaced,\n          indent = _props5.indent,\n          indentSize = _props5.indentSize;\n      var className = this.props.className;\n\n      if (this.state.hovered) {\n        className += ' ' + prefixCls + '-hover';\n      }\n\n      var cells = [];\n      var expandIcon = React.createElement(ExpandIcon, {\n        expandable: expandable,\n        prefixCls: prefixCls,\n        onExpand: onExpand,\n        needIndentSpaced: needIndentSpaced,\n        expanded: expanded,\n        record: record\n      });\n\n      for (var i = 0; i < columns.length; i++) {\n        if (expandIconAsCell && i === 0) {\n          cells.push(React.createElement('td', {\n            className: prefixCls + '-expand-icon-cell',\n            key: 'rc-table-expand-icon-cell'\n          }, expandIcon));\n        }\n\n        var isColumnHaveExpandIcon = expandIconAsCell || expandRowByClick ? false : i === expandIconColumnIndex;\n        cells.push(React.createElement(TableCell, {\n          prefixCls: prefixCls,\n          record: record,\n          indentSize: indentSize,\n          indent: indent,\n          index: index,\n          column: columns[i],\n          key: columns[i].key || columns[i].dataIndex,\n          expandIcon: isColumnHaveExpandIcon ? expandIcon : null\n        }));\n      }\n\n      var height = this.props.height || this.state.height;\n      var style = {\n        height: height\n      };\n\n      if (!visible) {\n        style.display = 'none';\n      }\n\n      var rowClassName = (prefixCls + ' ' + className + ' ' + prefixCls + '-level-' + indent).trim();\n      return React.createElement('tr', {\n        ref: function ref(node) {\n          return _this3.trRef = node;\n        },\n        onClick: this.onRowClick,\n        onDoubleClick: this.onRowDoubleClick,\n        onMouseEnter: this.onMouseEnter,\n        onMouseLeave: this.onMouseLeave,\n        onContextMenu: this.onContextMenu,\n        className: rowClassName,\n        style: style\n      }, cells);\n    }\n  }]);\n\n  return TableRow;\n}(React.Component);\n\nTableRow.propTypes = {\n  onDestroy: PropTypes.func,\n  onRowClick: PropTypes.func,\n  onRowDoubleClick: PropTypes.func,\n  onRowContextMenu: PropTypes.func,\n  onRowMouseEnter: PropTypes.func,\n  onRowMouseLeave: PropTypes.func,\n  record: PropTypes.object,\n  prefixCls: PropTypes.string,\n  expandIconColumnIndex: PropTypes.number,\n  onHover: PropTypes.func,\n  columns: PropTypes.array,\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  visible: PropTypes.bool,\n  index: PropTypes.number,\n  hoverKey: PropTypes.any,\n  expanded: PropTypes.bool,\n  expandable: PropTypes.any,\n  onExpand: PropTypes.func,\n  needIndentSpaced: PropTypes.bool,\n  className: PropTypes.string,\n  indent: PropTypes.number,\n  indentSize: PropTypes.number,\n  expandIconAsCell: PropTypes.bool,\n  expandRowByClick: PropTypes.bool,\n  store: PropTypes.object.isRequired,\n  expandedRow: PropTypes.bool,\n  fixed: PropTypes.bool,\n  rowKey: PropTypes.string\n};\nTableRow.defaultProps = {\n  onRowClick: function onRowClick() {},\n  onRowDoubleClick: function onRowDoubleClick() {},\n  onRowContextMenu: function onRowContextMenu() {},\n  onRowMouseEnter: function onRowMouseEnter() {},\n  onRowMouseLeave: function onRowMouseLeave() {},\n  onDestroy: function onDestroy() {},\n  expandIconColumnIndex: 0,\n  expandRowByClick: false,\n  onHover: function onHover() {}\n};\nexport default TableRow;","map":null,"metadata":{},"sourceType":"module"}
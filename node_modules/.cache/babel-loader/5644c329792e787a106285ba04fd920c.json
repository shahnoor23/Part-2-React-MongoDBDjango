{"ast":null,"code":"import _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _extends from 'babel-runtime/helpers/extends';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport classNames from 'classnames';\nimport Icon from '../icon';\nimport Dialog from './Modal';\nimport ActionButton from './ActionButton';\nimport { getConfirmLocale } from './locale';\nexport default function confirm(config) {\n  var props = _extends({\n    iconType: 'question-circle',\n    okType: 'primary'\n  }, config);\n\n  var prefixCls = props.prefixCls || 'ant-confirm';\n  var div = document.createElement('div');\n  document.body.appendChild(div);\n  var width = props.width || 416;\n  var style = props.style || {}; // 默认为 false，保持旧版默认行为\n\n  var maskClosable = props.maskClosable === undefined ? false : props.maskClosable; // 默认为 true，保持向下兼容\n\n  if (!('okCancel' in props)) {\n    props.okCancel = true;\n  }\n\n  var runtimeLocale = getConfirmLocale();\n  props.okText = props.okText || (props.okCancel ? runtimeLocale.okText : runtimeLocale.justOkText);\n  props.cancelText = props.cancelText || runtimeLocale.cancelText;\n\n  function close() {\n    var unmountResult = ReactDOM.unmountComponentAtNode(div);\n\n    if (unmountResult && div.parentNode) {\n      div.parentNode.removeChild(div);\n    }\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var triggerCancel = args && args.length && args.some(function (param) {\n      return param && param.triggerCancel;\n    });\n\n    if (props.onCancel && triggerCancel) {\n      props.onCancel.apply(props, args);\n    }\n  }\n\n  var body = React.createElement('div', {\n    className: prefixCls + '-body'\n  }, React.createElement(Icon, {\n    type: props.iconType\n  }), React.createElement('span', {\n    className: prefixCls + '-title'\n  }, props.title), React.createElement('div', {\n    className: prefixCls + '-content'\n  }, props.content));\n  var footer = null;\n\n  if (props.okCancel) {\n    footer = React.createElement('div', {\n      className: prefixCls + '-btns'\n    }, React.createElement(ActionButton, {\n      actionFn: props.onCancel,\n      closeModal: close\n    }, props.cancelText), React.createElement(ActionButton, {\n      type: props.okType,\n      actionFn: props.onOk,\n      closeModal: close,\n      autoFocus: true\n    }, props.okText));\n  } else {\n    footer = React.createElement('div', {\n      className: prefixCls + '-btns'\n    }, React.createElement(ActionButton, {\n      type: props.okType,\n      actionFn: props.onOk,\n      closeModal: close,\n      autoFocus: true\n    }, props.okText));\n  }\n\n  var classString = classNames(prefixCls, _defineProperty({}, prefixCls + '-' + props.type, true), props.className);\n  ReactDOM.render(React.createElement(Dialog, {\n    className: classString,\n    onCancel: close.bind(this, {\n      triggerCancel: true\n    }),\n    visible: true,\n    title: '',\n    transitionName: 'zoom',\n    footer: '',\n    maskTransitionName: 'fade',\n    maskClosable: maskClosable,\n    style: style,\n    width: width,\n    zIndex: props.zIndex\n  }, React.createElement('div', {\n    className: prefixCls + '-body-wrapper'\n  }, body, ' ', footer)), div);\n  return {\n    destroy: close\n  };\n}","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\OBE_Management_System(GITHUB)\\\\OBE-frontend\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\OBE_Management_System(GITHUB)\\\\OBE-frontend\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\OBE_Management_System(GITHUB)\\\\OBE-frontend\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\OBE_Management_System(GITHUB)\\\\OBE-frontend\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\OBE_Management_System(GITHUB)\\\\OBE-frontend\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\OBE_Management_System(GITHUB)\\\\OBE-frontend\\\\test\\\\src\\\\component\\\\Teacher_Framework\\\\Assignment\\\\AssignmentDetail.js\";\nimport { Card, Skeleton, message } from \"antd\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../../../actions/teacher_framework_actions/assignment\";\nimport Questions from \"./Questions\";\nimport Choices from \"./Choices\";\nvar cardStyle = {\n  marginTop: \"20px\",\n  marginBottom: \"20px\"\n};\n\nvar AssignmentDetail =\n/*#__PURE__*/\nfunction (_React$PureComponent) {\n  _inherits(AssignmentDetail, _React$PureComponent);\n\n  function AssignmentDetail() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, AssignmentDetail);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(AssignmentDetail)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      usersAnswers: {}\n    };\n\n    _this.onChange = function (e, qId) {\n      var usersAnswers = _this.state.usersAnswers;\n      usersAnswers[qId] = e.target.value;\n\n      _this.setState({\n        usersAnswers: usersAnswers\n      });\n\n      console.log(usersAnswers);\n    };\n\n    return _this;\n  }\n\n  _createClass(AssignmentDetail, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.ongetAssignmentDetail(this.props.match.params.id);\n    }\n  }, {\n    key: \"handleSubmit\",\n    value: function handleSubmit() {\n      message.success(\"Submitting your Assignment\");\n      var usersAnswers = this.state.usersAnswers;\n      var asnt = {\n        // username: this.props.username,\n        asntId: this.props.currentAssignment.id,\n        answers: usersAnswers\n      };\n      console.log(asnt); //this.props.oncreateGradedAssignement(asnt);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var currentAssignment = this.props.currentAssignment;\n      console.log(this.props.currentAssignment);\n      var title = currentAssignment.title;\n      var usersAnswers = this.state.usersAnswers;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, Object.keys(currentAssignment).length > 0 ? React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, this.props.loading ? React.createElement(Skeleton, {\n        active: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }) : React.createElement(Card, {\n        title: title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(Questions, {\n        submit: function submit() {\n          return _this2.handleSubmit();\n        },\n        questions: currentAssignment.question_set.map(function (q) {\n          return React.createElement(Card, {\n            style: cardStyle,\n            type: \"inner\",\n            key: q.id,\n            title: \"\".concat(q.question_text),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          }, React.createElement(Choices, {\n            questionId: q.order,\n            change: _this2.onChange,\n            choices: q.choice_set,\n            usersAnswers: usersAnswers,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 64\n            },\n            __self: this\n          }));\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }))) : null);\n    }\n  }]);\n\n  return AssignmentDetail;\n}(React.PureComponent);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    currentAssignment: state.assignments.currentAssignment,\n    loading: state.assignments.loading\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    ongetAssignmentDetail: function ongetAssignmentDetail(id) {\n      return dispatch(actions.getAssignmentDetail(id));\n    },\n    oncreateGradedAssignement: function oncreateGradedAssignement(asnt) {\n      return dispatch(actions.createGradedAssignment(asnt));\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(AssignmentDetail);","map":{"version":3,"sources":["C:/Users/Shahnoor Khalidi/Desktop/OBE_Management_System(GITHUB)/OBE-frontend/test/src/component/Teacher_Framework/Assignment/AssignmentDetail.js"],"names":["Card","Skeleton","message","React","connect","actions","Questions","Choices","cardStyle","marginTop","marginBottom","AssignmentDetail","state","usersAnswers","onChange","e","qId","target","value","setState","console","log","props","ongetAssignmentDetail","match","params","id","success","asnt","asntId","currentAssignment","answers","title","Object","keys","length","loading","handleSubmit","question_set","map","q","question_text","order","choice_set","PureComponent","mapStateToProps","assignments","mapDispatchToProps","dispatch","getAssignmentDetail","oncreateGradedAssignement","createGradedAssignment"],"mappings":"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","sourcesContent":["import { Card, Skeleton, message } from \"antd\";\r\nimport React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport * as actions from \"../../../actions/teacher_framework_actions/assignment\";\r\nimport Questions from \"./Questions\";\r\nimport Choices from \"./Choices\";\r\n\r\nconst cardStyle = {\r\n  marginTop: \"20px\",\r\n  marginBottom: \"20px\",\r\n};\r\n\r\nclass AssignmentDetail extends React.PureComponent {\r\n  state = {\r\n    usersAnswers: {},\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.ongetAssignmentDetail(this.props.match.params.id);\r\n  }\r\n  onChange = (e, qId) => {\r\n    const { usersAnswers } = this.state;\r\n    usersAnswers[qId] = e.target.value;\r\n    this.setState({\r\n      usersAnswers,\r\n    });\r\n    console.log(usersAnswers);\r\n  };\r\n\r\n  handleSubmit() {\r\n    message.success(\"Submitting your Assignment\");\r\n    const { usersAnswers } = this.state;\r\n    const asnt = {\r\n      // username: this.props.username,\r\n      asntId: this.props.currentAssignment.id,\r\n      answers: usersAnswers,\r\n    };\r\n    console.log(asnt);\r\n    //this.props.oncreateGradedAssignement(asnt);\r\n  }\r\n  render() {\r\n    const { currentAssignment } = this.props;\r\n    console.log(this.props.currentAssignment);\r\n    const { title } = currentAssignment;\r\n    const { usersAnswers } = this.state;\r\n    return (\r\n      <div>\r\n        {Object.keys(currentAssignment).length > 0 ? (\r\n          <div>\r\n            {this.props.loading ? (\r\n              <Skeleton active />\r\n            ) : (\r\n              <Card title={title}>\r\n                <Questions\r\n                  submit={() => this.handleSubmit()}\r\n                  questions={currentAssignment.question_set.map((q) => {\r\n                    return (\r\n                      <Card\r\n                        style={cardStyle}\r\n                        type=\"inner\"\r\n                        key={q.id}\r\n                        title={`${q.question_text}`}\r\n                      >\r\n                        <Choices\r\n                          questionId={q.order}\r\n                          change={this.onChange}\r\n                          choices={q.choice_set}\r\n                          usersAnswers={usersAnswers}\r\n                        />\r\n                      </Card>\r\n                    );\r\n                  })}\r\n                />\r\n              </Card>\r\n            )}\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    currentAssignment: state.assignments.currentAssignment,\r\n    loading: state.assignments.loading,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    ongetAssignmentDetail: (id) => dispatch(actions.getAssignmentDetail(id)),\r\n    oncreateGradedAssignement: (asnt) =>\r\n      dispatch(actions.createGradedAssignment(asnt)),\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AssignmentDetail);\r\n"]},"metadata":{},"sourceType":"module"}
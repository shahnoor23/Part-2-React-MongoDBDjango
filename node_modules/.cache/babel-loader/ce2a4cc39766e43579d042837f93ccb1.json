{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\src\\\\component\\\\Chairman_Framework\\\\Cognitive\\\\POST.js\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport TagsInput from \"@sentisis/react-tags-input\";\nimport { addCongitive } from \"../../../actions/chairman_framework_actions/cognitive\";\nvar KeyCodes = {\n  comma: 188,\n  enter: 13\n};\nvar delimiters = [KeyCodes.comma, KeyCodes.enter];\nexport var POST =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(POST, _Component);\n\n  function POST() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, POST);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(POST)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      code: \"\",\n      definition: \"\",\n      tags: []\n    };\n\n    _this.onChange = function (e) {\n      return _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.onSubmit = function (e) {\n      e.preventDefault();\n      var _this$state = _this.state,\n          code = _this$state.code,\n          definition = _this$state.definition,\n          tags = _this$state.tags;\n      var cognitive = {\n        code: code,\n        definition: definition,\n        tags: tags\n      };\n\n      _this.props.addCongitive(cognitive);\n    };\n\n    return _this;\n  }\n\n  _createClass(POST, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          code = _this$state2.code,\n          definition = _this$state2.definition,\n          tags = _this$state2.tags;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"Add Cognitive Domain\"), React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Code\"), React.createElement(\"input\", {\n        className: \"form-control\",\n        type: \"text\",\n        name: \"code\",\n        onChange: this.onChange,\n        value: code,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Definition\"), React.createElement(\"input\", {\n        className: \"form-control\",\n        type: \"text\",\n        name: \"definition\",\n        onChange: this.onChange,\n        value: definition,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Enter Verbs\"), React.createElement(TagsInput, {\n        label: \"Tags\",\n        placeholder: \"Write tags\",\n        tags: this.state.tags,\n        onChange: function onChange(tags) {\n          return _this2.setState({\n            tags: tags\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, \"Submit\"))));\n    }\n  }]);\n\n  return POST;\n}(Component);\nPOST.propTypes = {\n  addCongitive: PropTypes.func.isRequired\n};\nexport default connect(null, {\n  addCongitive: addCongitive\n})(POST);","map":{"version":3,"sources":["C:/Users/Shahnoor Khalidi/Desktop/test/test/src/component/Chairman_Framework/Cognitive/POST.js"],"names":["React","Component","connect","PropTypes","TagsInput","addCongitive","KeyCodes","comma","enter","delimiters","POST","state","code","definition","tags","onChange","e","setState","target","name","value","onSubmit","preventDefault","cognitive","props","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport TagsInput from \"@sentisis/react-tags-input\";\r\nimport { addCongitive } from \"../../../actions/chairman_framework_actions/cognitive\";\r\n\r\nconst KeyCodes = {\r\n  comma: 188,\r\n  enter: 13\r\n};\r\n\r\nconst delimiters = [KeyCodes.comma, KeyCodes.enter];\r\n\r\nexport class POST extends Component {\r\n  state = {\r\n    code: \"\",\r\n    definition: \"\",\r\n    tags: []\r\n  };\r\n  static propTypes = {\r\n    addCongitive: PropTypes.func.isRequired\r\n  };\r\n\r\n  onChange = e =>\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const { code, definition, tags } = this.state;\r\n    const cognitive = { code, definition, tags };\r\n    this.props.addCongitive(cognitive);\r\n  };\r\n\r\n  render() {\r\n    const { code, definition, tags } = this.state;\r\n    return (\r\n      <div>\r\n        <h1>Add Cognitive Domain</h1>\r\n        <form onSubmit={this.onSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>Code</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"code\"\r\n              onChange={this.onChange}\r\n              value={code}\r\n            ></input>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Definition</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"definition\"\r\n              onChange={this.onChange}\r\n              value={definition}\r\n            ></input>\r\n          </div>\r\n          <div>\r\n            <label>Enter Verbs</label>\r\n            <TagsInput\r\n              label=\"Tags\"\r\n              placeholder=\"Write tags\"\r\n              tags={this.state.tags}\r\n              onChange={tags => this.setState({ tags })}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(null, { addCongitive })(POST);\r\n"]},"metadata":{},"sourceType":"module"}
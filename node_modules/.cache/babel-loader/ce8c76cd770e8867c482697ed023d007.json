{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Label, Input, Modal, ModalHeader, ModalFooter, ModalBody, Table, Button, FormGroup } from \"reactstrap\";\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      visions: [],\n      newVisionData: {\n        mission: \"\",\n        goal: \"\",\n        outcome: \"\"\n      },\n      editVisionData: {\n        id: \"\",\n        mission: \"\",\n        goal: \"\",\n        outcome: \"\"\n      },\n      newVisionModal: false,\n      editVisionModal: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this2 = this;\n\n      axios.get(\"http://localhost:8000/api/vision/\").then(function (response) {\n        _this2.setState({\n          visions: response.data //response by server\n\n        });\n      });\n    } //update state variable\n\n  }, {\n    key: \"toggleNewVisionModal\",\n    value: function toggleNewVisionModal() {\n      this.setState({\n        newVisionModal: !this.state.newVisionModal\n      }); //this.state.newBookModal = true;\n    }\n  }, {\n    key: \"toggleEditVisionModal\",\n    value: function toggleEditVisionModal() {\n      this.setState({\n        editVisionModal: !this.state.editVisionModal\n      }); //this.state.newBookModal = true;\n    } //add vision method\n\n  }, {\n    key: \"addVision\",\n    value: function addVision() {\n      var _this3 = this;\n\n      axios.post(\"http://localhost:8000/api/vision/\", this.state.newVisionData).then(function (response) {\n        var visions = _this3.state.visions;\n        visions.push(response.data);\n\n        _this3.setState({\n          visions: visions,\n          newVisionModal: false,\n          newVisionData: {\n            mission: \"\",\n            outcome: \"\",\n            goal: \"\"\n          }\n        });\n      });\n    }\n  }, {\n    key: \"updateVision\",\n    value: function updateVision() {\n      var _this$state$editVisio = this.state.editVisionModal,\n          outcome = _this$state$editVisio.outcome,\n          mission = _this$state$editVisio.mission,\n          goal = _this$state$editVisio.goal;\n      axios.put(\"http://localhost:8000/api/vision\" + this.state.editVisionData.id, {\n        mission: mission,\n        outcome: outcome,\n        goal: goal\n      }).then(function (response) {\n        console.log(response.data);\n      });\n    }\n  }, {\n    key: \"editVision\",\n    value: function editVision(id, mission, goal, outcome) {\n      this.setState({\n        editVisionData: {\n          id: id,\n          mission: mission,\n          goal: goal,\n          outcome: outcome\n        },\n        editVisionModal: !this.state.editVisionModal\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var visions = this.state.visions.map(function (vision) {\n        return React.createElement(\"tr\", {\n          key: vision.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 93\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 94\n          },\n          __self: this\n        }, vision.id), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95\n          },\n          __self: this\n        }, vision.mission), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96\n          },\n          __self: this\n        }, vision.goal), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97\n          },\n          __self: this\n        }, vision.outcome), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98\n          },\n          __self: this\n        }, React.createElement(Button, {\n          color: \"success\",\n          size: \"sm\",\n          className: \"mr-2\",\n          onClick: _this4.editVision.bind(_this4, vision.id, vision.mission, vision.goal, vision.outcome),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, \"Edit\"), React.createElement(Button, {\n          color: \"danger\",\n          size: \"sm\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, \"Delete\")));\n      });\n      return React.createElement(\"div\", {\n        className: \"App container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, \"Vision\"), React.createElement(Button, {\n        className: \"my-3\",\n        color: \"danger\",\n        onClick: this.toggleNewVisionModal.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Add Vision\"), React.createElement(Modal, {\n        isOpen: this.state.newVisionModal,\n        toggle: this.toggleNewVisionModal.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \" \", React.createElement(ModalHeader, {\n        toggle: this.toggleNewVisionModal.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, \"Add Vision\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"mission\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Mission\"), React.createElement(Input, {\n        id: \"mission\",\n        placeholder: \"Enter Mission\",\n        value: this.state.newVisionData.mission,\n        onChange: function onChange(e) {\n          var newVisionData = _this4.state.newVisionData;\n          newVisionData.mission = e.target.value;\n\n          _this4.setState({\n            newVisionData: newVisionData\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"goal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, \"Goal\"), React.createElement(Input, {\n        id: \"goal\",\n        placeholder: \"Enter Goal\",\n        value: this.state.newVisionData.goal,\n        onChange: function onChange(e) {\n          var newVisionData = _this4.state.newVisionData;\n          newVisionData.goal = e.target.value;\n\n          _this4.setState({\n            newVisionData: newVisionData\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"outcome\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"Outcome\"), React.createElement(Input, {\n        id: \"outcome\",\n        placeholder: \"Enter Outcome\",\n        value: this.state.newVisionData.outcome,\n        onChange: function onChange(e) {\n          var newVisionData = _this4.state.newVisionData;\n          newVisionData.outcome = e.target.value;\n\n          _this4.setState({\n            newVisionData: newVisionData\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167\n        },\n        __self: this\n      }))), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.addVision.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"Add Vision\"), \" \", React.createElement(Button, {\n        color: \"secondary\",\n        onClick: this.toggleNewVisionModal.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, \"Cancel\"))), React.createElement(Modal, {\n        isOpen: this.state.editVisionModal,\n        toggle: this.toggleEditVisionModal.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, \" \", React.createElement(ModalHeader, {\n        toggle: this.toggleEditVisionModal.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, \"Add Vision\"), React.createElement(ModalBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"mission\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      }, \"Mission\"), React.createElement(Input, {\n        id: \"mission\",\n        placeholder: \"Enter Mission\",\n        value: this.state.editVisionData.mission,\n        onChange: function onChange(e) {\n          var editVisionData = _this4.state.editVisionData;\n          editVisionData.mission = e.target.value;\n\n          _this4.setState({\n            editVisionData: editVisionData\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 214\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"goal\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215\n        },\n        __self: this\n      }, \"Goal\"), React.createElement(Input, {\n        id: \"goal\",\n        placeholder: \"Enter Goal\",\n        value: this.state.editVisionData.goal,\n        onChange: function onChange(e) {\n          var editVisionData = _this4.state.editVisionData;\n          editVisionData.goal = e.target.value;\n\n          _this4.setState({\n            editVisionData: editVisionData\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"outcome\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 228\n        },\n        __self: this\n      }, \"Outcome\"), React.createElement(Input, {\n        id: \"outcome\",\n        placeholder: \"Enter Outcome\",\n        value: this.state.editVisionData.outcome,\n        onChange: function onChange(e) {\n          var editVisionData = _this4.state.editVisionData;\n          editVisionData.outcome = e.target.value;\n\n          _this4.setState({\n            editVisionData: editVisionData\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 229\n        },\n        __self: this\n      }))), React.createElement(ModalFooter, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(Button, {\n        color: \"primary\",\n        onClick: this.updateVision.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 242\n        },\n        __self: this\n      }, \"Update Vision\"), \" \", React.createElement(Button, {\n        color: \"secondary\",\n        onClick: this.toggleEditVisionModal.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, \"Cancel\"))), React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 254\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 255\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, \"ID\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 258\n        },\n        __self: this\n      }, \"Mission\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 259\n        },\n        __self: this\n      }, \"Goal\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, \"Outcome\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, \"Actions\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 264\n        },\n        __self: this\n      }, visions)));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Shahnoor Khalidi/Desktop/test/test/src/App.js"],"names":["React","Component","axios","Label","Input","Modal","ModalHeader","ModalFooter","ModalBody","Table","Button","FormGroup","App","state","visions","newVisionData","mission","goal","outcome","editVisionData","id","newVisionModal","editVisionModal","get","then","response","setState","data","post","push","put","console","log","map","vision","editVision","bind","toggleNewVisionModal","e","target","value","addVision","toggleEditVisionModal","updateVision"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport {\n  Label,\n  Input,\n  Modal,\n  ModalHeader,\n  ModalFooter,\n  ModalBody,\n  Table,\n  Button,\n  FormGroup\n} from \"reactstrap\";\nclass App extends Component {\n  state = {\n    visions: [],\n    newVisionData: {\n      mission: \"\",\n      goal: \"\",\n      outcome: \"\"\n    },\n    editVisionData: {\n      id: \"\",\n      mission: \"\",\n      goal: \"\",\n      outcome: \"\"\n    },\n\n    newVisionModal: false,\n    editVisionModal: false\n  };\n  componentWillMount() {\n    axios.get(\"http://localhost:8000/api/vision/\").then(response => {\n      this.setState({\n        visions: response.data //response by server\n      });\n    });\n  }\n  //update state variable\n  toggleNewVisionModal() {\n    this.setState({\n      newVisionModal: !this.state.newVisionModal\n    });\n    //this.state.newBookModal = true;\n  }\n  toggleEditVisionModal() {\n    this.setState({\n      editVisionModal: !this.state.editVisionModal\n    });\n    //this.state.newBookModal = true;\n  }\n\n  //add vision method\n  addVision() {\n    axios\n      .post(\"http://localhost:8000/api/vision/\", this.state.newVisionData)\n      .then(response => {\n        let { visions } = this.state;\n        visions.push(response.data);\n        this.setState({\n          visions,\n          newVisionModal: false,\n          newVisionData: {\n            mission: \"\",\n            outcome: \"\",\n            goal: \"\"\n          }\n        });\n      });\n  }\n  updateVision() {\n    let { outcome, mission, goal } = this.state.editVisionModal;\n    axios\n      .put(\"http://localhost:8000/api/vision\" + this.state.editVisionData.id, {\n        mission,\n        outcome,\n        goal\n      })\n      .then(response => {\n        console.log(response.data);\n      });\n  }\n\n  editVision(id, mission, goal, outcome) {\n    this.setState({\n      editVisionData: { id, mission, goal, outcome },\n      editVisionModal: !this.state.editVisionModal\n    });\n  }\n  render() {\n    let visions = this.state.visions.map(vision => {\n      return (\n        <tr key={vision.id}>\n          <td>{vision.id}</td>\n          <td>{vision.mission}</td>\n          <td>{vision.goal}</td>\n          <td>{vision.outcome}</td>\n          <td>\n            <Button\n              color=\"success\"\n              size=\"sm\"\n              className=\"mr-2\"\n              onClick={this.editVision.bind(\n                this,\n                vision.id,\n                vision.mission,\n                vision.goal,\n                vision.outcome\n              )}\n            >\n              Edit\n            </Button>\n            <Button color=\"danger\" size=\"sm\">\n              Delete\n            </Button>\n          </td>\n        </tr>\n      );\n    });\n    return (\n      <div className=\"App container\">\n        <h1>Vision</h1>\n        <Button\n          className=\"my-3\"\n          color=\"danger\"\n          onClick={this.toggleNewVisionModal.bind(this)}\n        >\n          Add Vision\n        </Button>\n        <Modal\n          isOpen={this.state.newVisionModal}\n          toggle={this.toggleNewVisionModal.bind(this)}\n        >\n          {\" \"}\n          <ModalHeader toggle={this.toggleNewVisionModal.bind(this)}>\n            Add Vision\n          </ModalHeader>\n          <ModalBody>\n            <FormGroup>\n              <Label for=\"mission\">Mission</Label>\n              <Input\n                id=\"mission\"\n                placeholder=\"Enter Mission\"\n                value={this.state.newVisionData.mission}\n                onChange={e => {\n                  let { newVisionData } = this.state;\n                  newVisionData.mission = e.target.value;\n                  this.setState({ newVisionData });\n                }}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"goal\">Goal</Label>\n              <Input\n                id=\"goal\"\n                placeholder=\"Enter Goal\"\n                value={this.state.newVisionData.goal}\n                onChange={e => {\n                  let { newVisionData } = this.state;\n                  newVisionData.goal = e.target.value;\n                  this.setState({ newVisionData });\n                }}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"outcome\">Outcome</Label>\n              <Input\n                id=\"outcome\"\n                placeholder=\"Enter Outcome\"\n                value={this.state.newVisionData.outcome}\n                onChange={e => {\n                  let { newVisionData } = this.state;\n                  newVisionData.outcome = e.target.value;\n                  this.setState({ newVisionData });\n                }}\n              />\n            </FormGroup>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={this.addVision.bind(this)}>\n              Add Vision\n            </Button>{\" \"}\n            <Button\n              color=\"secondary\"\n              onClick={this.toggleNewVisionModal.bind(this)}\n            >\n              Cancel\n            </Button>\n          </ModalFooter>\n        </Modal>\n\n        <Modal\n          isOpen={this.state.editVisionModal}\n          toggle={this.toggleEditVisionModal.bind(this)}\n        >\n          {\" \"}\n          <ModalHeader toggle={this.toggleEditVisionModal.bind(this)}>\n            Add Vision\n          </ModalHeader>\n          <ModalBody>\n            <FormGroup>\n              <Label for=\"mission\">Mission</Label>\n              <Input\n                id=\"mission\"\n                placeholder=\"Enter Mission\"\n                value={this.state.editVisionData.mission}\n                onChange={e => {\n                  let { editVisionData } = this.state;\n                  editVisionData.mission = e.target.value;\n                  this.setState({ editVisionData });\n                }}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"goal\">Goal</Label>\n              <Input\n                id=\"goal\"\n                placeholder=\"Enter Goal\"\n                value={this.state.editVisionData.goal}\n                onChange={e => {\n                  let { editVisionData } = this.state;\n                  editVisionData.goal = e.target.value;\n                  this.setState({ editVisionData });\n                }}\n              />\n            </FormGroup>\n            <FormGroup>\n              <Label for=\"outcome\">Outcome</Label>\n              <Input\n                id=\"outcome\"\n                placeholder=\"Enter Outcome\"\n                value={this.state.editVisionData.outcome}\n                onChange={e => {\n                  let { editVisionData } = this.state;\n                  editVisionData.outcome = e.target.value;\n                  this.setState({ editVisionData });\n                }}\n              />\n            </FormGroup>\n          </ModalBody>\n          <ModalFooter>\n            <Button color=\"primary\" onClick={this.updateVision.bind(this)}>\n              Update Vision\n            </Button>{\" \"}\n            <Button\n              color=\"secondary\"\n              onClick={this.toggleEditVisionModal.bind(this)}\n            >\n              Cancel\n            </Button>\n          </ModalFooter>\n        </Modal>\n\n        <Table>\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Mission</th>\n              <th>Goal</th>\n              <th>Outcome</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>{visions}</tbody>\n        </Table>\n      </div>\n    );\n  }\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
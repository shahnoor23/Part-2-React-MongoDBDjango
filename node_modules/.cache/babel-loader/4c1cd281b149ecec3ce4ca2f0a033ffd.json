{"ast":null,"code":"import axios from \"axios\";\nimport { USER_LOADED, USER_LOADING, AUTH_ERROR, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT_SUCCESS } from \"./types\"; //CHECK TOKEN AND LOAD USER\n\nexport var loadUser = function loadUser() {\n  return function (dispatch, getState) {\n    //user loading\n    dispatch({\n      type: USER_LOADING\n    }); //get token from state\n\n    var token = getState().auth.token;\n    var config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    }; // if token add to headers config\n\n    if (token) {\n      config.headers[\"Authorization\"] = \"Token \".concat(token);\n    }\n\n    axios.get(\"/auth/user\", config).then(function (res) {\n      dispatch({\n        type: USER_LOADED,\n        payload: res.data\n      });\n    }).catch(function (err) {\n      console.log(err);\n      dispatch({\n        type: AUTH_ERROR\n      });\n    });\n  };\n}; // //LOGIN USER\n// export const login = (username, password) => (dispatch) => {\n//   // if token add to headers config\n//   const config = {\n//     headers: {\n//       \"Content-Type\": \"application/json\",\n//     },\n//   };\n//   const body = JSON.stringify({ username, password });\n//   axios\n//     .post(\"/auth/login\", body, config)\n//     .then((res) => {\n//       dispatch({\n//         type: LOGIN_SUCCESS,\n//         payload: res.data,\n//       });\n//     })\n//     .catch((err) => {\n//       dispatch({\n//         type: LOGIN_FAIL,\n//       });\n//     });\n// };\n// export function logout() {\n//   return (dispatch) => {\n//     const token = token;\n//     localStorage.removeItem(\"token\", token);\n//     dispatch({\n//       type: LOGOUT_SUCCESS,\n//     });\n//   };\n// }","map":{"version":3,"sources":["C:/Users/Shahnoor Khalidi/Desktop/HPCC PROJECT/React-FYPRecordData/src/actions/auth.js"],"names":["axios","USER_LOADED","USER_LOADING","AUTH_ERROR","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT_SUCCESS","loadUser","dispatch","getState","type","token","auth","config","headers","get","then","res","payload","data","catch","err","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACEC,WADF,EAEEC,YAFF,EAGEC,UAHF,EAIEC,aAJF,EAKEC,UALF,EAMEC,cANF,QAOO,SAPP,C,CASA;;AAEA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,SAAM,UAACC,QAAD,EAAWC,QAAX,EAAwB;AACpD;AACAD,IAAAA,QAAQ,CAAC;AACPE,MAAAA,IAAI,EAAER;AADC,KAAD,CAAR,CAFoD,CAMpD;;AAEA,QAAMS,KAAK,GAAGF,QAAQ,GAAGG,IAAX,CAAgBD,KAA9B;AAEA,QAAME,MAAM,GAAG;AACbC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AADI,KAAf,CAVoD,CAgBpD;;AACA,QAAIH,KAAJ,EAAW;AACTE,MAAAA,MAAM,CAACC,OAAP,CAAe,eAAf,oBAA2CH,KAA3C;AACD;;AAEDX,IAAAA,KAAK,CACFe,GADH,CACO,YADP,EACqBF,MADrB,EAEGG,IAFH,CAEQ,UAACC,GAAD,EAAS;AACbT,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAET,WADC;AAEPiB,QAAAA,OAAO,EAAED,GAAG,CAACE;AAFN,OAAD,CAAR;AAID,KAPH,EAQGC,KARH,CAQS,UAACC,GAAD,EAAS;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACAb,MAAAA,QAAQ,CAAC;AACPE,QAAAA,IAAI,EAAEP;AADC,OAAD,CAAR;AAGD,KAbH;AAcD,GAnCuB;AAAA,CAAjB,C,CAqCP;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import axios from \"axios\";\r\n\r\nimport {\r\n  USER_LOADED,\r\n  USER_LOADING,\r\n  AUTH_ERROR,\r\n  LOGIN_SUCCESS,\r\n  LOGIN_FAIL,\r\n  LOGOUT_SUCCESS,\r\n} from \"./types\";\r\n\r\n//CHECK TOKEN AND LOAD USER\r\n\r\nexport const loadUser = () => (dispatch, getState) => {\r\n  //user loading\r\n  dispatch({\r\n    type: USER_LOADING,\r\n  });\r\n\r\n  //get token from state\r\n\r\n  const token = getState().auth.token;\r\n\r\n  const config = {\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  };\r\n\r\n  // if token add to headers config\r\n  if (token) {\r\n    config.headers[\"Authorization\"] = `Token ${token}`;\r\n  }\r\n\r\n  axios\r\n    .get(\"/auth/user\", config)\r\n    .then((res) => {\r\n      dispatch({\r\n        type: USER_LOADED,\r\n        payload: res.data,\r\n      });\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n      dispatch({\r\n        type: AUTH_ERROR,\r\n      });\r\n    });\r\n};\r\n\r\n// //LOGIN USER\r\n\r\n// export const login = (username, password) => (dispatch) => {\r\n//   // if token add to headers config\r\n//   const config = {\r\n//     headers: {\r\n//       \"Content-Type\": \"application/json\",\r\n//     },\r\n//   };\r\n\r\n//   const body = JSON.stringify({ username, password });\r\n//   axios\r\n//     .post(\"/auth/login\", body, config)\r\n//     .then((res) => {\r\n//       dispatch({\r\n//         type: LOGIN_SUCCESS,\r\n//         payload: res.data,\r\n//       });\r\n//     })\r\n//     .catch((err) => {\r\n//       dispatch({\r\n//         type: LOGIN_FAIL,\r\n//       });\r\n//     });\r\n// };\r\n// export function logout() {\r\n//   return (dispatch) => {\r\n//     const token = token;\r\n//     localStorage.removeItem(\"token\", token);\r\n//     dispatch({\r\n//       type: LOGOUT_SUCCESS,\r\n//     });\r\n//   };\r\n// }\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\OBE_Management_System(GITHUB)\\\\OBE-frontend\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\OBE_Management_System(GITHUB)\\\\OBE-frontend\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\OBE_Management_System(GITHUB)\\\\OBE-frontend\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\OBE_Management_System(GITHUB)\\\\OBE-frontend\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\OBE_Management_System(GITHUB)\\\\OBE-frontend\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\OBE_Management_System(GITHUB)\\\\OBE-frontend\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\OBE_Management_System(GITHUB)\\\\OBE-frontend\\\\test\\\\src\\\\component\\\\Teacher_Framework\\\\create_quizzes\\\\postquestions.js\";\nimport React, { Component } from \"react\";\nimport { Form, Input, Button, Col, Row } from \"antd\";\nimport { MinusCircleOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport Select from \"react-select\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { addAssignment } from \"../../../actions/teacher_framework_actions/create_quizz\";\nimport { getAssigned } from \"../../../actions/teacher_framework_actions/viewassignedsubjects\";\nexport var Postquestions =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Postquestions, _Component);\n\n  function Postquestions() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Postquestions);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Postquestions)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      subject_name: null,\n      question_set: [],\n      label: \"\"\n    };\n\n    _this.onChangesubjects = function (selected) {\n      console.log(selected);\n\n      _this.setState({\n        subject_name: selected\n      });\n    };\n\n    _this.onChange = function (e) {\n      return _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.onSubmit = function (e) {\n      e.preventDefault();\n      var _this$state = _this.state,\n          subject_name = _this$state.subject_name,\n          question_set = _this$state.question_set;\n      var quizz = {\n        subject_name: subject_name,\n        question_set: question_set\n      };\n      quizz.question_set = [];\n\n      for (var i in question_set) {\n        quizz.question_set.push(question_set[i].value);\n      }\n\n      quizz.subject_name = [];\n\n      for (var _i in subject_name) {\n        quizz.subject_name.push(subject_name[_i].value);\n      }\n\n      console.log(quizz); //this.props.addClos(clo);\n    };\n\n    return _this;\n  }\n\n  _createClass(Postquestions, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getAssigned();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      //console.log(this.verbsoptions());\n      //console.log(this.state.subject_name);\n      console.log(this.props.assignedsubjects);\n      var _this$state2 = this.state,\n          subject_name = _this$state2.subject_name,\n          label = _this$state2.label;\n      var optionquestions = [];\n      var optionsubjects = [];\n\n      if (this.props.assignedsubjects.length > 0 && this.props.assignedsubjects[0].subjects.length > 0) {\n        // console.log(true, this.props.assignedsubjects[0].subjects);\n        for (var i in this.props.assignedsubjects[0].subjects) {\n          optionsubjects.push({\n            value: this.props.assignedsubjects[0].subjects[i].id,\n            label: this.props.assignedsubjects[0].subjects[i].tittle\n          });\n        }\n      }\n\n      console.log(optionsubjects);\n      var rules = [{\n        required: true\n      }];\n      return React.createElement(Form, {\n        className: \"my-form\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(Form.List, {\n        name: \"users\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, function (fields, _ref) {\n        var add = _ref.add,\n            remove = _ref.remove;\n\n        /**\r\n         * `fields` internal fill with `name`, `key`, `fieldKey` props.\r\n         * You can extends this into sub field to support multiple dynamic fields.\r\n         */\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90\n          },\n          __self: this\n        }, fields.map(function (field, index) {\n          return React.createElement(Row, {\n            key: field.key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92\n            },\n            __self: this\n          }, React.createElement(Col, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 93\n            },\n            __self: this\n          }, React.createElement(Form.Item, {\n            name: [field.name, \"firstName\"],\n            fieldKey: [field.fieldKey, \"firstName\"],\n            rules: rules,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 94\n            },\n            __self: this\n          }, React.createElement(Input, {\n            placeholder: \"first name\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 99\n            },\n            __self: this\n          }))), React.createElement(Col, {\n            flex: \"none\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 102\n            },\n            __self: this\n          }, React.createElement(MinusCircleOutlined, {\n            className: \"dynamic-delete-button\",\n            onClick: function onClick() {\n              remove(field.name);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 103\n            },\n            __self: this\n          })));\n        }), React.createElement(Form.Item, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 112\n          },\n          __self: this\n        }, React.createElement(Button, {\n          type: \"dashed\",\n          onClick: function onClick() {\n            add();\n          },\n          style: {\n            width: \"100%\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, React.createElement(PlusOutlined, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120\n          },\n          __self: this\n        }), \" Add field\")));\n      }), React.createElement(Form.Item, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, React.createElement(Button, {\n        type: \"primary\",\n        htmlType: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Submit\")));\n    }\n  }]);\n\n  return Postquestions;\n}(Component);\nPostquestions.propTypes = {\n  assignedsubjects: PropTypes.func.isRequired,\n  getAssigned: PropTypes.func.isRequired,\n  addAssignment: PropTypes.func.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    assignedsubjects: state.assignedsubjects.assignedsubjects\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addAssignment: addAssignment,\n  getAssigned: getAssigned\n})(Postquestions);","map":{"version":3,"sources":["C:/Users/Shahnoor Khalidi/Desktop/OBE_Management_System(GITHUB)/OBE-frontend/test/src/component/Teacher_Framework/create_quizzes/postquestions.js"],"names":["React","Component","Form","Input","Button","Col","Row","MinusCircleOutlined","PlusOutlined","Select","connect","PropTypes","addAssignment","getAssigned","Postquestions","state","subject_name","question_set","label","onChangesubjects","selected","console","log","setState","onChange","e","target","name","value","onSubmit","preventDefault","quizz","i","push","props","assignedsubjects","optionquestions","optionsubjects","length","subjects","id","tittle","rules","required","fields","add","remove","map","field","index","key","fieldKey","width","propTypes","func","isRequired","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Form, Input, Button, Col, Row } from \"antd\";\r\nimport { MinusCircleOutlined, PlusOutlined } from \"@ant-design/icons\";\r\nimport Select from \"react-select\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { addAssignment } from \"../../../actions/teacher_framework_actions/create_quizz\";\r\nimport { getAssigned } from \"../../../actions/teacher_framework_actions/viewassignedsubjects\";\r\n\r\nexport class Postquestions extends Component {\r\n  state = {\r\n    subject_name: null,\r\n    question_set: [],\r\n    label: \"\",\r\n  };\r\n  static propTypes = {\r\n    assignedsubjects: PropTypes.func.isRequired,\r\n    getAssigned: PropTypes.func.isRequired,\r\n    addAssignment: PropTypes.func.isRequired,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.getAssigned();\r\n  }\r\n  onChangesubjects = (selected) => {\r\n    console.log(selected);\r\n    this.setState({\r\n      subject_name: selected,\r\n    });\r\n  };\r\n\r\n  onChange = (e) =>\r\n    this.setState({\r\n      [e.target.name]: e.target.value,\r\n    });\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const { subject_name, question_set } = this.state;\r\n    const quizz = {\r\n      subject_name,\r\n      question_set,\r\n    };\r\n    quizz.question_set = [];\r\n    for (let i in question_set) {\r\n      quizz.question_set.push(question_set[i].value);\r\n    }\r\n    quizz.subject_name = [];\r\n    for (let i in subject_name) {\r\n      quizz.subject_name.push(subject_name[i].value);\r\n    }\r\n\r\n    console.log(quizz);\r\n    //this.props.addClos(clo);\r\n  };\r\n\r\n  render() {\r\n    //console.log(this.verbsoptions());\r\n    //console.log(this.state.subject_name);\r\n    console.log(this.props.assignedsubjects);\r\n    const { subject_name, label } = this.state;\r\n\r\n    let optionquestions = [];\r\n\r\n    let optionsubjects = [];\r\n    if (\r\n      this.props.assignedsubjects.length > 0 &&\r\n      this.props.assignedsubjects[0].subjects.length > 0\r\n    ) {\r\n      // console.log(true, this.props.assignedsubjects[0].subjects);\r\n      for (let i in this.props.assignedsubjects[0].subjects) {\r\n        optionsubjects.push({\r\n          value: this.props.assignedsubjects[0].subjects[i].id,\r\n          label: this.props.assignedsubjects[0].subjects[i].tittle,\r\n        });\r\n      }\r\n    }\r\n    console.log(optionsubjects);\r\n\r\n    const rules = [{ required: true }];\r\n\r\n    return (\r\n      <Form className=\"my-form\">\r\n        <Form.List name=\"users\">\r\n          {(fields, { add, remove }) => {\r\n            /**\r\n             * `fields` internal fill with `name`, `key`, `fieldKey` props.\r\n             * You can extends this into sub field to support multiple dynamic fields.\r\n             */\r\n            return (\r\n              <div>\r\n                {fields.map((field, index) => (\r\n                  <Row key={field.key}>\r\n                    <Col>\r\n                      <Form.Item\r\n                        name={[field.name, \"firstName\"]}\r\n                        fieldKey={[field.fieldKey, \"firstName\"]}\r\n                        rules={rules}\r\n                      >\r\n                        <Input placeholder=\"first name\" />\r\n                      </Form.Item>\r\n                    </Col>\r\n                    <Col flex=\"none\">\r\n                      <MinusCircleOutlined\r\n                        className=\"dynamic-delete-button\"\r\n                        onClick={() => {\r\n                          remove(field.name);\r\n                        }}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                ))}\r\n                <Form.Item>\r\n                  <Button\r\n                    type=\"dashed\"\r\n                    onClick={() => {\r\n                      add();\r\n                    }}\r\n                    style={{ width: \"100%\" }}\r\n                  >\r\n                    <PlusOutlined /> Add field\r\n                  </Button>\r\n                </Form.Item>\r\n              </div>\r\n            );\r\n          }}\r\n        </Form.List>\r\n\r\n        <Form.Item>\r\n          <Button type=\"primary\" htmlType=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </Form.Item>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  assignedsubjects: state.assignedsubjects.assignedsubjects,\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  addAssignment,\r\n  getAssigned,\r\n})(Postquestions);\r\n"]},"metadata":{},"sourceType":"module"}
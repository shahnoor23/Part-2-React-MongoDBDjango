{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nexports[\"default\"] = createMention;\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _Suggestions2 = require('../component/Suggestions.react');\n\nvar _Suggestions3 = _interopRequireDefault(_Suggestions2);\n\nvar _SuggestionPortal = require('../component/SuggestionPortal.react');\n\nvar _SuggestionPortal2 = _interopRequireDefault(_SuggestionPortal);\n\nvar _MentionContent = require('../component/MentionContent.react');\n\nvar _MentionContent2 = _interopRequireDefault(_MentionContent);\n\nvar _mentionStore = require('../model/mentionStore');\n\nvar _mentionStore2 = _interopRequireDefault(_mentionStore);\n\nvar _exportContent = require('./exportContent');\n\nvar _exportContent2 = _interopRequireDefault(_exportContent);\n\nvar _getRegExp = require('../utils/getRegExp');\n\nvar _getRegExp2 = _interopRequireDefault(_getRegExp);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction findWithRegex(regex, contentBlock, callback) {\n  // Get the text from the contentBlock\n  var text = contentBlock.getText();\n  var matchArr = void 0;\n  var start = void 0; // eslint-disable-line\n  // Go through all matches in the text and return the indizes to the callback\n\n  while ((matchArr = regex.exec(text)) !== null) {\n    // eslint-disable-line\n    start = matchArr.index;\n    callback(start, start + matchArr[0].length);\n  }\n}\n\nfunction mentionContentStrategy(contentBlock, callback, contentState) {\n  contentBlock.findEntityRanges(function (character) {\n    var entityKey = character.getEntity();\n    return entityKey && contentState.getEntity(entityKey).getType() === 'mention';\n  }, callback);\n}\n\nfunction noop() {}\n\nvar MentionContentComponent = function MentionContentComponent(props) {\n  var entityKey = props.entityKey,\n      tag = props.tag,\n      callbacks = props.callbacks;\n  var contentState = callbacks.getEditorState().getCurrentContent();\n  var data = contentState.getEntity(entityKey).getData();\n  return _react2[\"default\"].createElement(tag, _extends({}, props, {\n    data: data\n  }));\n};\n\nfunction createMention() {\n  var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var callbacks = {\n    onChange: noop,\n    onUpArrow: noop,\n    onDownArrow: noop,\n    getEditorState: noop,\n    setEditorState: noop,\n    handleReturn: noop,\n    onBlur: noop\n  };\n  var componentProps = {\n    callbacks: callbacks,\n    mentionStore: _mentionStore2[\"default\"]\n  };\n  var suggestionRegex = (0, _getRegExp2[\"default\"])(config.prefix);\n  var tag = config.tag || _MentionContent2[\"default\"];\n  var decorators = [{\n    strategy: function strategy(contentBlock, callback) {\n      findWithRegex(suggestionRegex, contentBlock, callback);\n    },\n    component: function component(props) {\n      return _react2[\"default\"].createElement(_SuggestionPortal2[\"default\"], _extends({}, props, componentProps, {\n        style: config.mentionStyle,\n        suggestionRegex: (0, _getRegExp2[\"default\"])(config.prefix)\n      }));\n    }\n  }];\n\n  if (config.mode !== 'immutable') {\n    decorators.unshift({\n      strategy: mentionContentStrategy,\n      component: function component(props) {\n        return _react2[\"default\"].createElement(MentionContentComponent, _extends({\n          tag: tag\n        }, props, {\n          callbacks: callbacks\n        }));\n      }\n    });\n  }\n\n  return {\n    name: 'mention',\n    Suggestions: function Suggestions(props) {\n      return _react2[\"default\"].createElement(_Suggestions3[\"default\"], _extends({}, props, componentProps, {\n        store: _mentionStore2[\"default\"]\n      }));\n    },\n    decorators: decorators,\n    onChange: function onChange(editorState) {\n      return callbacks.onChange ? callbacks.onChange(editorState) : editorState;\n    },\n    callbacks: callbacks,\n    \"export\": _exportContent2[\"default\"]\n  };\n}\n\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"script"}
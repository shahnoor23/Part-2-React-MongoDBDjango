{"ast":null,"code":"import _extends from 'babel-runtime/helpers/extends';\nimport _defineProperty from 'babel-runtime/helpers/defineProperty';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport React from 'react';\nimport { Children, cloneElement } from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\n\nvar Row = function (_React$Component) {\n  _inherits(Row, _React$Component);\n\n  function Row() {\n    _classCallCheck(this, Row);\n\n    return _possibleConstructorReturn(this, (Row.__proto__ || Object.getPrototypeOf(Row)).apply(this, arguments));\n  }\n\n  _createClass(Row, [{\n    key: 'render',\n    value: function render() {\n      var _classNames;\n\n      var _a = this.props,\n          type = _a.type,\n          justify = _a.justify,\n          align = _a.align,\n          className = _a.className,\n          gutter = _a.gutter,\n          style = _a.style,\n          children = _a.children,\n          _a$prefixCls = _a.prefixCls,\n          prefixCls = _a$prefixCls === undefined ? 'ant-row' : _a$prefixCls,\n          others = __rest(_a, [\"type\", \"justify\", \"align\", \"className\", \"gutter\", \"style\", \"children\", \"prefixCls\"]);\n\n      var classes = classNames((_classNames = {}, _defineProperty(_classNames, prefixCls, !type), _defineProperty(_classNames, prefixCls + '-' + type, type), _defineProperty(_classNames, prefixCls + '-' + type + '-' + justify, type && justify), _defineProperty(_classNames, prefixCls + '-' + type + '-' + align, type && align), _classNames), className);\n      var rowStyle = gutter > 0 ? _extends({\n        marginLeft: gutter / -2,\n        marginRight: gutter / -2\n      }, style) : style;\n      var cols = Children.map(children, function (col) {\n        if (!col) {\n          return null;\n        }\n\n        if (col.props && gutter > 0) {\n          return cloneElement(col, {\n            style: _extends({\n              paddingLeft: gutter / 2,\n              paddingRight: gutter / 2\n            }, col.props.style)\n          });\n        }\n\n        return col;\n      });\n      return React.createElement('div', _extends({}, others, {\n        className: classes,\n        style: rowStyle\n      }), cols);\n    }\n  }]);\n\n  return Row;\n}(React.Component);\n\nexport default Row;\nRow.defaultProps = {\n  gutter: 0\n};\nRow.propTypes = {\n  type: PropTypes.string,\n  align: PropTypes.string,\n  justify: PropTypes.string,\n  className: PropTypes.string,\n  children: PropTypes.node,\n  gutter: PropTypes.number,\n  prefixCls: PropTypes.string\n};","map":null,"metadata":{},"sourceType":"module"}
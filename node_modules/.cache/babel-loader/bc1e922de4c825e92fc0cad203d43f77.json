{"ast":null,"code":"import _defineProperty from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\Shahnoor Khalidi\\\\Desktop\\\\test\\\\test\\\\src\\\\component\\\\Chairman_Framework\\\\clo\\\\POSTCLO.js\";\nimport React, { Component } from \"react\";\nimport Select from \"react-select\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport { addClos } from \"../../../actions/clos\";\nimport { getPlos } from \"../../../actions/plos\";\nimport { getCongitive } from \"../../../actions/chairman_framework_actions/cognitive\";\nimport { getAffective } from \"../../../actions/chairman_framework_actions/affectives\";\nimport { getPsychomotor } from \"../../../actions/chairman_framework_actions/psychomotors\";\nexport var POSTCLO =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(POSTCLO, _Component);\n\n  function POSTCLO() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, POSTCLO);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(POSTCLO)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      code: \"\",\n      description: \"\",\n      plos: null,\n      cognitives: null,\n      affectives: null,\n      psychomotors: null,\n      selectedcognitiveid: null,\n      verbs: null\n    };\n\n    _this.onChangeplos = function (selected) {\n      console.log(selected);\n\n      _this.setState({\n        plos: selected\n      });\n    };\n\n    _this.onChangecognitives = function (selected) {\n      console.log(selected);\n\n      if (selected !== null) {\n        _this.setState({\n          cognitives: selected,\n          selectedcognitiveid: selected[0].value\n        });\n      } else {\n        _this.setState({\n          cognitives: null,\n          selectedcognitiveid: null\n        });\n      }\n    };\n\n    _this.onChangeverbs = function (selected) {\n      console.log(selected);\n\n      if (_this.selectedcognitiveid !== null) {\n        _this.setState({\n          verbs: selected\n        });\n      }\n    };\n\n    _this.onChangeaffectives = function (selected) {\n      console.log(selected);\n\n      _this.setState({\n        affectives: selected\n      });\n    };\n\n    _this.onChangepsychomotors = function (selected) {\n      console.log(selected);\n\n      _this.setState({\n        psychomotors: selected\n      });\n    };\n\n    _this.onChange = function (e) {\n      return _this.setState(_defineProperty({}, e.target.name, e.target.value));\n    };\n\n    _this.onSubmit = function (e) {\n      e.preventDefault();\n      var _this$state = _this.state,\n          code = _this$state.code,\n          description = _this$state.description,\n          plos = _this$state.plos,\n          cognitives = _this$state.cognitives,\n          affectives = _this$state.affectives,\n          psychomotors = _this$state.psychomotors,\n          verbs = _this$state.verbs;\n      var clo = {\n        code: code,\n        description: description,\n        plos: plos,\n        cognitives: cognitives,\n        affectives: affectives,\n        psychomotors: psychomotors,\n        verb: verbs.value\n      };\n      clo.plos = [];\n      clo.cognitives = [];\n      clo.affectives = [];\n      clo.psychomotors = [];\n\n      for (var i in plos) {\n        clo.plos.push(plos[i].value);\n      }\n\n      for (var _i in cognitives) {\n        clo.cognitives.push(cognitives[_i].value);\n      }\n\n      for (var _i2 in affectives) {\n        clo.affectives.push(affectives[_i2].value);\n      }\n\n      for (var _i3 in psychomotors) {\n        clo.psychomotors.push(psychomotors[_i3].value);\n      }\n\n      console.log(clo);\n\n      _this.props.addClos(clo);\n    };\n\n    _this.verbsoptions = function () {\n      if (_this.state.selectedcognitiveid === null) {\n        return null;\n      }\n\n      var verbsoptions = [];\n      console.log(_this.props.cognitives);\n\n      for (var i in _this.props.cognitives) {\n        //console.log(this.props.cognitives);\n        if (_this.state.selectedcognitiveid === _this.props.cognitives[i].id) {\n          for (var j in _this.props.cognitives[i].verbs) {\n            verbsoptions.push({\n              value: _this.props.cognitives[i].verbs[j],\n              label: _this.props.cognitives[i].verbs[j]\n            });\n          }\n        }\n      } //console.log(options)\n\n\n      return verbsoptions;\n    };\n\n    return _this;\n  }\n\n  _createClass(POSTCLO, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getPlos();\n      this.props.getCongitive();\n      this.props.getAffective();\n      this.props.getPsychomotor();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log(this.state.selectedcognitiveid);\n      console.log(this.verbsoptions()); // console.log(this.state.cognitives);\n      // console.log(this.props.cognitives);\n\n      var _this$state2 = this.state,\n          code = _this$state2.code,\n          description = _this$state2.description,\n          plos = _this$state2.plos,\n          cognitives = _this$state2.cognitives,\n          affectives = _this$state2.affectives,\n          psychomotors = _this$state2.psychomotors;\n      var optionplos = [];\n      var optioncognitives = [];\n      var optionaffectives = [];\n      var optionpsychomotors = []; //console.log(this.props.plos.length);\n\n      if (this.props.plos.length > 0) {\n        for (var i in this.props.plos) {\n          optionplos.push({\n            value: this.props.plos[i].id,\n            label: this.props.plos[i].code\n          });\n        }\n      }\n\n      if (this.props.cognitives.length > 0) {\n        for (var _i4 in this.props.cognitives) {\n          optioncognitives.push({\n            value: this.props.cognitives[_i4].id,\n            label: this.props.cognitives[_i4].code\n          });\n        }\n      }\n\n      if (this.props.affectives.length > 0) {\n        for (var _i5 in this.props.affectives) {\n          optionaffectives.push({\n            value: this.props.affectives[_i5].id,\n            label: this.props.affectives[_i5].code\n          });\n        }\n      }\n\n      if (this.props.psychomotors.length > 0) {\n        for (var _i6 in this.props.psychomotors) {\n          optionpsychomotors.push({\n            value: this.props.psychomotors[_i6].id,\n            label: this.props.psychomotors[_i6].code\n          });\n        }\n      }\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198\n        },\n        __self: this\n      }, \"Add CLO\"), React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 199\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201\n        },\n        __self: this\n      }, \"code\"), React.createElement(\"input\", {\n        className: \"form-control\",\n        type: \"text\",\n        name: \"code\",\n        onChange: this.onChange,\n        value: code,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211\n        },\n        __self: this\n      }, \"Description\"), React.createElement(\"input\", {\n        className: \"form-control\",\n        type: \"text\",\n        name: \"description\",\n        onChange: this.onChange,\n        value: description,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219\n        },\n        __self: this\n      }, \"Select PLO\"), React.createElement(Select, {\n        value: plos,\n        onChange: this.onChangeplos,\n        options: optionplos,\n        isMulti: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 220\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226\n        },\n        __self: this\n      }, \"Select Cognitive Domain\"), React.createElement(Select, {\n        value: cognitives,\n        onChange: this.onChangecognitives,\n        options: optioncognitives,\n        isMulti: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 233\n        },\n        __self: this\n      }, \"Select Verb\"), React.createElement(Select, {\n        value: this.state.verbs,\n        onChange: this.onChangeverbs,\n        options: this.verbsoptions(),\n        isDisabled: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, \"Select Affective Domain\"), React.createElement(Select, {\n        value: affectives,\n        onChange: this.onChangeaffectives,\n        options: optionaffectives,\n        isMulti: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, \"Select Psychomotor Domain\"), React.createElement(Select, {\n        value: psychomotors,\n        onChange: this.onChangepsychomotors,\n        options: optionpsychomotors,\n        isMulti: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257\n        },\n        __self: this\n      }, \"Submit\"))));\n    }\n  }]);\n\n  return POSTCLO;\n}(Component);\nPOSTCLO.propTypes = {\n  plos: PropTypes.func.isRequired,\n  getPlos: PropTypes.func.isRequired,\n  getCongitive: PropTypes.func.isRequired,\n  getAffective: PropTypes.func.isRequired,\n  getPsychomotor: PropTypes.func.isRequired,\n  addClo: PropTypes.func.isRequired\n};\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    plos: state.plos.plos,\n    cognitives: state.cognitives.cognitives,\n    affectives: state.affectives.affectives,\n    psychomotors: state.psychomotors.psychomotors\n  };\n};\n\nexport default connect(mapStateToProps, {\n  addClos: addClos,\n  getPlos: getPlos,\n  getCongitive: getCongitive,\n  getAffective: getAffective,\n  getPsychomotor: getPsychomotor\n})(POSTCLO);","map":{"version":3,"sources":["C:/Users/Shahnoor Khalidi/Desktop/test/test/src/component/Chairman_Framework/clo/POSTCLO.js"],"names":["React","Component","Select","connect","PropTypes","addClos","getPlos","getCongitive","getAffective","getPsychomotor","POSTCLO","state","code","description","plos","cognitives","affectives","psychomotors","selectedcognitiveid","verbs","onChangeplos","selected","console","log","setState","onChangecognitives","value","onChangeverbs","onChangeaffectives","onChangepsychomotors","onChange","e","target","name","onSubmit","preventDefault","clo","verb","i","push","props","verbsoptions","id","j","label","optionplos","optioncognitives","optionaffectives","optionpsychomotors","length","propTypes","func","isRequired","addClo","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Select from \"react-select\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { addClos } from \"../../../actions/clos\";\r\nimport { getPlos } from \"../../../actions/plos\";\r\nimport { getCongitive } from \"../../../actions/chairman_framework_actions/cognitive\";\r\nimport { getAffective } from \"../../../actions/chairman_framework_actions/affectives\";\r\nimport { getPsychomotor } from \"../../../actions/chairman_framework_actions/psychomotors\";\r\nexport class POSTCLO extends Component {\r\n  state = {\r\n    code: \"\",\r\n    description: \"\",\r\n    plos: null,\r\n    cognitives: null,\r\n    affectives: null,\r\n    psychomotors: null,\r\n    selectedcognitiveid: null,\r\n    verbs: null\r\n  };\r\n  static propTypes = {\r\n    plos: PropTypes.func.isRequired,\r\n    getPlos: PropTypes.func.isRequired,\r\n    getCongitive: PropTypes.func.isRequired,\r\n    getAffective: PropTypes.func.isRequired,\r\n    getPsychomotor: PropTypes.func.isRequired,\r\n    addClo: PropTypes.func.isRequired\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.getPlos();\r\n    this.props.getCongitive();\r\n    this.props.getAffective();\r\n    this.props.getPsychomotor();\r\n  }\r\n  onChangeplos = selected => {\r\n    console.log(selected);\r\n    this.setState({\r\n      plos: selected\r\n    });\r\n  };\r\n  onChangecognitives = selected => {\r\n    console.log(selected);\r\n    if (selected !== null) {\r\n      this.setState({\r\n        cognitives: selected,\r\n        selectedcognitiveid: selected[0].value\r\n      });\r\n    } else {\r\n      this.setState({\r\n        cognitives: null,\r\n        selectedcognitiveid: null\r\n      });\r\n    }\r\n  };\r\n\r\n  onChangeverbs = selected => {\r\n    console.log(selected);\r\n    if (this.selectedcognitiveid !== null) {\r\n      this.setState({\r\n        verbs: selected\r\n      });\r\n    }\r\n  };\r\n\r\n  onChangeaffectives = selected => {\r\n    console.log(selected);\r\n    this.setState({\r\n      affectives: selected\r\n    });\r\n  };\r\n\r\n  onChangepsychomotors = selected => {\r\n    console.log(selected);\r\n    this.setState({\r\n      psychomotors: selected\r\n    });\r\n  };\r\n  onChange = e =>\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    const {\r\n      code,\r\n      description,\r\n      plos,\r\n      cognitives,\r\n      affectives,\r\n      psychomotors,\r\n      verbs\r\n    } = this.state;\r\n    const clo = {\r\n      code,\r\n      description,\r\n      plos,\r\n      cognitives,\r\n      affectives,\r\n      psychomotors,\r\n      verb: verbs.value\r\n    };\r\n    clo.plos = [];\r\n    clo.cognitives = [];\r\n    clo.affectives = [];\r\n    clo.psychomotors = [];\r\n    for (let i in plos) {\r\n      clo.plos.push(plos[i].value);\r\n    }\r\n    for (let i in cognitives) {\r\n      clo.cognitives.push(cognitives[i].value);\r\n    }\r\n    for (let i in affectives) {\r\n      clo.affectives.push(affectives[i].value);\r\n    }\r\n    for (let i in psychomotors) {\r\n      clo.psychomotors.push(psychomotors[i].value);\r\n    }\r\n    console.log(clo);\r\n    this.props.addClos(clo);\r\n  };\r\n\r\n  verbsoptions = () => {\r\n    if (this.state.selectedcognitiveid === null) {\r\n      return null;\r\n    }\r\n    let verbsoptions = [];\r\n    console.log(this.props.cognitives);\r\n    for (let i in this.props.cognitives) {\r\n      //console.log(this.props.cognitives);\r\n      if (this.state.selectedcognitiveid === this.props.cognitives[i].id) {\r\n        for (let j in this.props.cognitives[i].verbs) {\r\n          verbsoptions.push({\r\n            value: this.props.cognitives[i].verbs[j],\r\n            label: this.props.cognitives[i].verbs[j]\r\n          });\r\n        }\r\n      }\r\n    }\r\n    //console.log(options)\r\n    return verbsoptions;\r\n  };\r\n\r\n  render() {\r\n    console.log(this.state.selectedcognitiveid);\r\n    console.log(this.verbsoptions());\r\n    // console.log(this.state.cognitives);\r\n    // console.log(this.props.cognitives);\r\n    const {\r\n      code,\r\n      description,\r\n      plos,\r\n      cognitives,\r\n      affectives,\r\n      psychomotors\r\n    } = this.state;\r\n    let optionplos = [];\r\n    let optioncognitives = [];\r\n    let optionaffectives = [];\r\n    let optionpsychomotors = [];\r\n    //console.log(this.props.plos.length);\r\n\r\n    if (this.props.plos.length > 0) {\r\n      for (let i in this.props.plos) {\r\n        optionplos.push({\r\n          value: this.props.plos[i].id,\r\n          label: this.props.plos[i].code\r\n        });\r\n      }\r\n    }\r\n    if (this.props.cognitives.length > 0) {\r\n      for (let i in this.props.cognitives) {\r\n        optioncognitives.push({\r\n          value: this.props.cognitives[i].id,\r\n          label: this.props.cognitives[i].code\r\n        });\r\n      }\r\n    }\r\n    if (this.props.affectives.length > 0) {\r\n      for (let i in this.props.affectives) {\r\n        optionaffectives.push({\r\n          value: this.props.affectives[i].id,\r\n          label: this.props.affectives[i].code\r\n        });\r\n      }\r\n    }\r\n\r\n    if (this.props.psychomotors.length > 0) {\r\n      for (let i in this.props.psychomotors) {\r\n        optionpsychomotors.push({\r\n          value: this.props.psychomotors[i].id,\r\n          label: this.props.psychomotors[i].code\r\n        });\r\n      }\r\n    }\r\n    return (\r\n      <div>\r\n        <h1>Add CLO</h1>\r\n        <form onSubmit={this.onSubmit}>\r\n          <div className=\"form-group\">\r\n            <label>code</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"code\"\r\n              onChange={this.onChange}\r\n              value={code}\r\n            ></input>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label>Description</label>\r\n            <input\r\n              className=\"form-control\"\r\n              type=\"text\"\r\n              name=\"description\"\r\n              onChange={this.onChange}\r\n              value={description}\r\n            ></input>\r\n            <label>Select PLO</label>\r\n            <Select\r\n              value={plos}\r\n              onChange={this.onChangeplos}\r\n              options={optionplos}\r\n              isMulti\r\n            />\r\n            <label>Select Cognitive Domain</label>\r\n            <Select\r\n              value={cognitives}\r\n              onChange={this.onChangecognitives}\r\n              options={optioncognitives}\r\n              isMulti\r\n            />\r\n            <label>Select Verb</label>\r\n            <Select\r\n              value={this.state.verbs}\r\n              onChange={this.onChangeverbs}\r\n              options={this.verbsoptions()}\r\n              isDisabled={false}\r\n            />\r\n            <label>Select Affective Domain</label>\r\n            <Select\r\n              value={affectives}\r\n              onChange={this.onChangeaffectives}\r\n              options={optionaffectives}\r\n              isMulti\r\n            />\r\n\r\n            <label>Select Psychomotor Domain</label>\r\n            <Select\r\n              value={psychomotors}\r\n              onChange={this.onChangepsychomotors}\r\n              options={optionpsychomotors}\r\n              isMulti\r\n            />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <button type=\"submit\" className=\"btn btn-primary\">\r\n              Submit\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  plos: state.plos.plos,\r\n  cognitives: state.cognitives.cognitives,\r\n  affectives: state.affectives.affectives,\r\n  psychomotors: state.psychomotors.psychomotors\r\n});\r\n\r\nexport default connect(mapStateToProps, {\r\n  addClos,\r\n  getPlos,\r\n  getCongitive,\r\n  getAffective,\r\n  getPsychomotor\r\n})(POSTCLO);\r\n"]},"metadata":{},"sourceType":"module"}
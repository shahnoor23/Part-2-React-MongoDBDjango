{"ast":null,"code":"import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';\nimport _classCallCheck from 'babel-runtime/helpers/classCallCheck';\nimport _createClass from 'babel-runtime/helpers/createClass';\nimport _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';\nimport _inherits from 'babel-runtime/helpers/inherits';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Touchable from 'rc-touchable';\n\nvar InputHandler = function (_Component) {\n  _inherits(InputHandler, _Component);\n\n  function InputHandler() {\n    _classCallCheck(this, InputHandler);\n\n    return _possibleConstructorReturn(this, (InputHandler.__proto__ || Object.getPrototypeOf(InputHandler)).apply(this, arguments));\n  }\n\n  _createClass(InputHandler, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props,\n          prefixCls = _props.prefixCls,\n          disabled = _props.disabled,\n          otherProps = _objectWithoutProperties(_props, ['prefixCls', 'disabled']);\n\n      return React.createElement(Touchable, {\n        disabled: disabled,\n        activeClassName: prefixCls + '-handler-active'\n      }, React.createElement('span', otherProps));\n    }\n  }]);\n\n  return InputHandler;\n}(Component);\n\nInputHandler.propTypes = {\n  prefixCls: PropTypes.string,\n  disabled: PropTypes.bool\n};\nexport default InputHandler;","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nimport * as React from 'react';\nimport { classNames } from '@progress/kendo-react-common';\nimport { getItemValue } from './utils'; // tslint:enable:max-line-length\n\n/**\n * @hidden\n */\n\nvar ListItem =\n/** @class */\nfunction (_super) {\n  __extends(ListItem, _super);\n\n  function ListItem() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.handleClick = function (e) {\n      return _this.props.onClick(_this.props.index, e);\n    };\n\n    return _this;\n  }\n\n  ListItem.prototype.render = function () {\n    var selected = this.props.selected;\n    var renderer = this.props.render || this.props.renderer;\n    var item = React.createElement(\"li\", {\n      id: this.props.id,\n      role: \"option\",\n      \"aria-selected\": selected,\n      className: classNames('k-item', {\n        'k-state-selected': selected,\n        'k-state-focused': this.props.focused\n      }),\n      onClick: this.handleClick\n    }, getItemValue(this.props.dataItem, this.props.textField).toString());\n    return renderer !== undefined ? renderer.call(undefined, item, this.props) : item;\n  };\n\n  return ListItem;\n}(React.Component);\n\nexport default ListItem;","map":null,"metadata":{},"sourceType":"module"}